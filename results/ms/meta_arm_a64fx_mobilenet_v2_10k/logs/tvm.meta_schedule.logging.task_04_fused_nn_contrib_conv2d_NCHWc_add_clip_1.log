2024-04-28 20:36:22 [INFO] [task_scheduler.cc:160] Initializing Task #4: "fused_nn_contrib_conv2d_NCHWc_add_clip_1"
2024-04-28 20:36:22 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4), T.int64(16), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)):
            with T.block("compute"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(T_add[v_i0, v_i1, v_i2, v_i3, v_i4])
                T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(T_add[v_i0, v_i1, v_i2, v_i3, v_i4], T.float32(6)), T.float32(0))
2024-04-28 20:36:22 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:36:22 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(4), T.int64(1), T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(16) + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(8) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)):
                with T.block("compute"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 6, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 16, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 8])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:36:22 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(4), T.int64(1), T.int64(4), T.int64(16), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(16) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(8) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(8), T.int64(1)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(24), oc_chunk_1 * T.int64(6) + ax1)
                        v_i2 = T.axis.spatial(T.int64(112), oh_0 * T.int64(16) + oh_1 + ax2)
                        v_i3 = T.axis.spatial(T.int64(112), ow_0 * T.int64(8) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 6, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 16, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 8])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-28 20:36:22 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(16) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(8) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(16), T.int64(8), T.int64(1)):
                    with T.block("compute"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(112), oh_0 * T.int64(16) + ax2)
                        v_i3 = T.axis.spatial(T.int64(112), ow_0 * T.int64(8) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 6, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 16, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 8])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-28 20:43:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:43:53 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:43:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 20:43:56 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 20:43:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 20:44:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 20:44:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 20:44:08 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 20:44:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9997  0.9987  0.9984  0.9981  0.9978  0.9972  0.9966  0.9964  0.9954  0.9951  0.9950  0.9946  0.9944  0.9939  0.9932
[17 : 32]:	0.9919  0.9917  0.9905  0.9900  0.9891  0.9890  0.9885  0.9883  0.9882  0.9872  0.9868  0.9868  0.9864  0.9859  0.9857  0.9851
[33 : 48]:	0.9847  0.9841  0.9840  0.9834  0.9830  0.9825  0.9806  0.9805  0.9800  0.9796  0.9789  0.9789  0.9786  0.9785  0.9778  0.9776
[49 : 64]:	0.9775  0.9774  0.9761  0.9760  0.9747  0.9739  0.9739  0.9738  0.9735  0.9733  0.9732  0.9725  0.9720  0.9719  0.9713  0.9690
2024-04-28 20:44:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:44:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #1: GFLOPs: 43.7787. Time: 962.7482 us. Best GFLOPs: 43.7787
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #2: GFLOPs: 7.1753. Time: 5874.0074 us. Best GFLOPs: 43.7787
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #3: GFLOPs: 58.4245. Time: 721.4069 us. Best GFLOPs: 58.4245
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #4: GFLOPs: 16.5598. Time: 2545.1865 us. Best GFLOPs: 58.4245
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #5: GFLOPs: 66.2545. Time: 636.1511 us. Best GFLOPs: 66.2545
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #6: GFLOPs: 22.2278. Time: 1896.1782 us. Best GFLOPs: 66.2545
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #7: GFLOPs: 69.0041. Time: 610.8022 us. Best GFLOPs: 69.0041
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #8: GFLOPs: 32.9409. Time: 1279.4986 us. Best GFLOPs: 69.0041
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #9: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused in T.parallel(T.int64(672), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(4), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(24) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(48) * T.int64(8) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(48) // T.int64(24) * T.int64(56) + ow_1 * T.int64(56) + ow_2_init * T.int64(8) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(24) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(48) * T.int64(8) + oh_1 * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(48) // T.int64(24) * T.int64(56) + ow_1 * T.int64(56) + ow_2 * T.int64(8) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(56)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("compute"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(24) + ax1)
                            v_i2 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(48) * T.int64(8) + oh_1 * T.int64(2) + ax2)
                            v_i3 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(48) // T.int64(24) * T.int64(56) + ax3)
                            v_i4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                            T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                            compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 24, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 4, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 8])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[4, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b67)
l104 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b105)
b126 = sch.decompose_reduction(block=b105, loop=l110)
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #10: GFLOPs: 72.4743. Time: 581.5557 us. Best GFLOPs: 72.4743
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #11: GFLOPs: 65.6436. Time: 642.0711 us. Best GFLOPs: 72.4743
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #12: GFLOPs: 87.3909. Time: 482.2907 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #13: GFLOPs: 79.0719. Time: 533.0320 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #14: GFLOPs: 55.8908. Time: 754.1099 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #15: GFLOPs: 39.4172. Time: 1069.2750 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #16: GFLOPs: 62.7053. Time: 672.1572 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #17: GFLOPs: 85.9836. Time: 490.1849 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #18: GFLOPs: 70.5446. Time: 597.4641 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #19: GFLOPs: 15.0863. Time: 2793.7874 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #20: GFLOPs: 77.4079. Time: 544.4901 us. Best GFLOPs: 87.3909
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #21: GFLOPs: 119.2831. Time: 353.3429 us. Best GFLOPs: 119.2831
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #22: GFLOPs: 0.9018. Time: 46739.4093 us. Best GFLOPs: 119.2831
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #23: GFLOPs: 128.6833. Time: 327.5316 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #24: GFLOPs: 83.9992. Time: 501.7650 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #25: GFLOPs: 14.7814. Time: 2851.4197 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #26: GFLOPs: 8.6297. Time: 4884.0398 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #27: GFLOPs: 46.7162. Time: 902.2108 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #28: GFLOPs: 34.9946. Time: 1204.4096 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #29: GFLOPs: 108.5339. Time: 388.3379 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #30: GFLOPs: 89.9645. Time: 468.4940 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #31: GFLOPs: 46.1492. Time: 913.2952 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #32: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(12), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(28), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), oh_1 * T.int64(28) + oh_2_init * T.int64(28) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(28) + ow_1 * T.int64(28) + ow_2_init * T.int64(4) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), oh_1 * T.int64(28) + oh_2 * T.int64(28) + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(28) + ow_1 * T.int64(28) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(112), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(8) + ax1)
                        v_i2 = T.axis.spatial(T.int64(112), ax2)
                        v_i3 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(28) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4_fused)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 4, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 1, 28])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 7, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[4, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #33: GFLOPs: 40.6837. Time: 1035.9891 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #34: GFLOPs: 99.9732. Time: 421.5913 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #35: GFLOPs: 72.2891. Time: 583.0459 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #36: GFLOPs: 87.7325. Time: 480.4131 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #37: GFLOPs: 24.0850. Time: 1749.9655 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #38: GFLOPs: 107.3771. Time: 392.5215 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #39: GFLOPs: 120.2697. Time: 350.4445 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #40: GFLOPs: 20.0929. Time: 2097.6531 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #41: GFLOPs: 101.1611. Time: 416.6406 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #42: GFLOPs: 97.7687. Time: 431.0974 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #43: GFLOPs: 93.4596. Time: 450.9737 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #44: GFLOPs: 12.9591. Time: 3252.3648 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #45: GFLOPs: 18.8249. Time: 2238.9452 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #46: GFLOPs: 36.5761. Time: 1152.3313 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #47: GFLOPs: 60.7486. Time: 693.8078 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #48: GFLOPs: 109.0897. Time: 386.3596 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #49: GFLOPs: 66.3235. Time: 635.4892 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #50: GFLOPs: 6.0234. Time: 6997.3907 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #51: GFLOPs: 82.9976. Time: 507.8201 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #52: GFLOPs: 99.0733. Time: 425.4209 us. Best GFLOPs: 128.6833
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #53: GFLOPs: 146.3429. Time: 288.0073 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #54: GFLOPs: 65.8458. Time: 640.0991 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #55: GFLOPs: 19.8078. Time: 2127.8429 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #56: GFLOPs: 12.0472. Time: 3498.5691 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #57: GFLOPs: 48.0166. Time: 877.7773 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #58: GFLOPs: 78.6743. Time: 535.7254 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #59: GFLOPs: 82.5877. Time: 510.3403 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #60: GFLOPs: 96.4360. Time: 437.0550 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #61: GFLOPs: 67.9042. Time: 620.6953 us. Best GFLOPs: 146.3429
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #62: GFLOPs: 201.8444. Time: 208.8136 us. Best GFLOPs: 201.8444
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #63: GFLOPs: 50.2280. Time: 839.1296 us. Best GFLOPs: 201.8444
2024-04-28 21:32:42 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #64: GFLOPs: 18.9938. Time: 2219.0274 us. Best GFLOPs: 201.8444
2024-04-28 21:49:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:49:05 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-28 21:49:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 21:49:07 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-28 21:49:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 21:49:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 21:49:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 21:49:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 21:49:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8243  0.8232  0.8128  0.8085  0.8010  0.7968  0.7963  0.7956  0.7947  0.7808  0.7802  0.7796  0.7693  0.7677  0.7673  0.7670
[17 : 32]:	0.7620  0.7520  0.7506  0.7504  0.7468  0.7389  0.7358  0.7346  0.7284  0.7256  0.7229  0.7199  0.7187  0.7172  0.7123  0.7120
[33 : 48]:	0.7112  0.7092  0.7035  0.7034  0.6995  0.6920  0.6901  0.6896  0.6888  0.6884  0.6881  0.6878  0.6862  0.6854  0.6841  0.6830
[49 : 64]:	0.6826  0.6819  0.6798  0.6782  0.6763  0.6751  0.6709  0.6683  0.6648  0.6633  0.6613  0.6606  0.6591  0.6572  0.6560  0.6542
2024-04-28 21:49:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:49:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #65: GFLOPs: 149.2155. Time: 282.4629 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #66: GFLOPs: 186.8791. Time: 225.5354 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #67: GFLOPs: 156.7669. Time: 268.8567 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #68: GFLOPs: 142.2891. Time: 296.2126 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #69: GFLOPs: 171.1188. Time: 246.3074 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #70: GFLOPs: 120.9119. Time: 348.5830 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #71: GFLOPs: 163.4706. Time: 257.8313 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #72: GFLOPs: 174.1814. Time: 241.9767 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #73: GFLOPs: 170.1358. Time: 247.7305 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #74: GFLOPs: 129.4195. Time: 325.6684 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #75: GFLOPs: 135.3300. Time: 311.4450 us. Best GFLOPs: 201.8444
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #76: GFLOPs: 226.5652. Time: 186.0296 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #77: GFLOPs: 203.0082. Time: 207.6164 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #78: GFLOPs: 108.9459. Time: 386.8693 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #79: GFLOPs: 138.1502. Time: 305.0870 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #80: GFLOPs: 179.0112. Time: 235.4480 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #81: GFLOPs: 97.2681. Time: 433.3162 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #82: GFLOPs: 117.5166. Time: 358.6545 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #83: GFLOPs: 175.5840. Time: 240.0437 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #84: GFLOPs: 126.2811. Time: 333.7620 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #85: GFLOPs: 134.1603. Time: 314.1604 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #86: GFLOPs: 200.6773. Time: 210.0280 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #87: GFLOPs: 105.6034. Time: 399.1143 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #88: GFLOPs: 142.3316. Time: 296.1243 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #89: GFLOPs: 154.4431. Time: 272.9021 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #90: GFLOPs: 162.1373. Time: 259.9515 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #91: GFLOPs: 82.3749. Time: 511.6590 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #92: GFLOPs: 135.9854. Time: 309.9439 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #93: GFLOPs: 142.3154. Time: 296.1580 us. Best GFLOPs: 226.5652
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #94: GFLOPs: 316.7848. Time: 133.0488 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #95: GFLOPs: 111.3222. Time: 378.6113 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #96: GFLOPs: 58.2798. Time: 723.1975 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #97: GFLOPs: 47.8535. Time: 880.7688 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #98: GFLOPs: 174.2970. Time: 241.8163 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #99: GFLOPs: 107.6222. Time: 391.6277 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #100: GFLOPs: 143.6065. Time: 293.4953 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #101: GFLOPs: 183.3571. Time: 229.8676 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #102: GFLOPs: 109.5976. Time: 384.5691 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #103: GFLOPs: 181.4529. Time: 232.2798 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #104: GFLOPs: 101.1395. Time: 416.7300 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #105: GFLOPs: 189.6666. Time: 222.2207 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #106: GFLOPs: 198.5723. Time: 212.2544 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #107: GFLOPs: 89.9584. Time: 468.5257 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #108: GFLOPs: 208.7744. Time: 201.8822 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #109: GFLOPs: 121.2722. Time: 347.5475 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #110: GFLOPs: 101.1843. Time: 416.5451 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #111: GFLOPs: 92.3947. Time: 456.1714 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #112: GFLOPs: 157.4167. Time: 267.7470 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #113: GFLOPs: 90.9271. Time: 463.5343 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #114: GFLOPs: 92.1142. Time: 457.5606 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #115: GFLOPs: 93.3618. Time: 451.4461 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #116: GFLOPs: 134.8568. Time: 312.5377 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #117: GFLOPs: 119.7459. Time: 351.9773 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #118: GFLOPs: 125.4624. Time: 335.9400 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #119: GFLOPs: 184.4448. Time: 228.5119 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #120: GFLOPs: 107.8620. Time: 390.7572 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #121: GFLOPs: 115.2698. Time: 365.6453 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #122: GFLOPs: 147.2399. Time: 286.2529 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #123: GFLOPs: 69.2637. Time: 608.5129 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #124: GFLOPs: 83.5458. Time: 504.4879 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #125: GFLOPs: 119.0661. Time: 353.9868 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #126: GFLOPs: 103.6406. Time: 406.6730 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #127: GFLOPs: 90.4493. Time: 465.9829 us. Best GFLOPs: 316.7848
2024-04-28 21:51:15 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #128: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(28)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(6) + oc_chunk_2_init * T.int64(6) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) * T.int64(4) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), ow_2_init * T.int64(28) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(28)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(6) + oc_chunk_2 * T.int64(6) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) * T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), ow_2 * T.int64(28) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(6), T.int64(4), T.int64(112)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(6) + ax1)
                        v_i2 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) * T.int64(4) + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 6])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 7, 4, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 28])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 22:39:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:39:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:39:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 22:39:08 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 22:39:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 22:39:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 22:39:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 22:39:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 22:39:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9661  0.9661  0.9407  0.8352  0.8167  0.7933  0.7404  0.7122  0.7089  0.6770  0.6717  0.6691  0.6666  0.6618  0.6603  0.6458
[17 : 32]:	0.6451  0.6451  0.6339  0.6305  0.6163  0.6083  0.6046  0.6012  0.6002  0.5977  0.5970  0.5969  0.5949  0.5942  0.5939  0.5935
[33 : 48]:	0.5928  0.5920  0.5877  0.5870  0.5868  0.5853  0.5853  0.5844  0.5843  0.5839  0.5818  0.5805  0.5776  0.5771  0.5766  0.5750
[49 : 64]:	0.5734  0.5728  0.5726  0.5721  0.5718  0.5675  0.5668  0.5667  0.5653  0.5629  0.5629  0.5608  0.5594  0.5587  0.5582  0.5581
2024-04-28 22:39:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:39:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #129: GFLOPs: 157.7495. Time: 267.1821 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #130: GFLOPs: 275.7236. Time: 152.8626 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #131: GFLOPs: 183.5304. Time: 229.6504 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #132: GFLOPs: 170.8523. Time: 246.6916 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #133: GFLOPs: 187.8550. Time: 224.3637 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #134: GFLOPs: 286.7944. Time: 146.9619 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #135: GFLOPs: 204.1436. Time: 206.4617 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #136: GFLOPs: 152.2356. Time: 276.8593 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #137: GFLOPs: 109.5351. Time: 384.7883 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #138: GFLOPs: 103.7786. Time: 406.1325 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #139: GFLOPs: 140.5697. Time: 299.8359 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #140: GFLOPs: 161.5925. Time: 260.8279 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #141: GFLOPs: 135.6197. Time: 310.7796 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #142: GFLOPs: 251.6621. Time: 167.4779 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #143: GFLOPs: 179.1669. Time: 235.2434 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #144: GFLOPs: 253.6427. Time: 166.1701 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #145: GFLOPs: 194.9908. Time: 216.1530 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #146: GFLOPs: 157.8416. Time: 267.0262 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #147: GFLOPs: 109.3132. Time: 385.5695 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #148: GFLOPs: 167.2385. Time: 252.0224 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #149: GFLOPs: 145.1652. Time: 290.3440 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #150: GFLOPs: 165.6341. Time: 254.4636 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #151: GFLOPs: 154.4763. Time: 272.8434 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #152: GFLOPs: 163.9677. Time: 257.0497 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #153: GFLOPs: 202.6585. Time: 207.9746 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #154: GFLOPs: 83.0415. Time: 507.5513 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #155: GFLOPs: 197.1098. Time: 213.8292 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #156: GFLOPs: 69.2649. Time: 608.5021 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #157: GFLOPs: 187.4113. Time: 224.8948 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #158: GFLOPs: 176.1795. Time: 239.2324 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #159: GFLOPs: 161.4953. Time: 260.9849 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #160: GFLOPs: 199.1885. Time: 211.5978 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #161: GFLOPs: 123.8419. Time: 340.3358 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #162: GFLOPs: 62.4884. Time: 674.4904 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #163: GFLOPs: 75.5800. Time: 557.6584 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #164: GFLOPs: 69.3379. Time: 607.8612 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #165: GFLOPs: 99.1756. Time: 424.9818 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #166: GFLOPs: 98.9201. Time: 426.0795 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #167: GFLOPs: 59.0160. Time: 714.1768 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #168: GFLOPs: 73.7524. Time: 571.4774 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #169: GFLOPs: 188.4215. Time: 223.6892 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #170: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(24), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(8) + oh_1 * T.int64(4) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) * T.int64(8) + ow_1 * T.int64(8) + ow_2_init * T.int64(4) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(8) + oh_1 * T.int64(4) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(4) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(24), T.int64(8)):
                for ax3_ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("compute"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(8) + ax2)
                        v_i3 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) * T.int64(8) + ax3_ax4_fused // T.int64(4))
                        v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 24, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 2, 4, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 2, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #171: GFLOPs: 92.7038. Time: 454.6508 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #172: GFLOPs: 170.7108. Time: 246.8961 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #173: GFLOPs: 109.1157. Time: 386.2675 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #174: GFLOPs: 107.3990. Time: 392.4415 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #175: GFLOPs: 203.3512. Time: 207.2663 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #176: GFLOPs: 143.9415. Time: 292.8124 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #177: GFLOPs: 187.9319. Time: 224.2719 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #178: GFLOPs: 170.9366. Time: 246.5700 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #179: GFLOPs: 166.2966. Time: 253.4497 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #180: GFLOPs: 195.9519. Time: 215.0928 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #181: GFLOPs: 97.4689. Time: 432.4237 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #182: GFLOPs: 177.9465. Time: 236.8568 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #183: GFLOPs: 189.9939. Time: 221.8378 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #184: GFLOPs: 174.6173. Time: 241.3727 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #185: GFLOPs: 146.4005. Time: 287.8942 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #186: GFLOPs: 147.6960. Time: 285.3688 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #187: GFLOPs: 184.0946. Time: 228.9466 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #188: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(1344), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(112), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(672) * T.int64(12) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(84) // T.int64(14) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(672) // T.int64(84) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(112), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(672) * T.int64(12) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(84) // T.int64(14) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(672) // T.int64(84) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(112)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("compute"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(672) * T.int64(12) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(84) // T.int64(14) * T.int64(2) + ax1)
                            v_i2 = T.axis.spatial(T.int64(112), ax2)
                            v_i3 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(672) // T.int64(84) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14))
                            v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                            T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                            compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 6, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 112, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[8, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #189: GFLOPs: 197.7221. Time: 213.1671 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #190: GFLOPs: 185.6500. Time: 227.0285 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #191: GFLOPs: 5.7803. Time: 7291.5764 us. Best GFLOPs: 316.7848
2024-04-28 22:41:18 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #192: GFLOPs: 81.3693. Time: 517.9824 us. Best GFLOPs: 316.7848
2024-04-28 23:24:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:24:29 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:24:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:24:32 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:24:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:24:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:24:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:24:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:24:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9396  0.7800  0.7800  0.7782  0.7777  0.7379  0.7319  0.7170  0.7149  0.7047  0.6999  0.6986  0.6931  0.6520  0.6505  0.6491
[17 : 32]:	0.6447  0.6431  0.6391  0.6390  0.6363  0.6307  0.6307  0.6278  0.6243  0.6233  0.6232  0.6220  0.6181  0.6095  0.6034  0.6002
[33 : 48]:	0.6001  0.5996  0.5990  0.5971  0.5968  0.5948  0.5937  0.5929  0.5927  0.5923  0.5894  0.5885  0.5869  0.5864  0.5856  0.5843
[49 : 64]:	0.5823  0.5820  0.5813  0.5789  0.5784  0.5772  0.5752  0.5748  0.5748  0.5746  0.5725  0.5707  0.5685  0.5680  0.5676  0.5647
2024-04-28 23:24:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:24:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #193: GFLOPs: 316.9009. Time: 133.0000 us. Best GFLOPs: 316.9009
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #194: GFLOPs: 259.6749. Time: 162.3100 us. Best GFLOPs: 316.9009
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #195: GFLOPs: 198.4976. Time: 212.3343 us. Best GFLOPs: 316.9009
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #196: GFLOPs: 105.2655. Time: 400.3955 us. Best GFLOPs: 316.9009
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #197: GFLOPs: 320.3208. Time: 131.5801 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #198: GFLOPs: 187.0446. Time: 225.3358 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #199: GFLOPs: 259.5685. Time: 162.3765 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #200: GFLOPs: 189.8802. Time: 221.9707 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #201: GFLOPs: 297.9242. Time: 141.4717 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #202: GFLOPs: 154.9677. Time: 271.9782 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #203: GFLOPs: 318.0330. Time: 132.5266 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #204: GFLOPs: 278.4029. Time: 151.3915 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #205: GFLOPs: 191.3956. Time: 220.2132 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #206: GFLOPs: 252.9077. Time: 166.6530 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #207: GFLOPs: 120.1790. Time: 350.7090 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #208: GFLOPs: 220.7886. Time: 190.8968 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #209: GFLOPs: 244.9755. Time: 172.0492 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #210: GFLOPs: 145.1922. Time: 290.2900 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #211: GFLOPs: 115.2802. Time: 365.6122 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #212: GFLOPs: 191.6629. Time: 219.9060 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #213: GFLOPs: 143.3315. Time: 294.0584 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #214: GFLOPs: 173.9613. Time: 242.2829 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #215: GFLOPs: 223.4375. Time: 188.6337 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #216: GFLOPs: 183.3040. Time: 229.9341 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #217: GFLOPs: 77.2732. Time: 545.4393 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #218: GFLOPs: 190.3753. Time: 221.3934 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #219: GFLOPs: 241.0580. Time: 174.8452 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #220: GFLOPs: 179.3559. Time: 234.9956 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #221: GFLOPs: 133.3121. Time: 316.1591 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #222: GFLOPs: 227.9549. Time: 184.8955 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #223: GFLOPs: 221.5197. Time: 190.2668 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #224: GFLOPs: 114.2669. Time: 368.8542 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #225: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused in T.parallel(T.int64(588), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(8), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(98) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(98) // T.int64(14) * T.int64(16) + oh_1 * T.int64(8) + oh_2_init * T.int64(8) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(14) // T.int64(2) * T.int64(16) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(98) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(98) // T.int64(14) * T.int64(16) + oh_1 * T.int64(8) + oh_2 * T.int64(8) + oh_3)
                            v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(14) // T.int64(2) * T.int64(16) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(8)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("compute"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(98) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(2) * T.int64(2) + ax1)
                            v_i2 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(98) // T.int64(14) * T.int64(16) + oh_1 * T.int64(8) + ax2)
                            v_i3 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(14) // T.int64(2) * T.int64(16) + ow_1 * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                            T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                            compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 2, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 8])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 8, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=294)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b67)
l105 = sch.fuse(l103, l104, preserve_unit_iters=True)
sch.vectorize(loop=l105)
b106 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b106)
b127 = sch.decompose_reduction(block=b106, loop=l111)
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #226: GFLOPs: 239.0186. Time: 176.3371 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #227: GFLOPs: 74.4815. Time: 565.8831 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #228: GFLOPs: 178.9232. Time: 235.5639 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #229: GFLOPs: 166.3136. Time: 253.4238 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #230: GFLOPs: 103.9224. Time: 405.5704 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #231: GFLOPs: 155.7737. Time: 270.5709 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #232: GFLOPs: 192.4440. Time: 219.0135 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #233: GFLOPs: 212.7688. Time: 198.0922 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #234: GFLOPs: 155.6153. Time: 270.8463 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #235: GFLOPs: 137.6437. Time: 306.2096 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #236: GFLOPs: 109.7529. Time: 384.0247 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #237: GFLOPs: 193.8506. Time: 217.4243 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #238: GFLOPs: 112.8555. Time: 373.4673 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #239: GFLOPs: 190.9717. Time: 220.7020 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #240: GFLOPs: 227.8287. Time: 184.9979 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #241: GFLOPs: 184.5731. Time: 228.3532 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #242: GFLOPs: 141.5683. Time: 297.7209 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #243: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused in T.parallel(T.int64(588), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(16) + oh_1 * T.int64(8) + oh_2_init * T.int64(8) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(16) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(16) + oh_1 * T.int64(8) + oh_2 * T.int64(8) + oh_3)
                            v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(16) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(8)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("compute"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) * T.int64(2) + ax1)
                            v_i2 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(16) + oh_1 * T.int64(8) + ax2)
                            v_i3 = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(16) + ow_1 * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                            T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                            compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[12, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 8])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 8, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=294)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b67)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
sch.vectorize(loop=l108)
b109 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b109)
b133 = sch.decompose_reduction(block=b109, loop=l117)
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #244: GFLOPs: 230.5947. Time: 182.7789 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #245: GFLOPs: 177.7401. Time: 237.1318 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #246: GFLOPs: 113.9733. Time: 369.8045 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #247: GFLOPs: 200.7298. Time: 209.9730 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #248: GFLOPs: 206.1724. Time: 204.4300 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #249: GFLOPs: 101.4972. Time: 415.2609 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #250: GFLOPs: 206.4249. Time: 204.1800 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #251: GFLOPs: 163.5211. Time: 257.7517 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #252: GFLOPs: 153.3001. Time: 274.9368 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #253: GFLOPs: 189.1893. Time: 222.7813 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #254: GFLOPs: 64.1173. Time: 657.3549 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #255: GFLOPs: 83.9563. Time: 502.0210 us. Best GFLOPs: 320.3208
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #256: GFLOPs: 126.8465. Time: 332.2745 us. Best GFLOPs: 320.3208
2024-04-28 23:39:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:39:25 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:39:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:39:27 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:39:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:39:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:39:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:39:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-28 23:39:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9030  0.8536  0.8170  0.8106  0.8094  0.7963  0.7873  0.7564  0.7419  0.7408  0.7349  0.7283  0.7263  0.7240  0.7225  0.7110
[17 : 32]:	0.6965  0.6944  0.6931  0.6865  0.6860  0.6853  0.6807  0.6788  0.6779  0.6719  0.6718  0.6712  0.6668  0.6658  0.6638  0.6633
[33 : 48]:	0.6632  0.6541  0.6531  0.6528  0.6528  0.6522  0.6498  0.6498  0.6487  0.6477  0.6417  0.6414  0.6385  0.6383  0.6378  0.6334
[49 : 64]:	0.6333  0.6313  0.6313  0.6304  0.6300  0.6299  0.6295  0.6287  0.6263  0.6262  0.6261  0.6241  0.6237  0.6219  0.6213  0.6198
2024-04-28 23:39:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:39:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #257: GFLOPs: 301.5204. Time: 139.7844 us. Best GFLOPs: 320.3208
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #258: GFLOPs: 100.3580. Time: 419.9749 us. Best GFLOPs: 320.3208
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #259: GFLOPs: 298.3572. Time: 141.2664 us. Best GFLOPs: 320.3208
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #260: GFLOPs: 173.1454. Time: 243.4245 us. Best GFLOPs: 320.3208
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #261: GFLOPs: 323.1914. Time: 130.4114 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #262: GFLOPs: 292.9398. Time: 143.8789 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #263: GFLOPs: 280.8124. Time: 150.0925 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #264: GFLOPs: 157.4757. Time: 267.6466 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #265: GFLOPs: 227.5441. Time: 185.2293 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #266: GFLOPs: 312.7299. Time: 134.7739 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #267: GFLOPs: 190.8371. Time: 220.8577 us. Best GFLOPs: 323.1914
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #268: GFLOPs: 336.3507. Time: 125.3092 us. Best GFLOPs: 336.3507
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #269: GFLOPs: 158.9517. Time: 265.1613 us. Best GFLOPs: 336.3507
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #270: GFLOPs: 329.0744. Time: 128.0800 us. Best GFLOPs: 336.3507
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #271: GFLOPs: 360.2341. Time: 117.0012 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #272: GFLOPs: 114.2270. Time: 368.9831 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #273: GFLOPs: 169.7024. Time: 248.3632 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #274: GFLOPs: 328.8812. Time: 128.1552 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #275: GFLOPs: 186.1981. Time: 226.3602 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #276: GFLOPs: 207.0524. Time: 203.5612 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #277: GFLOPs: 223.1601. Time: 188.8681 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #278: GFLOPs: 201.6408. Time: 209.0244 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #279: GFLOPs: 341.0048. Time: 123.5989 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #280: GFLOPs: 198.2478. Time: 212.6018 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #281: GFLOPs: 224.7538. Time: 187.5290 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #282: GFLOPs: 182.5373. Time: 230.8999 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #283: GFLOPs: 213.1453. Time: 197.7423 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #284: GFLOPs: 140.6946. Time: 299.5696 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #285: GFLOPs: 172.7172. Time: 244.0280 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #286: GFLOPs: 94.7558. Time: 444.8048 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #287: GFLOPs: 101.9098. Time: 413.5797 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #288: GFLOPs: 119.7349. Time: 352.0097 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #289: GFLOPs: 113.5899. Time: 371.0528 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #290: GFLOPs: 82.0865. Time: 513.4561 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #291: GFLOPs: 197.4852. Time: 213.4228 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #292: GFLOPs: 122.8984. Time: 342.9487 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #293: GFLOPs: 202.6531. Time: 207.9802 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #294: GFLOPs: 214.2150. Time: 196.7549 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #295: GFLOPs: 285.7387. Time: 147.5048 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #296: GFLOPs: 288.3562. Time: 146.1659 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #297: GFLOPs: 177.8031. Time: 237.0479 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #298: GFLOPs: 144.0530. Time: 292.5856 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #299: GFLOPs: 221.4910. Time: 190.2914 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #300: GFLOPs: 285.1348. Time: 147.8173 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #301: GFLOPs: 213.6481. Time: 197.2770 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #302: GFLOPs: 279.0056. Time: 151.0645 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #303: GFLOPs: 288.3616. Time: 146.1631 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #304: GFLOPs: 219.7979. Time: 191.7572 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #305: GFLOPs: 229.7762. Time: 183.4300 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #306: GFLOPs: 277.4497. Time: 151.9116 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #307: GFLOPs: 200.1858. Time: 210.5436 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #308: GFLOPs: 114.5127. Time: 368.0625 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #309: GFLOPs: 75.5430. Time: 557.9321 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #310: GFLOPs: 115.2162. Time: 365.8153 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #311: GFLOPs: 78.9768. Time: 533.6734 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #312: GFLOPs: 124.6399. Time: 338.1569 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #313: GFLOPs: 170.6156. Time: 247.0339 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #314: GFLOPs: 175.9647. Time: 239.5244 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #315: GFLOPs: 165.4270. Time: 254.7821 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #316: GFLOPs: 141.6870. Time: 297.4715 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #317: GFLOPs: 213.7333. Time: 197.1983 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #318: GFLOPs: 219.4675. Time: 192.0459 us. Best GFLOPs: 360.2341
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #319: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(2688), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(84) // T.int64(28) * T.int64(8) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(168) * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(28) * T.int64(4) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(168) // T.int64(84) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(84) // T.int64(28) * T.int64(8) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(168) * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(28) * T.int64(4) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(168) // T.int64(84) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for i0_i1_i2_i3_i4_fused_0 in T.parallel(T.int64(18816)):
            for i0_i1_i2_i3_i4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("compute"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(24), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) // T.int64(50176))
                    v_i2 = T.axis.spatial(T.int64(112), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(50176) // T.int64(448))
                    v_i3 = T.axis.spatial(T.int64(112), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(448) // T.int64(4))
                    v_i4 = T.axis.spatial(T.int64(4), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 3, 8, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[16, 1, 1, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 28, 4, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b102)
b121 = sch.decompose_reduction(block=b102, loop=l105)
2024-04-28 23:41:47 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #320: GFLOPs: 73.9196. Time: 570.1849 us. Best GFLOPs: 360.2341
2024-04-29 00:40:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:40:22 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:40:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 00:40:24 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:40:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 00:40:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 00:40:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 00:40:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 00:40:49 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9669  0.8957  0.8845  0.8760  0.8679  0.8660  0.8553  0.8469  0.8445  0.8443  0.8276  0.8276  0.8264  0.8249  0.8249  0.8213
[17 : 32]:	0.8203  0.8053  0.7953  0.7943  0.7931  0.7915  0.7891  0.7866  0.7866  0.7696  0.7687  0.7625  0.7582  0.7575  0.7575  0.7559
[33 : 48]:	0.7509  0.7503  0.7488  0.7423  0.7151  0.7114  0.7102  0.7076  0.7066  0.7039  0.7038  0.7038  0.7038  0.7026  0.7009  0.6997
[49 : 64]:	0.6900  0.6867  0.6849  0.6791  0.6790  0.6712  0.6696  0.6596  0.6584  0.6579  0.6579  0.6572  0.6543  0.6478  0.6471  0.6471
2024-04-29 00:40:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:40:50 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #321: GFLOPs: 315.3507. Time: 133.6539 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #322: GFLOPs: 309.3058. Time: 136.2659 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #323: GFLOPs: 347.3374. Time: 121.3455 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #324: GFLOPs: 329.4709. Time: 127.9259 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #325: GFLOPs: 324.6484. Time: 129.8261 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #326: GFLOPs: 162.7350. Time: 258.9968 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #327: GFLOPs: 312.0392. Time: 135.0723 us. Best GFLOPs: 360.2341
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #328: GFLOPs: 387.8219. Time: 108.6783 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #329: GFLOPs: 157.3135. Time: 267.9226 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #330: GFLOPs: 317.3956. Time: 132.7928 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #331: GFLOPs: 294.1339. Time: 143.2947 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #332: GFLOPs: 283.6215. Time: 148.6060 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #333: GFLOPs: 305.2204. Time: 138.0899 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #334: GFLOPs: 323.1929. Time: 130.4108 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #335: GFLOPs: 325.9389. Time: 129.3121 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #336: GFLOPs: 267.2146. Time: 157.7303 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #337: GFLOPs: 387.2154. Time: 108.8486 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #338: GFLOPs: 325.2336. Time: 129.5925 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #339: GFLOPs: 312.8333. Time: 134.7294 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #340: GFLOPs: 314.0242. Time: 134.2185 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #341: GFLOPs: 338.7594. Time: 124.4182 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #342: GFLOPs: 291.0754. Time: 144.8004 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #343: GFLOPs: 335.0152. Time: 125.8087 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #344: GFLOPs: 213.4103. Time: 197.4968 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #345: GFLOPs: 219.6119. Time: 191.9196 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #346: GFLOPs: 348.0108. Time: 121.1107 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #347: GFLOPs: 255.9633. Time: 164.6636 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #348: GFLOPs: 292.4481. Time: 144.1208 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #349: GFLOPs: 169.9664. Time: 247.9774 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #350: GFLOPs: 172.0907. Time: 244.9164 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #351: GFLOPs: 149.9978. Time: 280.9897 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #352: GFLOPs: 295.3337. Time: 142.7126 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #353: GFLOPs: 180.5661. Time: 233.4206 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #354: GFLOPs: 188.7045. Time: 223.3536 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #355: GFLOPs: 321.1709. Time: 131.2318 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #356: GFLOPs: 354.4593. Time: 118.9074 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #357: GFLOPs: 178.3783. Time: 236.2834 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #358: GFLOPs: 304.5434. Time: 138.3968 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #359: GFLOPs: 311.5132. Time: 135.3003 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #360: GFLOPs: 291.8138. Time: 144.4340 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #361: GFLOPs: 287.5507. Time: 146.5754 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #362: GFLOPs: 273.4698. Time: 154.1224 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #363: GFLOPs: 260.4286. Time: 161.8403 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #364: GFLOPs: 218.1908. Time: 193.1697 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #365: GFLOPs: 235.9521. Time: 178.6288 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #366: GFLOPs: 287.0300. Time: 146.8412 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #367: GFLOPs: 287.8399. Time: 146.4281 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #368: GFLOPs: 305.8374. Time: 137.8113 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #369: GFLOPs: 219.7249. Time: 191.8210 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #370: GFLOPs: 194.6579. Time: 216.5226 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #371: GFLOPs: 184.2358. Time: 228.7712 us. Best GFLOPs: 387.8219
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #372: GFLOPs: 398.7131. Time: 105.7097 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #373: GFLOPs: 305.3052. Time: 138.0515 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #374: GFLOPs: 211.2912. Time: 199.4775 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #375: GFLOPs: 221.1348. Time: 190.5979 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #376: GFLOPs: 291.1128. Time: 144.7818 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #377: GFLOPs: 195.3118. Time: 215.7977 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #378: GFLOPs: 240.9154. Time: 174.9487 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #379: GFLOPs: 229.1677. Time: 183.9170 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #380: GFLOPs: 99.5045. Time: 423.5773 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #381: GFLOPs: 159.1569. Time: 264.8194 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #382: GFLOPs: 60.5275. Time: 696.3420 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #383: GFLOPs: 69.1754. Time: 609.2894 us. Best GFLOPs: 398.7131
2024-04-29 00:42:45 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #384: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(4), T.int64(112), T.int64(112), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(784), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(12), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(16) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(8), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(16) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(16), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for i0_i1_i2_i3_i4_fused_0 in T.parallel(T.int64(18816)):
            for i0_i1_i2_i3_i4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("compute"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(24), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) // T.int64(50176))
                    v_i2 = T.axis.spatial(T.int64(112), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(50176) // T.int64(448))
                    v_i3 = T.axis.spatial(T.int64(112), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(448) // T.int64(4))
                    v_i4 = T.axis.spatial(T.int64(4), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 12, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[28, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 8, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 01:34:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:34:48 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:34:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 01:34:50 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:34:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 01:35:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 01:35:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 01:35:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x55a9538)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x55b10d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c87a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x55da488)]: 0 failure(s)
2024-04-29 01:35:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8665  0.8591  0.8546  0.8340  0.8314  0.8290  0.8229  0.8225  0.8223  0.8070  0.8053  0.8053  0.8051  0.8023  0.8014  0.8012
[17 : 32]:	0.7999  0.7964  0.7964  0.7957  0.7947  0.7947  0.7941  0.7925  0.7795  0.7768  0.7752  0.7745  0.7720  0.7702  0.7701  0.7675
[33 : 48]:	0.7653  0.7639  0.7600  0.7600  0.7595  0.7582  0.7580  0.7549  0.7534  0.7523  0.7434  0.7385  0.7373  0.7358  0.7306  0.7306
[49 : 64]:	0.7306  0.7306  0.7296  0.7296  0.7296  0.7274  0.7260  0.7254  0.7226  0.7196  0.7151  0.7120  0.7119  0.7118  0.7096  0.7094
2024-04-29 01:35:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:35:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #385: GFLOPs: 337.0332. Time: 125.0555 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #386: GFLOPs: 340.3351. Time: 123.8422 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #387: GFLOPs: 339.7302. Time: 124.0627 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #388: GFLOPs: 348.7094. Time: 120.8681 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #389: GFLOPs: 344.4399. Time: 122.3663 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #390: GFLOPs: 338.6347. Time: 124.4640 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #391: GFLOPs: 175.1068. Time: 240.6980 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #392: GFLOPs: 326.8749. Time: 128.9418 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #393: GFLOPs: 339.6959. Time: 124.0752 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #394: GFLOPs: 267.7547. Time: 157.4122 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #395: GFLOPs: 336.8276. Time: 125.1318 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #396: GFLOPs: 294.1035. Time: 143.3096 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #397: GFLOPs: 358.1444. Time: 117.6839 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #398: GFLOPs: 309.9174. Time: 135.9970 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #399: GFLOPs: 349.9672. Time: 120.4337 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #400: GFLOPs: 311.5846. Time: 135.2693 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #401: GFLOPs: 318.4814. Time: 132.3400 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #402: GFLOPs: 351.5765. Time: 119.8824 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #403: GFLOPs: 307.9228. Time: 136.8780 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #404: GFLOPs: 141.7619. Time: 297.3144 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #405: GFLOPs: 321.8903. Time: 130.9385 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #406: GFLOPs: 298.3322. Time: 141.2782 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #407: GFLOPs: 372.2041. Time: 113.2385 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #408: GFLOPs: 232.5450. Time: 181.2459 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #409: GFLOPs: 296.9203. Time: 141.9500 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #410: GFLOPs: 292.5713. Time: 144.0601 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #411: GFLOPs: 287.3217. Time: 146.6921 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #412: GFLOPs: 314.9810. Time: 133.8108 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #413: GFLOPs: 344.2506. Time: 122.4336 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #414: GFLOPs: 185.6420. Time: 227.0383 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #415: GFLOPs: 285.8360. Time: 147.4546 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #416: GFLOPs: 294.9443. Time: 142.9010 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #417: GFLOPs: 279.3072. Time: 150.9014 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #418: GFLOPs: 324.0575. Time: 130.0628 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #419: GFLOPs: 311.8334. Time: 135.1614 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #420: GFLOPs: 316.3050. Time: 133.2506 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #421: GFLOPs: 302.7833. Time: 139.2013 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #422: GFLOPs: 310.0742. Time: 135.9282 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #423: GFLOPs: 304.6210. Time: 138.3616 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #424: GFLOPs: 289.6124. Time: 145.5319 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #425: GFLOPs: 305.0948. Time: 138.1467 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #426: GFLOPs: 314.8260. Time: 133.8766 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #427: GFLOPs: 175.3589. Time: 240.3519 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #428: GFLOPs: 324.2263. Time: 129.9951 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #429: GFLOPs: 310.0406. Time: 135.9430 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #430: GFLOPs: 316.4169. Time: 133.2035 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #431: GFLOPs: 267.8305. Time: 157.3676 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #432: GFLOPs: 273.0563. Time: 154.3559 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #433: GFLOPs: 295.1959. Time: 142.7792 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #434: GFLOPs: 295.8480. Time: 142.4645 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #435: GFLOPs: 322.6845. Time: 130.6163 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #436: GFLOPs: 314.4436. Time: 134.0394 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #437: GFLOPs: 322.7908. Time: 130.5733 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #438: GFLOPs: 331.8027. Time: 127.0268 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #439: GFLOPs: 169.2393. Time: 249.0429 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #440: GFLOPs: 137.9661. Time: 305.4942 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #441: GFLOPs: 333.6208. Time: 126.3346 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #442: GFLOPs: 204.0039. Time: 206.6031 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #443: GFLOPs: 113.5242. Time: 371.2674 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #444: GFLOPs: 322.2996. Time: 130.7722 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #445: GFLOPs: 229.9898. Time: 183.2596 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #446: GFLOPs: 91.8265. Time: 458.9942 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #447: GFLOPs: 22.3140. Time: 1888.8512 us. Best GFLOPs: 398.7131
2024-04-29 01:36:56 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_NCHWc_add_clip_1] Trial #448: GFLOPs: 75.9023. Time: 555.2908 us. Best GFLOPs: 398.7131
