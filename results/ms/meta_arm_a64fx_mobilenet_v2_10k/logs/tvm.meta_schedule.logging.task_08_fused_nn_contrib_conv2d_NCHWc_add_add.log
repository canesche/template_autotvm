2024-04-28 20:36:40 [INFO] [task_scheduler.cc:160] Initializing Task #8: "fused_nn_contrib_conv2d_NCHWc_add_add"
2024-04-28 20:36:40 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4), T.int64(144), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
2024-04-28 20:36:40 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:36:40 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(3), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(9), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(8) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)):
                with T.block("T_add_1"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[9, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:36:40 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(3), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(9), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(8) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(4), T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(2) + oc_chunk_1 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + oh_1 * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ow_0 * T.int64(8) + ow_1 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[9, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-28 20:36:40 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(3), T.int64(2), T.int64(7), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(9), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(8) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(28), T.int64(8), T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ow_0 * T.int64(8) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[9, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-28 20:51:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:51:06 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:51:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 20:51:09 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 20:51:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 20:51:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 20:51:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 20:51:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 20:51:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9981  0.9978  0.9976  0.9974  0.9970  0.9967  0.9954  0.9952  0.9952  0.9948  0.9942  0.9937  0.9932  0.9931  0.9926  0.9917
[17 : 32]:	0.9915  0.9900  0.9893  0.9889  0.9885  0.9880  0.9878  0.9877  0.9875  0.9873  0.9873  0.9866  0.9860  0.9859  0.9858  0.9857
[33 : 48]:	0.9849  0.9836  0.9833  0.9831  0.9828  0.9828  0.9827  0.9823  0.9819  0.9819  0.9819  0.9814  0.9809  0.9806  0.9806  0.9800
[49 : 64]:	0.9799  0.9798  0.9792  0.9781  0.9779  0.9777  0.9771  0.9771  0.9769  0.9767  0.9762  0.9756  0.9750  0.9736  0.9735  0.9735
2024-04-28 20:51:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:51:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #1: GFLOPs: 6.6891. Time: 3263.0166 us. Best GFLOPs: 6.6891
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #2: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(168), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) * T.int64(4) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), ow_2_init * T.int64(8) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(9), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) * T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_2 * T.int64(8) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(9) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(56)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 4, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 8])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 9])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #3: GFLOPs: 55.6053. Time: 392.5267 us. Best GFLOPs: 55.6053
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #4: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(64), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(3), T.int64(2), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(3) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(14) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(14), T.int64(2), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(3) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(14) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(12) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(3), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(3) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(14) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 3, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 14, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[12, 12])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #5: GFLOPs: 28.6742. Time: 761.1922 us. Best GFLOPs: 55.6053
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #6: GFLOPs: 78.2035. Time: 279.0996 us. Best GFLOPs: 78.2035
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #7: GFLOPs: 52.3323. Time: 417.0761 us. Best GFLOPs: 78.2035
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #8: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(48), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(28), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(24) // T.int64(8) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2_init * T.int64(28) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(24) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(28), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(24) // T.int64(8) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2 * T.int64(28) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(24) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(28), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(24) // T.int64(8) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(14) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(24) * T.int64(2) + ax4_fused)
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 3, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 28])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[3, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #9: GFLOPs: 24.8612. Time: 877.9367 us. Best GFLOPs: 78.2035
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #10: GFLOPs: 17.7231. Time: 1231.5342 us. Best GFLOPs: 78.2035
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #11: GFLOPs: 5.4597. Time: 3997.7368 us. Best GFLOPs: 78.2035
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #12: GFLOPs: 92.0113. Time: 237.2160 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #13: GFLOPs: 35.5835. Time: 613.3900 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #14: GFLOPs: 44.3269. Time: 492.4003 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #15: GFLOPs: 83.0598. Time: 262.7814 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #16: GFLOPs: 91.1541. Time: 239.4468 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #17: GFLOPs: 54.0552. Time: 403.7824 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #18: GFLOPs: 3.6125. Time: 6041.8887 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #19: GFLOPs: 3.1289. Time: 6975.7814 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #20: GFLOPs: 55.5663. Time: 392.8023 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #21: GFLOPs: 62.8329. Time: 347.3745 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #22: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(24), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(28), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2_init * T.int64(28) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(28), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2 * T.int64(28) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(28)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(14) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 3, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 28])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[3, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #23: GFLOPs: 9.1434. Time: 2387.1350 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #24: GFLOPs: 55.4582. Time: 393.5679 us. Best GFLOPs: 92.0113
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #25: GFLOPs: 94.6270. Time: 230.6589 us. Best GFLOPs: 94.6270
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #26: GFLOPs: 44.5885. Time: 489.5115 us. Best GFLOPs: 94.6270
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #27: GFLOPs: 54.5545. Time: 400.0876 us. Best GFLOPs: 94.6270
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #28: GFLOPs: 4.4635. Time: 4889.9618 us. Best GFLOPs: 94.6270
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #29: GFLOPs: 116.1782. Time: 187.8714 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #30: GFLOPs: 82.3190. Time: 265.1461 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #31: GFLOPs: 69.1122. Time: 315.8136 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #32: GFLOPs: 39.1429. Time: 557.6122 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #33: GFLOPs: 52.5361. Time: 415.4582 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #34: GFLOPs: 38.1287. Time: 572.4450 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #35: GFLOPs: 63.2433. Time: 345.1208 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #36: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(56), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(3) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(4) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(144), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(3) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(4) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(144), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1176)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add_1"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12544))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12544) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 2, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 56, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[144, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #37: GFLOPs: 13.9881. Time: 1560.3610 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #38: GFLOPs: 78.3581. Time: 278.5487 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #39: GFLOPs: 17.9249. Time: 1217.6652 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #40: GFLOPs: 19.7162. Time: 1107.0390 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #41: GFLOPs: 48.9658. Time: 445.7515 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #42: GFLOPs: 78.5775. Time: 277.7712 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #43: GFLOPs: 36.2395. Time: 602.2872 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #44: GFLOPs: 43.1946. Time: 505.3081 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #45: GFLOPs: 21.1193. Time: 1033.4873 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #46: GFLOPs: 19.7625. Time: 1104.4409 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #47: GFLOPs: 2.9452. Time: 7410.9549 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #48: GFLOPs: 54.7601. Time: 398.5850 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #49: GFLOPs: 45.0541. Time: 484.4522 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #50: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(36), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(36), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_1 * T.int64(3) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(4) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), ow_1 * T.int64(28) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(14), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_1 * T.int64(3) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(4) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_1 * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(144), ic_0 * T.int64(18) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(6), T.int64(4), T.int64(56)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_add_1"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(4) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + (conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 3, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 4, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 14, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #51: GFLOPs: 66.7962. Time: 326.7635 us. Best GFLOPs: 116.1782
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #52: GFLOPs: 117.1594. Time: 186.2980 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #53: GFLOPs: 23.8811. Time: 913.9693 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #54: GFLOPs: 31.3252. Time: 696.7725 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #55: GFLOPs: 3.8744. Time: 5633.5718 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #56: GFLOPs: 54.1340. Time: 403.1948 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #57: GFLOPs: 16.2727. Time: 1341.2951 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #58: GFLOPs: 47.4283. Time: 460.2013 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #59: GFLOPs: 17.1908. Time: 1269.6661 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #60: GFLOPs: 50.2147. Time: 434.6647 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #61: GFLOPs: 42.4374. Time: 514.3236 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #62: GFLOPs: 25.2003. Time: 866.1235 us. Best GFLOPs: 117.1594
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #63: GFLOPs: 134.0013. Time: 162.8832 us. Best GFLOPs: 134.0013
2024-04-28 21:32:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #64: GFLOPs: 99.2421. Time: 219.9325 us. Best GFLOPs: 134.0013
2024-04-28 21:58:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:58:48 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-28 21:58:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 21:58:51 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-28 21:58:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 21:59:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 21:59:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 21:59:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 21:59:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9435  0.9397  0.9316  0.8581  0.8550  0.8417  0.8381  0.8357  0.8318  0.8303  0.8288  0.8177  0.8114  0.8100  0.8071  0.8054
[17 : 32]:	0.8033  0.8013  0.7989  0.7935  0.7903  0.7844  0.7844  0.7804  0.7759  0.7743  0.7735  0.7681  0.7669  0.7656  0.7654  0.7643
[33 : 48]:	0.7640  0.7585  0.7575  0.7575  0.7544  0.7514  0.7497  0.7476  0.7449  0.7422  0.7416  0.7376  0.7353  0.7307  0.7297  0.7296
[49 : 64]:	0.7270  0.7258  0.7258  0.7258  0.7248  0.7227  0.7170  0.7161  0.7132  0.7123  0.7107  0.7105  0.7100  0.7100  0.7097  0.7092
2024-04-28 21:59:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:59:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #65: GFLOPs: 90.2759. Time: 241.7762 us. Best GFLOPs: 134.0013
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #66: GFLOPs: 104.4851. Time: 208.8964 us. Best GFLOPs: 134.0013
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #67: GFLOPs: 106.0565. Time: 205.8013 us. Best GFLOPs: 134.0013
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #68: GFLOPs: 136.7894. Time: 159.5632 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #69: GFLOPs: 69.4346. Time: 314.3471 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #70: GFLOPs: 77.5399. Time: 281.4883 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #71: GFLOPs: 36.3872. Time: 599.8421 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #72: GFLOPs: 76.1979. Time: 286.4457 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #73: GFLOPs: 79.6539. Time: 274.0176 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #74: GFLOPs: 96.7566. Time: 225.5820 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #75: GFLOPs: 130.0790. Time: 167.7947 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #76: GFLOPs: 58.5993. Time: 372.4712 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #77: GFLOPs: 123.2249. Time: 177.1279 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #78: GFLOPs: 118.9876. Time: 183.4356 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #79: GFLOPs: 63.9322. Time: 341.4019 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #80: GFLOPs: 75.9418. Time: 287.4118 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #81: GFLOPs: 29.3814. Time: 742.8703 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #82: GFLOPs: 70.2827. Time: 310.5537 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #83: GFLOPs: 89.6287. Time: 243.5221 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #84: GFLOPs: 63.3914. Time: 344.3142 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #85: GFLOPs: 123.0131. Time: 177.4327 us. Best GFLOPs: 136.7894
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #86: GFLOPs: 150.1254. Time: 145.3889 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #87: GFLOPs: 120.5877. Time: 181.0015 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #88: GFLOPs: 88.6819. Time: 246.1218 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #89: GFLOPs: 138.5660. Time: 157.5174 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #90: GFLOPs: 73.3101. Time: 297.7291 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #91: GFLOPs: 95.8722. Time: 227.6631 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #92: GFLOPs: 71.4235. Time: 305.5936 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #93: GFLOPs: 96.8819. Time: 225.2903 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #94: GFLOPs: 105.2361. Time: 207.4056 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #95: GFLOPs: 107.6030. Time: 202.8435 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #96: GFLOPs: 78.2276. Time: 279.0136 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #97: GFLOPs: 68.6977. Time: 317.7191 us. Best GFLOPs: 150.1254
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #98: GFLOPs: 156.6146. Time: 139.3648 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #99: GFLOPs: 95.9791. Time: 227.4095 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #100: GFLOPs: 56.0356. Time: 389.5122 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #101: GFLOPs: 114.3099. Time: 190.9419 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #102: GFLOPs: 60.8039. Time: 358.9665 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #103: GFLOPs: 92.6200. Time: 235.6572 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #104: GFLOPs: 76.2449. Time: 286.2690 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #105: GFLOPs: 85.4197. Time: 255.5213 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #106: GFLOPs: 77.7073. Time: 280.8816 us. Best GFLOPs: 156.6146
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #107: GFLOPs: 214.4726. Time: 101.7685 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #108: GFLOPs: 124.0006. Time: 176.0199 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #109: GFLOPs: 165.9427. Time: 131.5307 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #110: GFLOPs: 87.0640. Time: 250.6955 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #111: GFLOPs: 96.0482. Time: 227.2459 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #112: GFLOPs: 66.2832. Time: 329.2927 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #113: GFLOPs: 88.8304. Time: 245.7104 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #114: GFLOPs: 127.9018. Time: 170.6510 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #115: GFLOPs: 128.4319. Time: 169.9465 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #116: GFLOPs: 122.9513. Time: 177.5220 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #117: GFLOPs: 127.0275. Time: 171.8255 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #118: GFLOPs: 80.8364. Time: 270.0091 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #119: GFLOPs: 101.6329. Time: 214.7587 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #120: GFLOPs: 65.0597. Time: 335.4853 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #121: GFLOPs: 60.8658. Time: 358.6015 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #122: GFLOPs: 107.8567. Time: 202.3662 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #123: GFLOPs: 89.1285. Time: 244.8885 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #124: GFLOPs: 121.6675. Time: 179.3952 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #125: GFLOPs: 129.9125. Time: 168.0097 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #126: GFLOPs: 4.5662. Time: 4780.0203 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #127: GFLOPs: 47.8561. Time: 456.0875 us. Best GFLOPs: 214.4726
2024-04-28 22:00:49 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #128: GFLOPs: 138.1267. Time: 158.0184 us. Best GFLOPs: 214.4726
2024-04-28 23:05:35 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:05:36 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:05:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 23:05:38 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:05:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 23:05:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 23:05:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 23:06:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-28 23:06:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9486  0.8821  0.8434  0.8347  0.8347  0.7684  0.7655  0.7548  0.7485  0.7420  0.7392  0.7304  0.7302  0.7292  0.7201  0.7111
[17 : 32]:	0.7094  0.7003  0.6888  0.6654  0.6645  0.6642  0.6575  0.6517  0.6499  0.6499  0.6466  0.6460  0.6460  0.6456  0.6456  0.6445
[33 : 48]:	0.6439  0.6432  0.6427  0.6408  0.6396  0.6396  0.6361  0.6335  0.6334  0.6297  0.6290  0.6285  0.6249  0.6241  0.6240  0.6239
[49 : 64]:	0.6233  0.6200  0.6199  0.6188  0.6182  0.6182  0.6175  0.6153  0.6131  0.6121  0.6115  0.6104  0.6093  0.6083  0.6064  0.6049
2024-04-28 23:06:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:06:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #129: GFLOPs: 246.1892. Time: 88.6577 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #130: GFLOPs: 211.6484. Time: 103.1265 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #131: GFLOPs: 134.8256. Time: 161.8874 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #132: GFLOPs: 188.2180. Time: 115.9643 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #133: GFLOPs: 194.4294. Time: 112.2596 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #134: GFLOPs: 160.7997. Time: 135.7376 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #135: GFLOPs: 163.9458. Time: 133.1327 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #136: GFLOPs: 140.4667. Time: 155.3860 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #137: GFLOPs: 156.7136. Time: 139.2768 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #138: GFLOPs: 127.3342. Time: 171.4116 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #139: GFLOPs: 143.0192. Time: 152.6128 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #140: GFLOPs: 103.9897. Time: 209.8916 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #141: GFLOPs: 168.1792. Time: 129.7816 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #142: GFLOPs: 187.9216. Time: 116.1472 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #143: GFLOPs: 164.6108. Time: 132.5950 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #144: GFLOPs: 130.5985. Time: 167.1272 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #145: GFLOPs: 153.9249. Time: 141.8001 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #146: GFLOPs: 144.5358. Time: 151.0115 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #147: GFLOPs: 152.3803. Time: 143.2374 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #148: GFLOPs: 138.8320. Time: 157.2156 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #149: GFLOPs: 120.1678. Time: 181.6340 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #150: GFLOPs: 99.2322. Time: 219.9544 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #151: GFLOPs: 145.8459. Time: 149.6550 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #152: GFLOPs: 164.1049. Time: 133.0037 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #153: GFLOPs: 78.1582. Time: 279.2614 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #154: GFLOPs: 130.4851. Time: 167.2724 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #155: GFLOPs: 153.1014. Time: 142.5627 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #156: GFLOPs: 137.4126. Time: 158.8396 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #157: GFLOPs: 143.1816. Time: 152.4397 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #158: GFLOPs: 122.9440. Time: 177.5325 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #159: GFLOPs: 123.0687. Time: 177.3526 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #160: GFLOPs: 144.6391. Time: 150.9036 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #161: GFLOPs: 122.3264. Time: 178.4289 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #162: GFLOPs: 79.0112. Time: 276.2463 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #163: GFLOPs: 65.8033. Time: 331.6942 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #164: GFLOPs: 137.8211. Time: 158.3687 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #165: GFLOPs: 145.3855. Time: 150.1289 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #166: GFLOPs: 178.5264. Time: 122.2596 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #167: GFLOPs: 122.5874. Time: 178.0490 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #168: GFLOPs: 139.2272. Time: 156.7694 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #169: GFLOPs: 80.2470. Time: 271.9923 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #170: GFLOPs: 126.9719. Time: 171.9008 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #171: GFLOPs: 142.3856. Time: 153.2919 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #172: GFLOPs: 64.6966. Time: 337.3677 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #173: GFLOPs: 91.5213. Time: 238.4861 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #174: GFLOPs: 140.5204. Time: 155.3266 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #175: GFLOPs: 133.8268. Time: 163.0956 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #176: GFLOPs: 134.5677. Time: 162.1977 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #177: GFLOPs: 58.6165. Time: 372.3618 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #178: GFLOPs: 79.7216. Time: 273.7848 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #179: GFLOPs: 165.9545. Time: 131.5213 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #180: GFLOPs: 112.7511. Time: 193.5818 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #181: GFLOPs: 75.7980. Time: 287.9571 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #182: GFLOPs: 78.6724. Time: 277.4359 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #183: GFLOPs: 129.9103. Time: 168.0126 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #184: GFLOPs: 158.6463. Time: 137.5800 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #185: GFLOPs: 130.5300. Time: 167.2148 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #186: GFLOPs: 121.9575. Time: 178.9686 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #187: GFLOPs: 123.4890. Time: 176.7490 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #188: GFLOPs: 106.8779. Time: 204.2196 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #189: GFLOPs: 152.7486. Time: 142.8921 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #190: GFLOPs: 43.1060. Time: 506.3457 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #191: GFLOPs: 41.5453. Time: 525.3684 us. Best GFLOPs: 246.1892
2024-04-28 23:07:27 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #192: GFLOPs: 18.2480. Time: 1196.1080 us. Best GFLOPs: 246.1892
2024-04-29 00:11:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:11:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:11:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:11:17 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:11:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:11:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:11:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:11:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:11:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9139  0.8374  0.8114  0.7957  0.7932  0.7814  0.7617  0.7418  0.7352  0.7184  0.7104  0.6953  0.6953  0.6929  0.6885  0.6874
[17 : 32]:	0.6858  0.6827  0.6825  0.6794  0.6772  0.6718  0.6712  0.6647  0.6609  0.6529  0.6529  0.6480  0.6480  0.6462  0.6459  0.6445
[33 : 48]:	0.6414  0.6397  0.6393  0.6393  0.6372  0.6363  0.6330  0.6326  0.6300  0.6276  0.6252  0.6252  0.6245  0.6225  0.6194  0.6189
[49 : 64]:	0.6156  0.6141  0.6141  0.6139  0.6120  0.6114  0.6093  0.6079  0.6032  0.6027  0.6026  0.6024  0.6020  0.6004  0.5982  0.5972
2024-04-29 00:11:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:11:43 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #193: GFLOPs: 222.2926. Time: 98.1884 us. Best GFLOPs: 246.1892
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #194: GFLOPs: 212.5313. Time: 102.6981 us. Best GFLOPs: 246.1892
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #195: GFLOPs: 224.4089. Time: 97.2625 us. Best GFLOPs: 246.1892
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #196: GFLOPs: 236.2026. Time: 92.4061 us. Best GFLOPs: 246.1892
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #197: GFLOPs: 197.2694. Time: 110.6434 us. Best GFLOPs: 246.1892
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #198: GFLOPs: 128.8834. Time: 169.3512 us. Best GFLOPs: 246.1892
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #199: GFLOPs: 253.3252. Time: 86.1602 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #200: GFLOPs: 128.4167. Time: 169.9666 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #201: GFLOPs: 133.7824. Time: 163.1497 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #202: GFLOPs: 67.8076. Time: 321.8894 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #203: GFLOPs: 143.4281. Time: 152.1777 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #204: GFLOPs: 119.7924. Time: 182.2032 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #205: GFLOPs: 123.4153. Time: 176.8546 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #206: GFLOPs: 164.4419. Time: 132.7311 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #207: GFLOPs: 189.7879. Time: 115.0050 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #208: GFLOPs: 156.9215. Time: 139.0923 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #209: GFLOPs: 139.5279. Time: 156.4315 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #210: GFLOPs: 151.4967. Time: 144.0728 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #211: GFLOPs: 135.9937. Time: 160.4968 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #212: GFLOPs: 141.7385. Time: 153.9918 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #213: GFLOPs: 159.6803. Time: 136.6891 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #214: GFLOPs: 116.3346. Time: 187.6188 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #215: GFLOPs: 121.4125. Time: 179.7719 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #216: GFLOPs: 148.2876. Time: 147.1907 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #217: GFLOPs: 228.4846. Time: 95.5275 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #218: GFLOPs: 140.0631. Time: 155.8338 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #219: GFLOPs: 142.2770. Time: 153.4089 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #220: GFLOPs: 107.3766. Time: 203.2711 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #221: GFLOPs: 144.8488. Time: 150.6852 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #222: GFLOPs: 131.4011. Time: 166.1064 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #223: GFLOPs: 126.7597. Time: 172.1884 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #224: GFLOPs: 167.5217. Time: 130.2909 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #225: GFLOPs: 124.2591. Time: 175.6536 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #226: GFLOPs: 125.3014. Time: 174.1924 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #227: GFLOPs: 154.1350. Time: 141.6068 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #228: GFLOPs: 146.9820. Time: 148.4982 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #229: GFLOPs: 138.7708. Time: 157.2849 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #230: GFLOPs: 153.3970. Time: 142.2880 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #231: GFLOPs: 120.1284. Time: 181.6936 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #232: GFLOPs: 151.8605. Time: 143.7277 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #233: GFLOPs: 156.0074. Time: 139.9072 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #234: GFLOPs: 183.7148. Time: 118.8067 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #235: GFLOPs: 161.7785. Time: 134.9163 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #236: GFLOPs: 171.6807. Time: 127.1346 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #237: GFLOPs: 156.7839. Time: 139.2143 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #238: GFLOPs: 138.5721. Time: 157.5105 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #239: GFLOPs: 156.0135. Time: 139.9017 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #240: GFLOPs: 123.4824. Time: 176.7585 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #241: GFLOPs: 150.7720. Time: 144.7654 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #242: GFLOPs: 163.2355. Time: 133.7121 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #243: GFLOPs: 157.0806. Time: 138.9513 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #244: GFLOPs: 117.3803. Time: 185.9474 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #245: GFLOPs: 127.4836. Time: 171.2108 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #246: GFLOPs: 149.8763. Time: 145.6305 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #247: GFLOPs: 130.0256. Time: 167.8635 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #248: GFLOPs: 111.8770. Time: 195.0942 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #249: GFLOPs: 121.3989. Time: 179.7921 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #250: GFLOPs: 61.1513. Time: 356.9270 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #251: GFLOPs: 125.3298. Time: 174.1529 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #252: GFLOPs: 82.8935. Time: 263.3084 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #253: GFLOPs: 131.9565. Time: 165.4072 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #254: GFLOPs: 43.0810. Time: 506.6399 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #255: GFLOPs: 31.7174. Time: 688.1566 us. Best GFLOPs: 253.3252
2024-04-29 00:13:01 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #256: GFLOPs: 19.3852. Time: 1125.9369 us. Best GFLOPs: 253.3252
2024-04-29 00:17:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:17:28 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:17:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:17:31 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:17:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:17:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:17:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:17:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 00:17:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9008  0.9003  0.8934  0.8934  0.8310  0.8094  0.8094  0.7945  0.7945  0.7502  0.7391  0.7391  0.7129  0.7102  0.6940  0.6830
[17 : 32]:	0.6784  0.6770  0.6748  0.6739  0.6730  0.6596  0.6482  0.6476  0.6467  0.6456  0.6442  0.6436  0.6422  0.6422  0.6403  0.6403
[33 : 48]:	0.6382  0.6379  0.6365  0.6324  0.6305  0.6302  0.6301  0.6300  0.6300  0.6297  0.6291  0.6290  0.6245  0.6232  0.6232  0.6228
[49 : 64]:	0.6208  0.6193  0.6185  0.6167  0.6164  0.6157  0.6150  0.6134  0.6110  0.6109  0.6099  0.6099  0.6092  0.6089  0.6087  0.6087
2024-04-29 00:17:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:17:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #257: GFLOPs: 206.9483. Time: 105.4687 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #258: GFLOPs: 231.8330. Time: 94.1478 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #259: GFLOPs: 205.7292. Time: 106.0936 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #260: GFLOPs: 222.1081. Time: 98.2700 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #261: GFLOPs: 206.8529. Time: 105.5173 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #262: GFLOPs: 231.1494. Time: 94.4262 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #263: GFLOPs: 216.8906. Time: 100.6339 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #264: GFLOPs: 218.3387. Time: 99.9665 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #265: GFLOPs: 194.3985. Time: 112.2774 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #266: GFLOPs: 187.1096. Time: 116.6512 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #267: GFLOPs: 183.5050. Time: 118.9426 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #268: GFLOPs: 193.8045. Time: 112.6216 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #269: GFLOPs: 202.3138. Time: 107.8847 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #270: GFLOPs: 232.5868. Time: 93.8426 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #271: GFLOPs: 155.0981. Time: 140.7275 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #272: GFLOPs: 140.7346. Time: 155.0903 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #273: GFLOPs: 158.8614. Time: 137.3938 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #274: GFLOPs: 132.6535. Time: 164.5381 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #275: GFLOPs: 203.8204. Time: 107.0872 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #276: GFLOPs: 153.6978. Time: 142.0096 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #277: GFLOPs: 159.0638. Time: 137.2189 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #278: GFLOPs: 137.3614. Time: 158.8987 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #279: GFLOPs: 73.9481. Time: 295.1606 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #280: GFLOPs: 185.1184. Time: 117.9060 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #281: GFLOPs: 143.6287. Time: 151.9651 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #282: GFLOPs: 173.4940. Time: 125.8059 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #283: GFLOPs: 158.5034. Time: 137.7040 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #284: GFLOPs: 150.6336. Time: 144.8984 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #285: GFLOPs: 155.6704. Time: 140.2101 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #286: GFLOPs: 151.7811. Time: 143.8029 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #287: GFLOPs: 147.1125. Time: 148.3665 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #288: GFLOPs: 163.6589. Time: 133.3661 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #289: GFLOPs: 179.1805. Time: 121.8133 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #290: GFLOPs: 158.9822. Time: 137.2893 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #291: GFLOPs: 149.5778. Time: 145.9211 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #292: GFLOPs: 128.7242. Time: 169.5607 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #293: GFLOPs: 129.4310. Time: 168.6348 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #294: GFLOPs: 200.7969. Time: 108.6997 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #295: GFLOPs: 156.9453. Time: 139.0712 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #296: GFLOPs: 168.7994. Time: 129.3047 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #297: GFLOPs: 159.4943. Time: 136.8485 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #298: GFLOPs: 142.9241. Time: 152.7144 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #299: GFLOPs: 150.2104. Time: 145.3066 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #300: GFLOPs: 165.4836. Time: 131.8956 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #301: GFLOPs: 148.2135. Time: 147.2643 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #302: GFLOPs: 174.2443. Time: 125.2641 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #303: GFLOPs: 139.6886. Time: 156.2516 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #304: GFLOPs: 125.9844. Time: 173.2482 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #305: GFLOPs: 159.0634. Time: 137.2193 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #306: GFLOPs: 164.3384. Time: 132.8147 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #307: GFLOPs: 158.0329. Time: 138.1140 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #308: GFLOPs: 164.3139. Time: 132.8345 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #309: GFLOPs: 155.8203. Time: 140.0752 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #310: GFLOPs: 153.4861. Time: 142.2054 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #311: GFLOPs: 155.5226. Time: 140.3433 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #312: GFLOPs: 157.4972. Time: 138.5838 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #313: GFLOPs: 148.3926. Time: 147.0866 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #314: GFLOPs: 125.0554. Time: 174.5351 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #315: GFLOPs: 130.1270. Time: 167.7327 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #316: GFLOPs: 141.9019. Time: 153.8144 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #317: GFLOPs: 124.4812. Time: 175.3403 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #318: GFLOPs: 18.1526. Time: 1202.3905 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #319: GFLOPs: 16.1309. Time: 1353.0860 us. Best GFLOPs: 253.3252
2024-04-29 00:19:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #320: GFLOPs: 11.9147. Time: 1831.9075 us. Best GFLOPs: 253.3252
2024-04-29 01:48:20 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:48:21 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:48:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 01:48:23 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:48:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 01:48:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 01:48:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 01:48:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3243c48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x532a4e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5974f98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3920308)]: 0 failure(s)
2024-04-29 01:48:49 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8806  0.8639  0.8612  0.8525  0.8506  0.8201  0.8189  0.8189  0.8113  0.8113  0.8113  0.8113  0.8076  0.8073  0.7862  0.7727
[17 : 32]:	0.7715  0.6989  0.6826  0.6778  0.6712  0.6709  0.6638  0.6595  0.6583  0.6574  0.6573  0.6530  0.6521  0.6503  0.6501  0.6461
[33 : 48]:	0.6451  0.6408  0.6396  0.6395  0.6394  0.6394  0.6379  0.6379  0.6379  0.6378  0.6364  0.6320  0.6313  0.6297  0.6293  0.6285
[49 : 64]:	0.6279  0.6273  0.6265  0.6254  0.6254  0.6225  0.6211  0.6208  0.6182  0.6182  0.6171  0.6171  0.6168  0.6156  0.6144  0.6144
2024-04-29 01:48:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:48:50 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #321: GFLOPs: 187.8892. Time: 116.1672 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #322: GFLOPs: 187.8265. Time: 116.2059 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #323: GFLOPs: 208.2981. Time: 104.7852 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #324: GFLOPs: 220.3291. Time: 99.0634 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #325: GFLOPs: 204.9335. Time: 106.5056 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #326: GFLOPs: 229.0678. Time: 95.2843 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #327: GFLOPs: 185.0939. Time: 117.9216 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #328: GFLOPs: 198.0795. Time: 110.1909 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #329: GFLOPs: 213.0573. Time: 102.4446 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #330: GFLOPs: 224.1470. Time: 97.3761 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #331: GFLOPs: 211.5231. Time: 103.1876 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #332: GFLOPs: 225.5400. Time: 96.7747 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #333: GFLOPs: 126.8785. Time: 172.0272 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #334: GFLOPs: 219.7909. Time: 99.3060 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #335: GFLOPs: 132.5766. Time: 164.6336 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #336: GFLOPs: 242.8880. Time: 89.8626 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #337: GFLOPs: 137.5645. Time: 158.6642 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #338: GFLOPs: 148.6375. Time: 146.8443 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #339: GFLOPs: 151.0148. Time: 144.5326 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #340: GFLOPs: 77.8994. Time: 280.1890 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #341: GFLOPs: 78.0878. Time: 279.5131 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #342: GFLOPs: 165.6053. Time: 131.7987 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #343: GFLOPs: 160.7338. Time: 135.7932 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #344: GFLOPs: 172.2806. Time: 126.6919 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #345: GFLOPs: 119.6229. Time: 182.4614 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #346: GFLOPs: 141.1043. Time: 154.6839 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #347: GFLOPs: 116.4002. Time: 187.5131 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #348: GFLOPs: 170.5764. Time: 127.9577 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #349: GFLOPs: 127.9685. Time: 170.5620 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #350: GFLOPs: 155.0101. Time: 140.8073 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #351: GFLOPs: 172.8853. Time: 126.2488 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #352: GFLOPs: 164.9073. Time: 132.3566 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #353: GFLOPs: 160.8695. Time: 135.6786 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #354: GFLOPs: 136.1146. Time: 160.3543 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #355: GFLOPs: 191.8723. Time: 113.7556 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #356: GFLOPs: 140.9350. Time: 154.8697 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #357: GFLOPs: 147.3943. Time: 148.0828 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #358: GFLOPs: 156.6738. Time: 139.3121 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #359: GFLOPs: 157.0875. Time: 138.9452 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #360: GFLOPs: 176.0021. Time: 124.0131 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #361: GFLOPs: 159.0374. Time: 137.2416 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #362: GFLOPs: 160.4519. Time: 136.0318 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #363: GFLOPs: 156.9931. Time: 139.0288 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #364: GFLOPs: 197.3176. Time: 110.6164 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #365: GFLOPs: 135.8438. Time: 160.6739 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #366: GFLOPs: 162.2735. Time: 134.5048 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #367: GFLOPs: 159.9304. Time: 136.4754 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #368: GFLOPs: 186.9549. Time: 116.7477 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #369: GFLOPs: 140.3075. Time: 155.5624 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #370: GFLOPs: 184.2177. Time: 118.4824 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #371: GFLOPs: 140.1055. Time: 155.7866 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #372: GFLOPs: 164.4221. Time: 132.7471 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #373: GFLOPs: 155.0979. Time: 140.7276 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #374: GFLOPs: 73.0333. Time: 298.8575 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #375: GFLOPs: 142.3208. Time: 153.3617 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #376: GFLOPs: 72.5975. Time: 300.6517 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #377: GFLOPs: 162.9652. Time: 133.9339 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #378: GFLOPs: 168.7981. Time: 129.3057 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #379: GFLOPs: 148.4652. Time: 147.0147 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #380: GFLOPs: 184.8828. Time: 118.0562 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #381: GFLOPs: 68.2858. Time: 319.6353 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #382: GFLOPs: 87.9318. Time: 248.2215 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #383: GFLOPs: 87.5206. Time: 249.3877 us. Best GFLOPs: 253.3252
2024-04-29 01:50:28 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_add] Trial #384: GFLOPs: 72.0590. Time: 302.8983 us. Best GFLOPs: 253.3252
