2024-04-29 19:45:35 [INFO] [task_scheduler.cc:160] Initializing Task #22: "fused_nn_avg_pool2d"
2024-04-29 19:45:35 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pool_sum = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)))
        for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16), T.int64(1), T.int64(1)):
            with T.block("pool_sum"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4])
                T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                with T.init():
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(0)
                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)):
            with T.block("pool_avg"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.block_attr({"schedule_rule": "meta_schedule.pool_avg"})
                pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
2024-04-29 19:45:35 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 19:45:35 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            pool_sum = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)))
            for ax0, ax1 in T.grid(T.int64(1), T.int64(32)):
                for ax0_1, ax1_1, ax2, ax3, ax4, ax5, ax6 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(7), T.int64(16), T.int64(1), T.int64(1)):
                    with T.block("pool_sum"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0_1)
                        v_ax1 = T.axis.spatial(T.int64(32), ax1 + ax1_1)
                        v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSRR", [ax2, ax3, ax4, ax5, ax6])
                        T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4])
                        T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        with T.init():
                            pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(0)
                        pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4]
                for ax2, ax3, ax4 in T.grid(T.int64(7), T.int64(7), T.int64(16)):
                    with T.block("pool_avg"):
                        v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
b0 = sch.get_block(name="pool_sum", func_name="main")
b1 = sch.get_block(name="pool_avg", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v3 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v3)
l4 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l4, preserve_unit_loops=True, index=-1)
2024-04-29 20:31:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:31:32 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 20:31:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33864d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7aa51a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x31a5508)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3972e88)]: 0 failure(s)
2024-04-29 20:31:34 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 20:31:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33864d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7aa51a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x31a5508)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3972e88)]: 0 failure(s)
2024-04-29 20:31:37 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33864d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7aa51a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x31a5508)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3972e88)]: 0 failure(s)
2024-04-29 20:31:39 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33864d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7aa51a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x31a5508)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3972e88)]: 0 failure(s)
2024-04-29 20:31:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33864d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x7aa51a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x31a5508)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3972e88)]: 0 failure(s)
2024-04-29 20:31:42 [INFO] [evolutionary_search.cc:649] Scores of the best 46 candidates:
[1 : 16]:	0.9951  0.9574  0.9513  0.9491  0.9433  0.9290  0.9259  0.9146  0.9104  0.8715  0.8450  0.8140  0.8029  0.7976  0.7880  0.7411
[17 : 32]:	0.7190  0.7163  0.7045  0.6992  0.6972  0.6930  0.6484  0.6088  0.6078  0.6000  0.5845  0.5459  0.5384  0.5286  0.5272  0.5238
[33 : 46]:	0.4633  0.4590  0.4148  0.3980  0.3828  0.2529  0.2330  0.2258  0.2164  0.1896  0.1272  0.1221  0.0810  0.0052
2024-04-29 20:31:42 [INFO] [evolutionary_search.cc:727] Got 46 candidate(s) with evolutionary search
2024-04-29 20:31:42 [INFO] [evolutionary_search.cc:730] Sending 46 candidates(s) for measurement
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #1: GFLOPs: 18.9917. Time: 21.1360 us. Best GFLOPs: 18.9917
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #2: GFLOPs: 41.8227. Time: 9.5979 us. Best GFLOPs: 41.8227
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #3: GFLOPs: 9.3654. Time: 42.8605 us. Best GFLOPs: 41.8227
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #4: GFLOPs: 9.6635. Time: 41.5384 us. Best GFLOPs: 41.8227
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #5: GFLOPs: 39.6739. Time: 10.1177 us. Best GFLOPs: 41.8227
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #6: GFLOPs: 7.3918. Time: 54.3046 us. Best GFLOPs: 41.8227
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #7: GFLOPs: 42.5531. Time: 9.4331 us. Best GFLOPs: 42.5531
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #8: GFLOPs: 43.0124. Time: 9.3324 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #9: GFLOPs: 39.9389. Time: 10.0506 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #10: GFLOPs: 41.6749. Time: 9.6319 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #11: GFLOPs: 17.6938. Time: 22.6863 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #12: GFLOPs: 42.4925. Time: 9.4466 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #13: GFLOPs: 38.8714. Time: 10.3266 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #14: GFLOPs: 40.0829. Time: 10.0144 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #15: GFLOPs: 37.5924. Time: 10.6779 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #16: GFLOPs: 17.9793. Time: 22.3261 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #17: GFLOPs: 40.0974. Time: 10.0108 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #18: GFLOPs: 42.0725. Time: 9.5409 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #19: GFLOPs: 10.2411. Time: 39.1958 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #20: GFLOPs: 40.9118. Time: 9.8115 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #21: GFLOPs: 35.4725. Time: 11.3160 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #22: GFLOPs: 17.1271. Time: 23.4370 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #23: GFLOPs: 42.2411. Time: 9.5028 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #24: GFLOPs: 42.6146. Time: 9.4195 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #25: GFLOPs: 18.0541. Time: 22.2337 us. Best GFLOPs: 43.0124
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #26: GFLOPs: 43.4194. Time: 9.2449 us. Best GFLOPs: 43.4194
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #27: GFLOPs: 40.8487. Time: 9.8267 us. Best GFLOPs: 43.4194
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #28: GFLOPs: 40.2444. Time: 9.9743 us. Best GFLOPs: 43.4194
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #29: GFLOPs: 39.3403. Time: 10.2035 us. Best GFLOPs: 43.4194
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #30: GFLOPs: 40.1355. Time: 10.0013 us. Best GFLOPs: 43.4194
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #31: GFLOPs: 43.7143. Time: 9.1825 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #32: GFLOPs: 17.5724. Time: 22.8431 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #33: GFLOPs: 40.8119. Time: 9.8356 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #34: GFLOPs: 42.3087. Time: 9.4876 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #35: GFLOPs: 28.3932. Time: 14.1375 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #36: GFLOPs: 18.4164. Time: 21.7962 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #37: GFLOPs: 27.6463. Time: 14.5194 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #38: GFLOPs: 43.4229. Time: 9.2442 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #39: GFLOPs: 42.0017. Time: 9.5570 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #40: GFLOPs: 17.6515. Time: 22.7408 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #41: GFLOPs: 39.2113. Time: 10.2370 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #42: GFLOPs: 19.1149. Time: 20.9997 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #43: GFLOPs: 39.2548. Time: 10.2257 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #44: GFLOPs: 17.5398. Time: 22.8856 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #45: GFLOPs: 42.3005. Time: 9.4894 us. Best GFLOPs: 43.7143
2024-04-29 21:00:08 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #46: GFLOPs: 17.3728. Time: 23.1055 us. Best GFLOPs: 43.7143
