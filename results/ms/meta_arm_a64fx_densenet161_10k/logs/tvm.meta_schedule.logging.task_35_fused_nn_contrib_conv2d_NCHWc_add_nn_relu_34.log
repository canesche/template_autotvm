2024-04-29 02:30:37 [INFO] [task_scheduler.cc:160] Initializing Task #35: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34"
2024-04-29 02:30:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(396), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(396), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4), T.int64(1584), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 02:30:37 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:30:37 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(396), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(396), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(88), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(14), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(48) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1584), ic_0 * T.int64(18) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 3, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[88, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:30:37 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(396), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(396), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(88), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(14), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(48) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1584), ic_0 * T.int64(18) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(48), oc_chunk_1 * T.int64(16) + ax1)
                        v_ax2, v_ax3, v_ax4 = T.axis.remap("SSS", [ax2, ax3, ax4])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 3, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[88, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 02:30:37 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(396), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(396), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(88), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(14), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(48) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1584), ic_0 * T.int64(18) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 3, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[88, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 03:28:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:28:57 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:29:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 03:29:00 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:29:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 03:29:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 03:29:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 03:29:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 03:29:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9992  0.9990  0.9980  0.9967  0.9965  0.9957  0.9953  0.9945  0.9941  0.9935  0.9934  0.9932  0.9932  0.9929  0.9923
[17 : 32]:	0.9919  0.9916  0.9911  0.9910  0.9909  0.9901  0.9901  0.9896  0.9892  0.9889  0.9888  0.9884  0.9875  0.9872  0.9872  0.9871
[33 : 48]:	0.9869  0.9868  0.9866  0.9863  0.9861  0.9859  0.9849  0.9844  0.9823  0.9820  0.9818  0.9817  0.9817  0.9816  0.9813  0.9805
[49 : 64]:	0.9802  0.9787  0.9783  0.9777  0.9773  0.9771  0.9769  0.9758  0.9757  0.9757  0.9755  0.9754  0.9752  0.9742  0.9727  0.9725
2024-04-29 03:29:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:29:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #1: GFLOPs: 68.7708. Time: 1734.6513 us. Best GFLOPs: 68.7708
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #2: GFLOPs: 59.0184. Time: 2021.2921 us. Best GFLOPs: 68.7708
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #3: GFLOPs: 91.4533. Time: 1304.4194 us. Best GFLOPs: 91.4533
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #4: GFLOPs: 95.7407. Time: 1246.0060 us. Best GFLOPs: 95.7407
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #5: GFLOPs: 1.4311. Time: 83360.1313 us. Best GFLOPs: 95.7407
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #6: GFLOPs: 103.4028. Time: 1153.6772 us. Best GFLOPs: 103.4028
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #7: GFLOPs: 75.4383. Time: 1581.3377 us. Best GFLOPs: 103.4028
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #8: GFLOPs: 117.3166. Time: 1016.8506 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #9: GFLOPs: 17.6466. Time: 6760.1366 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #10: GFLOPs: 16.2619. Time: 7335.7702 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #11: GFLOPs: 15.1465. Time: 7875.9939 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #12: GFLOPs: 107.7206. Time: 1107.4339 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #13: GFLOPs: 97.3586. Time: 1225.2990 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #14: GFLOPs: 55.7615. Time: 2139.3532 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #15: GFLOPs: 90.2984. Time: 1321.1032 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #16: GFLOPs: 29.5617. Time: 4035.3990 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #17: GFLOPs: 10.1901. Time: 11706.8542 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #18: GFLOPs: 44.2672. Time: 2694.8489 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #19: GFLOPs: 14.2616. Time: 8364.6704 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #20: GFLOPs: 51.1220. Time: 2333.5063 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #21: GFLOPs: 28.3338. Time: 4210.2841 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #22: GFLOPs: 25.1727. Time: 4738.9914 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #23: GFLOPs: 2.1182. Time: 56319.4927 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #24: GFLOPs: 4.3830. Time: 27217.3430 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #25: GFLOPs: 29.6702. Time: 4020.6493 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #26: GFLOPs: 0.6956. Time: 171508.3650 us. Best GFLOPs: 117.3166
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #27: GFLOPs: 128.2950. Time: 929.8370 us. Best GFLOPs: 128.2950
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #28: GFLOPs: 84.3973. Time: 1413.4738 us. Best GFLOPs: 128.2950
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #29: GFLOPs: 81.5565. Time: 1462.7098 us. Best GFLOPs: 128.2950
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #30: GFLOPs: 17.5578. Time: 6794.3290 us. Best GFLOPs: 128.2950
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #31: GFLOPs: 86.9697. Time: 1371.6667 us. Best GFLOPs: 128.2950
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #32: GFLOPs: 147.9363. Time: 806.3837 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #33: GFLOPs: 109.9660. Time: 1084.8207 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #34: GFLOPs: 14.4592. Time: 8250.3528 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #35: GFLOPs: 63.9510. Time: 1865.3869 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #36: GFLOPs: 10.6886. Time: 11160.7639 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #37: GFLOPs: 44.4508. Time: 2683.7189 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:121] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #38: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(396), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(396), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(24) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(396), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(24) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1584), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(24), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(24) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 6, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[396, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #39: GFLOPs: 36.6565. Time: 3254.3579 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #40: GFLOPs: 13.1793. Time: 9051.5708 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #41: GFLOPs: 29.3016. Time: 4071.2270 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #42: GFLOPs: 22.5783. Time: 5283.5543 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #43: GFLOPs: 84.2468. Time: 1415.9998 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #44: GFLOPs: 15.2221. Time: 7836.8404 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #45: GFLOPs: 59.0113. Time: 2021.5351 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #46: GFLOPs: 50.5562. Time: 2359.6203 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #47: GFLOPs: 88.0934. Time: 1354.1704 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #48: GFLOPs: 54.2206. Time: 2200.1490 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #49: GFLOPs: 92.8238. Time: 1285.1597 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #50: GFLOPs: 58.2160. Time: 2049.1515 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #51: GFLOPs: 61.3927. Time: 1943.1201 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #52: GFLOPs: 17.2831. Time: 6902.3161 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #53: GFLOPs: 6.3251. Time: 18860.3472 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #54: GFLOPs: 120.6593. Time: 988.6799 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #55: GFLOPs: 87.8141. Time: 1358.4776 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #56: GFLOPs: 58.8355. Time: 2027.5742 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #57: GFLOPs: 29.1771. Time: 4088.6035 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #58: GFLOPs: 21.0259. Time: 5673.6443 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #59: GFLOPs: 80.4727. Time: 1482.4080 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #60: GFLOPs: 37.0070. Time: 3223.5374 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #61: GFLOPs: 44.6844. Time: 2669.6898 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #62: GFLOPs: 132.8084. Time: 898.2374 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #63: GFLOPs: 79.3714. Time: 1502.9778 us. Best GFLOPs: 147.9363
2024-04-29 05:05:36 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #64: GFLOPs: 102.4563. Time: 1164.3346 us. Best GFLOPs: 147.9363
2024-04-29 06:54:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:54:25 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 06:54:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 06:54:27 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 06:54:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 06:54:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 06:54:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 06:54:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x153c7118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc24d3d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3395d48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa361a18)]: 0 failure(s)
2024-04-29 06:54:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9053  0.8691  0.8678  0.8647  0.8621  0.8530  0.8523  0.8431  0.8364  0.8140  0.7947  0.7905  0.7886  0.7865  0.7833  0.7827
[17 : 32]:	0.7808  0.7806  0.7804  0.7801  0.7788  0.7788  0.7765  0.7640  0.7589  0.7587  0.7587  0.7554  0.7549  0.7548  0.7535  0.7532
[33 : 48]:	0.7490  0.7486  0.7481  0.7444  0.7424  0.7423  0.7423  0.7420  0.7411  0.7408  0.7404  0.7359  0.7333  0.7326  0.7321  0.7321
[49 : 64]:	0.7282  0.7278  0.7265  0.7253  0.7251  0.7237  0.7225  0.7193  0.7184  0.7182  0.7178  0.7159  0.7156  0.7155  0.7138  0.7136
2024-04-29 06:54:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:54:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #65: GFLOPs: 242.7058. Time: 491.5145 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #66: GFLOPs: 191.4207. Time: 623.2003 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #67: GFLOPs: 197.8103. Time: 603.0699 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #68: GFLOPs: 212.5392. Time: 561.2774 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #69: GFLOPs: 157.9167. Time: 755.4200 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #70: GFLOPs: 139.0474. Time: 857.9338 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #71: GFLOPs: 149.2788. Time: 799.1320 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #72: GFLOPs: 173.5947. Time: 687.1952 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #73: GFLOPs: 145.6234. Time: 819.1915 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #74: GFLOPs: 108.1389. Time: 1103.1499 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #75: GFLOPs: 116.5108. Time: 1023.8827 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #76: GFLOPs: 90.9892. Time: 1311.0728 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #77: GFLOPs: 188.6215. Time: 632.4487 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #78: GFLOPs: 211.2232. Time: 564.7744 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #79: GFLOPs: 132.8922. Time: 897.6704 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #80: GFLOPs: 116.1286. Time: 1027.2529 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #81: GFLOPs: 182.3970. Time: 654.0318 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #82: GFLOPs: 138.5189. Time: 861.2070 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #83: GFLOPs: 109.4605. Time: 1089.8306 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #84: GFLOPs: 108.3895. Time: 1100.5999 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #85: GFLOPs: 205.1618. Time: 581.4603 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #86: GFLOPs: 161.0096. Time: 740.9089 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #87: GFLOPs: 125.3540. Time: 951.6526 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #88: GFLOPs: 182.3923. Time: 654.0486 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #89: GFLOPs: 145.6676. Time: 818.9431 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #90: GFLOPs: 70.6758. Time: 1687.8966 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #91: GFLOPs: 117.6066. Time: 1014.3431 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #92: GFLOPs: 112.9475. Time: 1056.1848 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #93: GFLOPs: 172.9486. Time: 689.7626 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #94: GFLOPs: 76.7829. Time: 1553.6451 us. Best GFLOPs: 242.7058
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #95: GFLOPs: 255.5940. Time: 466.7302 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #96: GFLOPs: 101.8474. Time: 1171.2964 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #97: GFLOPs: 106.6746. Time: 1118.2932 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #98: GFLOPs: 155.7742. Time: 765.8100 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #99: GFLOPs: 97.7940. Time: 1219.8443 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #100: GFLOPs: 146.1059. Time: 816.4859 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #101: GFLOPs: 83.5363. Time: 1428.0427 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #102: GFLOPs: 131.4832. Time: 907.2906 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #103: GFLOPs: 125.8881. Time: 947.6146 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #104: GFLOPs: 129.6302. Time: 920.2597 us. Best GFLOPs: 255.5940
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #105: GFLOPs: 280.7028. Time: 424.9812 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #106: GFLOPs: 97.9019. Time: 1218.4993 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #107: GFLOPs: 196.6816. Time: 606.5309 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #108: GFLOPs: 187.4569. Time: 636.3780 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #109: GFLOPs: 56.4139. Time: 2114.6106 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #110: GFLOPs: 149.4122. Time: 798.4185 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #111: GFLOPs: 87.1370. Time: 1369.0337 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #112: GFLOPs: 174.8078. Time: 682.4261 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #113: GFLOPs: 166.8809. Time: 714.8419 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #114: GFLOPs: 130.1195. Time: 916.7994 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #115: GFLOPs: 44.7620. Time: 2665.0598 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #116: GFLOPs: 160.3979. Time: 743.7345 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #117: GFLOPs: 66.1691. Time: 1802.8577 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #118: GFLOPs: 84.9382. Time: 1404.4738 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #119: GFLOPs: 148.0812. Time: 805.5949 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #120: GFLOPs: 91.4423. Time: 1304.5758 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #121: GFLOPs: 129.4740. Time: 921.3700 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #122: GFLOPs: 192.5780. Time: 619.4553 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #123: GFLOPs: 124.0448. Time: 961.6965 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #124: GFLOPs: 129.8292. Time: 918.8491 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #125: GFLOPs: 174.3525. Time: 684.2085 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #126: GFLOPs: 124.1076. Time: 961.2094 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #127: GFLOPs: 46.0845. Time: 2588.5785 us. Best GFLOPs: 280.7028
2024-04-29 06:56:32 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #128: GFLOPs: 9.2879. Time: 12844.0182 us. Best GFLOPs: 280.7028
