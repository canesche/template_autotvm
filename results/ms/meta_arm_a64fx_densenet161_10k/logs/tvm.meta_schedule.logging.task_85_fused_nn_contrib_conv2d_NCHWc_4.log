2024-04-29 02:33:50 [INFO] [task_scheduler.cc:160] Initializing Task #85: "fused_nn_contrib_conv2d_NCHWc_4"
2024-04-29 02:33:50 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4), T.int64(384), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-29 02:33:50 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:33:50 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(8), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(4) + oh_1 * T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(8) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(24) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(4), T.int64(8), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + ax1)
                        v2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(4) + ax2)
                        v3 = T.axis.spatial(T.int64(56), ow_1 * T.int64(8) + ax3)
                        v4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 8, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 24])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:33:50 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(8), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(4) + oh_1 * T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(8) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(24) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(4), T.int64(56), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + ax1)
                        v2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(4) + ax2)
                        v3, v4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 8, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 24])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:33:50 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(8), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(4) + oh_1 * T.int64(4) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(8) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(24) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 8, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 24])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 04:48:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:48:17 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 04:48:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 04:48:19 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 04:48:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 04:48:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 04:48:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 04:48:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 04:48:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9995  0.9993  0.9992  0.9991  0.9991  0.9991  0.9983  0.9982  0.9978  0.9974  0.9973  0.9970  0.9957  0.9954  0.9949
[17 : 32]:	0.9945  0.9942  0.9941  0.9938  0.9938  0.9932  0.9926  0.9921  0.9914  0.9911  0.9905  0.9904  0.9895  0.9893  0.9892  0.9891
[33 : 48]:	0.9890  0.9882  0.9879  0.9874  0.9860  0.9856  0.9847  0.9829  0.9826  0.9825  0.9823  0.9815  0.9813  0.9805  0.9803  0.9795
[49 : 64]:	0.9788  0.9785  0.9779  0.9769  0.9769  0.9764  0.9763  0.9762  0.9761  0.9759  0.9755  0.9752  0.9747  0.9747  0.9746  0.9746
2024-04-29 04:48:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:48:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #1: GFLOPs: 196.2705. Time: 2356.0449 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #2: GFLOPs: 5.4759. Time: 84446.9297 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #3: GFLOPs: 59.9605. Time: 7712.1063 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #4: GFLOPs: 14.1133. Time: 32764.9497 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #5: GFLOPs: 46.2015. Time: 10008.8118 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #6: GFLOPs: 75.7924. Time: 6101.1681 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #7: GFLOPs: 105.8358. Time: 4369.2380 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #8: GFLOPs: 88.8765. Time: 5202.9733 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #9: GFLOPs: 92.6126. Time: 4993.0787 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #10: GFLOPs: 133.8618. Time: 3454.4728 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #11: GFLOPs: 61.1464. Time: 7562.5338 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #12: GFLOPs: 42.1861. Time: 10961.4796 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #13: GFLOPs: 67.6615. Time: 6834.3421 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #14: GFLOPs: 13.2856. Time: 34806.2663 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #15: GFLOPs: 92.6317. Time: 4992.0473 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #16: GFLOPs: 62.8014. Time: 7363.2469 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #17: GFLOPs: 11.7229. Time: 39446.1480 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:121] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #18: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(128), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(12), T.int64(14), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(12) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(384), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(14), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(12) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(384), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(12), T.int64(28), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(12) + ax1)
                        v2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax2)
                        v3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 4, 12, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 14, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[384, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #19: GFLOPs: 38.0036. Time: 12167.8494 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #20: GFLOPs: 65.2984. Time: 7081.6743 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #21: GFLOPs: 87.9600. Time: 5257.1848 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #22: GFLOPs: 84.9325. Time: 5444.5858 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #23: GFLOPs: 42.2440. Time: 10946.4624 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #24: GFLOPs: 22.4563. Time: 20592.0554 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #25: GFLOPs: 133.6924. Time: 3458.8511 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #26: GFLOPs: 76.4823. Time: 6046.1338 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #27: GFLOPs: 113.8885. Time: 4060.3037 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #28: GFLOPs: 26.4331. Time: 17494.0623 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #29: GFLOPs: 13.3509. Time: 34636.1417 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #30: GFLOPs: 132.4020. Time: 3492.5607 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #31: GFLOPs: 46.1398. Time: 10022.1982 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:121] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #32: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(168), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(28), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(84) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(6) // T.int64(2) * T.int64(8) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(84) // T.int64(6) * T.int64(4) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(28), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(84) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(6) // T.int64(2) * T.int64(8) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(84) // T.int64(6) * T.int64(4) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 3, 1, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 28, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[24, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #33: GFLOPs: 28.1893. Time: 16404.1542 us. Best GFLOPs: 196.2705
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #34: GFLOPs: 292.4383. Time: 1581.2638 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #35: GFLOPs: 89.1359. Time: 5187.8341 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #36: GFLOPs: 38.9264. Time: 11879.4024 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #37: GFLOPs: 86.6349. Time: 5337.5943 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #38: GFLOPs: 78.9091. Time: 5860.1894 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #39: GFLOPs: 92.3608. Time: 5006.6926 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #40: GFLOPs: 83.5915. Time: 5531.9235 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #41: GFLOPs: 126.2683. Time: 3662.2165 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #42: GFLOPs: 142.7517. Time: 3239.3450 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #43: GFLOPs: 43.4345. Time: 10646.4147 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:121] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #44: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(7)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(24) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(8) + oh_2_init * T.int64(4) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(14) * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(7)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(24) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(8) + oh_2 * T.int64(4) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(14) * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(6) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(24), T.int64(8), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(24) + ax1)
                        v2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(8) + ax2)
                        v3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(14) * T.int64(7) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 8, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 2, 4])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 1, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 6])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #45: GFLOPs: 12.4368. Time: 37181.8713 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:121] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #46: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(96), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(84), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(4), T.int64(1), T.int64(4), T.int64(8), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(8) + oh_2_init * T.int64(8) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(4), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(8), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(8) + oh_2 * T.int64(8) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(8), T.int64(56)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(4) + ax1)
                        v2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(8) + ax2)
                        v3, v4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[6, 2, 1, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 1, 8])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 28, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[48, 8])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #47: GFLOPs: 157.5074. Time: 2935.8746 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #48: GFLOPs: 0.9569. Time: 483247.6237 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #49: GFLOPs: 55.9038. Time: 8271.7452 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #50: GFLOPs: 50.0536. Time: 9238.5425 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #51: GFLOPs: 58.1343. Time: 7954.3732 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #52: GFLOPs: 26.2895. Time: 17589.6315 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #53: GFLOPs: 56.6922. Time: 8156.7195 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #54: GFLOPs: 3.6378. Time: 127115.1100 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #55: GFLOPs: 82.0188. Time: 5638.0018 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #56: GFLOPs: 42.9795. Time: 10759.1418 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #57: GFLOPs: 54.9849. Time: 8409.9765 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #58: GFLOPs: 162.2247. Time: 2850.5032 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #59: GFLOPs: 84.3064. Time: 5485.0183 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #60: GFLOPs: 21.1056. Time: 21909.8712 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #61: GFLOPs: 23.5249. Time: 19656.7135 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #62: GFLOPs: 129.3627. Time: 3574.6164 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #63: GFLOPs: 10.0189. Time: 46154.7620 us. Best GFLOPs: 292.4383
2024-04-29 05:12:18 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #64: GFLOPs: 39.0466. Time: 11842.8153 us. Best GFLOPs: 292.4383
2024-04-29 05:55:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:55:33 [INFO] [evolutionary_search.cc:715] Picked top 60 candidate(s) from database
2024-04-29 05:55:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 05:55:35 [INFO] [evolutionary_search.cc:723] Sampled 452 candidate(s)
2024-04-29 05:55:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 05:55:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 05:55:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 05:55:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 05:55:58 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9156  0.8420  0.8336  0.8112  0.7256  0.7008  0.6910  0.6692  0.6651  0.6572  0.6534  0.6534  0.6524  0.6503  0.6498  0.6496
[17 : 32]:	0.6487  0.6470  0.6410  0.6358  0.6352  0.6348  0.6270  0.6270  0.6269  0.6269  0.6222  0.6216  0.6176  0.6174  0.6173  0.6166
[33 : 48]:	0.6134  0.6125  0.6124  0.6088  0.6049  0.6045  0.6027  0.6019  0.5987  0.5935  0.5931  0.5928  0.5915  0.5904  0.5895  0.5893
[49 : 64]:	0.5892  0.5885  0.5860  0.5834  0.5827  0.5815  0.5785  0.5778  0.5773  0.5762  0.5748  0.5738  0.5738  0.5737  0.5726  0.5722
2024-04-29 05:55:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:55:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #65: GFLOPs: 294.8353. Time: 1568.4082 us. Best GFLOPs: 294.8353
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #66: GFLOPs: 293.9806. Time: 1572.9677 us. Best GFLOPs: 294.8353
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #67: GFLOPs: 296.1874. Time: 1561.2480 us. Best GFLOPs: 296.1874
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #68: GFLOPs: 296.8579. Time: 1557.7220 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #69: GFLOPs: 80.7070. Time: 5729.6388 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #70: GFLOPs: 170.9703. Time: 2704.6913 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #71: GFLOPs: 22.4889. Time: 20562.2252 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #72: GFLOPs: 280.9842. Time: 1645.7225 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #73: GFLOPs: 195.8818. Time: 2360.7200 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #74: GFLOPs: 21.9162. Time: 21099.5376 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #75: GFLOPs: 177.5439. Time: 2604.5503 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #76: GFLOPs: 187.5577. Time: 2465.4926 us. Best GFLOPs: 296.8579
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #77: GFLOPs: 303.9461. Time: 1521.3947 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #78: GFLOPs: 19.9014. Time: 23235.6194 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #79: GFLOPs: 159.8476. Time: 2892.8937 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #80: GFLOPs: 279.6554. Time: 1653.5421 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #81: GFLOPs: 49.9946. Time: 9249.4477 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #82: GFLOPs: 98.4117. Time: 4698.8527 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #83: GFLOPs: 149.7373. Time: 3088.2214 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #84: GFLOPs: 171.4305. Time: 2697.4311 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #85: GFLOPs: 129.8964. Time: 3559.9282 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #86: GFLOPs: 160.2863. Time: 2884.9753 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #87: GFLOPs: 199.9383. Time: 2312.8237 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #88: GFLOPs: 149.0273. Time: 3102.9340 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #89: GFLOPs: 96.0306. Time: 4815.3619 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #90: GFLOPs: 137.8282. Time: 3355.0608 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #91: GFLOPs: 234.4392. Time: 1972.4607 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #92: GFLOPs: 90.2277. Time: 5125.0586 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #93: GFLOPs: 114.6654. Time: 4032.7930 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #94: GFLOPs: 153.9841. Time: 3003.0502 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #95: GFLOPs: 101.8078. Time: 4542.1087 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #96: GFLOPs: 93.1823. Time: 4962.5527 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #97: GFLOPs: 234.5408. Time: 1971.6060 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #98: GFLOPs: 76.4749. Time: 6046.7161 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #99: GFLOPs: 167.6043. Time: 2759.0102 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #100: GFLOPs: 244.4255. Time: 1891.8732 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #101: GFLOPs: 65.7253. Time: 7035.6767 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #102: GFLOPs: 46.8409. Time: 9872.1952 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #103: GFLOPs: 190.2242. Time: 2430.9310 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #104: GFLOPs: 62.0110. Time: 7457.1021 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #105: GFLOPs: 54.7593. Time: 8444.6299 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #106: GFLOPs: 190.8284. Time: 2423.2349 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #107: GFLOPs: 166.6474. Time: 2774.8532 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #108: GFLOPs: 49.7498. Time: 9294.9554 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #109: GFLOPs: 193.8504. Time: 2385.4579 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #110: GFLOPs: 46.5078. Time: 9942.8877 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #111: GFLOPs: 145.6165. Time: 3175.6154 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #112: GFLOPs: 156.7575. Time: 2949.9189 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #113: GFLOPs: 57.7228. Time: 8011.0789 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #114: GFLOPs: 152.6672. Time: 3028.9543 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #115: GFLOPs: 116.5733. Time: 3966.7907 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #116: GFLOPs: 169.6625. Time: 2725.5412 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #117: GFLOPs: 151.8671. Time: 3044.9128 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #118: GFLOPs: 50.9158. Time: 9082.0964 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #119: GFLOPs: 98.8185. Time: 4679.5080 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #120: GFLOPs: 66.3531. Time: 6969.1093 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #121: GFLOPs: 154.2677. Time: 2997.5299 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #122: GFLOPs: 129.6985. Time: 3565.3621 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #123: GFLOPs: 153.1079. Time: 3020.2363 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #124: GFLOPs: 189.6357. Time: 2438.4757 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #125: GFLOPs: 178.4177. Time: 2591.7943 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #126: GFLOPs: 82.8562. Time: 5581.0218 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #127: GFLOPs: 57.0564. Time: 8104.6514 us. Best GFLOPs: 303.9461
2024-04-29 05:57:43 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #128: GFLOPs: 145.3778. Time: 3180.8292 us. Best GFLOPs: 303.9461
2024-04-29 06:56:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:56:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:56:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 06:56:34 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:56:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 06:56:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 06:56:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 06:56:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11e890f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x15603e08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5c81498)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xd54e1f8)]: 0 failure(s)
2024-04-29 06:56:58 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9814  0.9755  0.9721  0.9721  0.9707  0.9624  0.9585  0.9543  0.9543  0.9211  0.9209  0.9163  0.9102  0.9102  0.9008  0.9008
[17 : 32]:	0.8976  0.8959  0.8869  0.8869  0.8869  0.8843  0.8842  0.8825  0.8770  0.8717  0.8691  0.8655  0.8646  0.8592  0.8566  0.8544
[33 : 48]:	0.8455  0.8450  0.8384  0.8384  0.8326  0.8316  0.8229  0.8147  0.8140  0.8122  0.7915  0.7850  0.7850  0.7849  0.7830  0.7809
[49 : 64]:	0.7806  0.7806  0.7788  0.7711  0.7705  0.7704  0.7698  0.7677  0.7663  0.7653  0.7652  0.7631  0.7631  0.7601  0.7585  0.7566
2024-04-29 06:56:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:56:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #129: GFLOPs: 295.8287. Time: 1563.1413 us. Best GFLOPs: 303.9461
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #130: GFLOPs: 300.6414. Time: 1538.1182 us. Best GFLOPs: 303.9461
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #131: GFLOPs: 295.4110. Time: 1565.3512 us. Best GFLOPs: 303.9461
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #132: GFLOPs: 307.4269. Time: 1504.1690 us. Best GFLOPs: 307.4269
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #133: GFLOPs: 136.9853. Time: 3375.7062 us. Best GFLOPs: 307.4269
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #134: GFLOPs: 293.7156. Time: 1574.3869 us. Best GFLOPs: 307.4269
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #135: GFLOPs: 312.1979. Time: 1481.1821 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #136: GFLOPs: 304.2531. Time: 1519.8595 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #137: GFLOPs: 303.1495. Time: 1525.3925 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #138: GFLOPs: 291.0196. Time: 1588.9720 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #139: GFLOPs: 298.4114. Time: 1549.6126 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #140: GFLOPs: 298.3853. Time: 1549.7479 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #141: GFLOPs: 294.9073. Time: 1568.0250 us. Best GFLOPs: 312.1979
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #142: GFLOPs: 317.4174. Time: 1456.8262 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #143: GFLOPs: 297.5056. Time: 1554.3302 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #144: GFLOPs: 278.1642. Time: 1662.4065 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #145: GFLOPs: 298.3447. Time: 1549.9587 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #146: GFLOPs: 279.1843. Time: 1656.3326 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #147: GFLOPs: 256.8879. Time: 1800.0927 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #148: GFLOPs: 260.1845. Time: 1777.2849 us. Best GFLOPs: 317.4174
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #149: GFLOPs: 330.0513. Time: 1401.0609 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #150: GFLOPs: 253.2094. Time: 1826.2435 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #151: GFLOPs: 278.4006. Time: 1660.9950 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #152: GFLOPs: 292.2294. Time: 1582.3940 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #153: GFLOPs: 253.2229. Time: 1826.1458 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #154: GFLOPs: 133.0336. Time: 3475.9801 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #155: GFLOPs: 298.0731. Time: 1551.3710 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #156: GFLOPs: 257.8790. Time: 1793.1743 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #157: GFLOPs: 154.0958. Time: 3000.8729 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #158: GFLOPs: 258.0232. Time: 1792.1723 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #159: GFLOPs: 253.9697. Time: 1820.7763 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #160: GFLOPs: 275.1959. Time: 1680.3377 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #161: GFLOPs: 130.4602. Time: 3544.5452 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #162: GFLOPs: 257.3890. Time: 1796.5879 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #163: GFLOPs: 184.3201. Time: 2508.7992 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #164: GFLOPs: 177.1379. Time: 2610.5206 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #165: GFLOPs: 297.1455. Time: 1556.2139 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #166: GFLOPs: 258.2023. Time: 1790.9292 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #167: GFLOPs: 160.5546. Time: 2880.1543 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #168: GFLOPs: 246.3392. Time: 1877.1760 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #169: GFLOPs: 198.2669. Time: 2332.3213 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #170: GFLOPs: 252.6940. Time: 1829.9681 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #171: GFLOPs: 249.9224. Time: 1850.2625 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #172: GFLOPs: 117.0239. Time: 3951.5164 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #173: GFLOPs: 175.6975. Time: 2631.9214 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #174: GFLOPs: 149.4404. Time: 3094.3582 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #175: GFLOPs: 185.2353. Time: 2496.4032 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #176: GFLOPs: 168.4150. Time: 2745.7294 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #177: GFLOPs: 242.5738. Time: 1906.3144 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #178: GFLOPs: 200.5706. Time: 2305.5322 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #179: GFLOPs: 262.4203. Time: 1762.1427 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #180: GFLOPs: 190.8886. Time: 2422.4709 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #181: GFLOPs: 170.7190. Time: 2708.6731 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #182: GFLOPs: 138.7643. Time: 3332.4288 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #183: GFLOPs: 283.4251. Time: 1631.5495 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #184: GFLOPs: 194.7904. Time: 2373.9472 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #185: GFLOPs: 93.2389. Time: 4959.5371 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #186: GFLOPs: 190.7703. Time: 2423.9724 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #187: GFLOPs: 145.0322. Time: 3188.4102 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #188: GFLOPs: 253.6452. Time: 1823.1055 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #189: GFLOPs: 242.4340. Time: 1907.4144 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #190: GFLOPs: 77.9808. Time: 5929.9494 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #191: GFLOPs: 72.0232. Time: 6420.4604 us. Best GFLOPs: 330.0513
2024-04-29 06:58:22 [INFO] [task_scheduler.cc:131] [Task #85: fused_nn_contrib_conv2d_NCHWc_4] Trial #192: GFLOPs: 161.2279. Time: 2868.1267 us. Best GFLOPs: 330.0513
