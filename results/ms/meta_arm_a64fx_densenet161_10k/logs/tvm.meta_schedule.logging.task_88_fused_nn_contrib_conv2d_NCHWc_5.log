2024-04-29 02:33:56 [INFO] [task_scheduler.cc:160] Initializing Task #88: "fused_nn_contrib_conv2d_NCHWc_5"
2024-04-29 02:33:56 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4), T.int64(768), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-29 02:33:56 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:33:56 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(768), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(4), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(96) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(28) + ow_1 * T.int64(28) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(768), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(28), T.int64(28), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(96), oc_chunk_1 * T.int64(6) + ax1)
                        v2, v3, v4 = T.axis.remap("SSS", [ax2, ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 16, 2, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[768, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:33:56 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(768), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(4), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(96) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(28) + ow_1 * T.int64(28) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(768), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0, v1, v2, v3, v4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 16, 2, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[768, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:33:56 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(768), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(4), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(96) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(28) + ow_1 * T.int64(28) + ow_2 * T.int64(4) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 16, 2, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[768, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 04:51:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:51:47 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 04:51:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 04:51:50 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 04:51:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 04:51:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 04:51:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 04:52:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 04:52:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9989  0.9977  0.9970  0.9964  0.9960  0.9959  0.9952  0.9950  0.9942  0.9925  0.9923  0.9902  0.9901  0.9900  0.9895  0.9894
[17 : 32]:	0.9892  0.9889  0.9886  0.9879  0.9876  0.9869  0.9869  0.9869  0.9865  0.9856  0.9855  0.9853  0.9849  0.9846  0.9843  0.9842
[33 : 48]:	0.9839  0.9839  0.9837  0.9834  0.9824  0.9822  0.9820  0.9819  0.9819  0.9815  0.9813  0.9812  0.9812  0.9807  0.9800  0.9800
[49 : 64]:	0.9800  0.9784  0.9768  0.9754  0.9744  0.9740  0.9736  0.9734  0.9732  0.9731  0.9730  0.9729  0.9723  0.9719  0.9715  0.9707
2024-04-29 04:52:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:52:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #1: GFLOPs: 74.7431. Time: 6186.8156 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #2: GFLOPs: 11.5514. Time: 40031.6330 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #3: GFLOPs: 4.7418. Time: 97520.8167 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #4: GFLOPs: 47.9150. Time: 9650.8814 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #5: GFLOPs: 15.1045. Time: 30614.8925 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #6: GFLOPs: 63.8914. Time: 7237.6215 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #7: GFLOPs: 2.5688. Time: 180012.2683 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:121] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #8: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(32), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(24) + oc_chunk_2_init * T.int64(24) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(14) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(14) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(28), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(24) + ax1)
                    v2 = T.axis.spatial(T.int64(28), ax2)
                    v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(14) + ax3)
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[24, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #9: GFLOPs: 34.4919. Time: 13406.6995 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #10: GFLOPs: 12.8707. Time: 35928.3193 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #11: GFLOPs: 50.6625. Time: 9127.4945 us. Best GFLOPs: 74.7431
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #12: GFLOPs: 80.7479. Time: 5726.7398 us. Best GFLOPs: 80.7479
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #13: GFLOPs: 100.9219. Time: 4581.9780 us. Best GFLOPs: 100.9219
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #14: GFLOPs: 28.5363. Time: 16204.7070 us. Best GFLOPs: 100.9219
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #15: GFLOPs: 170.7642. Time: 2707.9566 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #16: GFLOPs: 1.9416. Time: 238167.2457 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #17: GFLOPs: 91.5535. Time: 5050.8409 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #18: GFLOPs: 87.8180. Time: 5265.6832 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #19: GFLOPs: 16.4584. Time: 28096.4303 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #20: GFLOPs: 84.5893. Time: 5466.6739 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #21: GFLOPs: 11.0676. Time: 41781.6960 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #22: GFLOPs: 2.7343. Time: 169117.7517 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #23: GFLOPs: 7.4654. Time: 61942.1207 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #24: GFLOPs: 4.2186. Time: 109616.1927 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #25: GFLOPs: 15.4091. Time: 30009.6400 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #26: GFLOPs: 4.4093. Time: 104874.7367 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #27: GFLOPs: 96.0219. Time: 4815.7971 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #28: GFLOPs: 9.8746. Time: 46829.2613 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #29: GFLOPs: 31.6208. Time: 14623.9759 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #30: GFLOPs: 47.6695. Time: 9700.5745 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #31: GFLOPs: 7.9857. Time: 57906.2843 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #32: GFLOPs: 5.7666. Time: 80190.4013 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #33: GFLOPs: 152.8419. Time: 3025.4925 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #34: GFLOPs: 20.6779. Time: 22363.1345 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #35: GFLOPs: 118.9290. Time: 3888.2187 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #36: GFLOPs: 94.5293. Time: 4891.8397 us. Best GFLOPs: 170.7642
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #37: GFLOPs: 260.9432. Time: 1772.1174 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #38: GFLOPs: 189.2877. Time: 2442.9588 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #39: GFLOPs: 8.9695. Time: 51554.9070 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #40: GFLOPs: 76.7695. Time: 6023.5103 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #41: GFLOPs: 88.6863. Time: 5214.1339 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #42: GFLOPs: 138.4305. Time: 3340.4627 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #43: GFLOPs: 97.6992. Time: 4733.1176 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #44: GFLOPs: 33.9636. Time: 13615.2138 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #45: GFLOPs: 40.3105. Time: 11471.4999 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #46: GFLOPs: 6.8011. Time: 67992.4717 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #47: GFLOPs: 102.5985. Time: 4507.1040 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #48: GFLOPs: 33.8407. Time: 13664.6630 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #49: GFLOPs: 12.5544. Time: 36833.4547 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #50: GFLOPs: 10.7414. Time: 43050.4573 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #51: GFLOPs: 105.1864. Time: 4396.2139 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #52: GFLOPs: 31.4887. Time: 14685.3449 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #53: GFLOPs: 121.6639. Time: 3800.8168 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #54: GFLOPs: 106.2362. Time: 4352.7729 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #55: GFLOPs: 46.5501. Time: 9933.8588 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #56: GFLOPs: 121.4634. Time: 3807.0880 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #57: GFLOPs: 10.8896. Time: 42464.6420 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #58: GFLOPs: 8.0571. Time: 57393.1063 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #59: GFLOPs: 84.3097. Time: 5484.7994 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #60: GFLOPs: 24.8149. Time: 18634.8693 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #61: GFLOPs: 7.9015. Time: 58523.5067 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #62: GFLOPs: 117.4678. Time: 3936.5839 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #63: GFLOPs: 64.9044. Time: 7124.6687 us. Best GFLOPs: 260.9432
2024-04-29 05:12:46 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #64: GFLOPs: 118.0822. Time: 3916.1025 us. Best GFLOPs: 260.9432
2024-04-29 05:51:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:51:05 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 05:51:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 05:51:07 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 05:51:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 05:51:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 05:51:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 05:51:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 05:51:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8579  0.7636  0.7600  0.7578  0.7539  0.7116  0.7058  0.7024  0.6993  0.6993  0.6909  0.6862  0.6862  0.6862  0.6784  0.6774
[17 : 32]:	0.6758  0.6721  0.6721  0.6719  0.6707  0.6690  0.6689  0.6625  0.6624  0.6586  0.6570  0.6570  0.6552  0.6549  0.6547  0.6513
[33 : 48]:	0.6484  0.6478  0.6467  0.6456  0.6448  0.6420  0.6412  0.6399  0.6380  0.6363  0.6361  0.6359  0.6324  0.6323  0.6293  0.6286
[49 : 64]:	0.6268  0.6260  0.6247  0.6238  0.6234  0.6231  0.6229  0.6226  0.6201  0.6198  0.6190  0.6178  0.6170  0.6170  0.6165  0.6146
2024-04-29 05:51:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:51:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #65: GFLOPs: 182.6977. Time: 2531.0768 us. Best GFLOPs: 260.9432
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #66: GFLOPs: 64.3754. Time: 7183.2092 us. Best GFLOPs: 260.9432
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #67: GFLOPs: 381.3325. Time: 1212.6477 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:121] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #68: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(336), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(12) // T.int64(4) * T.int64(32) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(12) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(12) // T.int64(4) * T.int64(32) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(12) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(24) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(12) // T.int64(4) * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(14) + ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(12) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 3, 8, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 7, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[28, 1, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 24])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #69: GFLOPs: 184.4772. Time: 2506.6624 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #70: GFLOPs: 200.5821. Time: 2305.4006 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #71: GFLOPs: 127.2511. Time: 3633.9321 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:121] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #72: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(336), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(84) // T.int64(28) * T.int64(32) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(14) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(84) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(84) // T.int64(28) * T.int64(32) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(84) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(64) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(84) // T.int64(28) * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(14) + ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(84) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 3, 8, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 7, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[12, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #73: GFLOPs: 102.2979. Time: 4520.3456 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #74: GFLOPs: 102.3156. Time: 4519.5638 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #75: GFLOPs: 197.3675. Time: 2342.9495 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #76: GFLOPs: 267.7175. Time: 1727.2757 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #77: GFLOPs: 268.2879. Time: 1723.6040 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:121] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #78: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(588), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(294) // T.int64(98) * T.int64(32) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(294) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(1), T.int64(4), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(294) // T.int64(98) * T.int64(32) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(294) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(64) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(294) // T.int64(98) * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(7) * T.int64(2) + ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(294) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 3, 8, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[12, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #79: GFLOPs: 108.3378. Time: 4268.3330 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #80: GFLOPs: 213.6940. Time: 2163.9445 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #81: GFLOPs: 198.7407. Time: 2326.7610 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #82: GFLOPs: 106.5697. Time: 4339.1513 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #83: GFLOPs: 80.7825. Time: 5724.2816 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #84: GFLOPs: 64.2836. Time: 7193.4699 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #85: GFLOPs: 206.3716. Time: 2240.7251 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #86: GFLOPs: 199.4036. Time: 2319.0252 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #87: GFLOPs: 195.0077. Time: 2371.3016 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #88: GFLOPs: 106.9763. Time: 4322.6590 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #89: GFLOPs: 78.1897. Time: 5914.1004 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #90: GFLOPs: 182.3481. Time: 2535.9299 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #91: GFLOPs: 160.0503. Time: 2889.2301 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #92: GFLOPs: 148.7785. Time: 3108.1241 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #93: GFLOPs: 197.5669. Time: 2340.5850 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #94: GFLOPs: 129.6654. Time: 3566.2718 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #95: GFLOPs: 67.9376. Time: 6806.5734 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #96: GFLOPs: 178.1014. Time: 2596.3980 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #97: GFLOPs: 149.2901. Time: 3097.4737 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #98: GFLOPs: 161.5782. Time: 2861.9081 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #99: GFLOPs: 78.9458. Time: 5857.4656 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #100: GFLOPs: 105.9852. Time: 4363.0795 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #101: GFLOPs: 73.0996. Time: 6325.9189 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #102: GFLOPs: 359.1457. Time: 1287.5611 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #103: GFLOPs: 90.3219. Time: 5119.7127 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #104: GFLOPs: 278.5784. Time: 1659.9346 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #105: GFLOPs: 229.1546. Time: 2017.9475 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #106: GFLOPs: 112.3208. Time: 4116.9760 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #107: GFLOPs: 121.6129. Time: 3802.4080 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #108: GFLOPs: 137.7978. Time: 3355.8009 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #109: GFLOPs: 76.2609. Time: 6063.6864 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #110: GFLOPs: 104.9179. Time: 4407.4637 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #111: GFLOPs: 130.6647. Time: 3538.9981 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #112: GFLOPs: 134.0847. Time: 3448.7301 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #113: GFLOPs: 167.4757. Time: 2761.1292 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #114: GFLOPs: 171.1089. Time: 2702.5012 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #115: GFLOPs: 73.9050. Time: 6256.9827 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #116: GFLOPs: 211.1030. Time: 2190.5041 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #117: GFLOPs: 126.1224. Time: 3666.4549 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #118: GFLOPs: 250.9401. Time: 1842.7586 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #119: GFLOPs: 84.4625. Time: 5474.8815 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #120: GFLOPs: 133.6782. Time: 3459.2185 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #121: GFLOPs: 209.2284. Time: 2210.1306 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #122: GFLOPs: 208.6088. Time: 2216.6945 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #123: GFLOPs: 365.1490. Time: 1266.3926 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #124: GFLOPs: 235.2625. Time: 1965.5579 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #125: GFLOPs: 200.3636. Time: 2307.9138 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #126: GFLOPs: 56.4713. Time: 8188.6262 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #127: GFLOPs: 77.6455. Time: 5955.5525 us. Best GFLOPs: 381.3325
2024-04-29 05:53:01 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #128: GFLOPs: 111.9043. Time: 4132.2988 us. Best GFLOPs: 381.3325
2024-04-29 07:32:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:32:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:32:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 07:32:28 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:32:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 07:32:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 07:32:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 07:32:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xd50e578)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd341518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd680d68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xccd3c38)]: 0 failure(s)
2024-04-29 07:32:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9913  0.9281  0.9281  0.9091  0.9091  0.8931  0.8886  0.8886  0.8884  0.8863  0.8792  0.8648  0.8648  0.8379  0.8358  0.8280
[17 : 32]:	0.8280  0.8260  0.8036  0.7928  0.7900  0.7882  0.7867  0.7867  0.7865  0.7833  0.7768  0.7759  0.7759  0.7714  0.7664  0.7651
[33 : 48]:	0.7632  0.7612  0.7589  0.7568  0.7568  0.7562  0.7550  0.7474  0.7463  0.7463  0.7459  0.7450  0.7388  0.7357  0.7325  0.7321
[49 : 64]:	0.7321  0.7321  0.7301  0.7242  0.7229  0.7213  0.7209  0.7209  0.7195  0.7176  0.7147  0.7022  0.6991  0.6944  0.6878  0.6856
2024-04-29 07:32:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:32:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #129: GFLOPs: 383.1552. Time: 1206.8790 us. Best GFLOPs: 383.1552
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #130: GFLOPs: 361.2318. Time: 1280.1255 us. Best GFLOPs: 383.1552
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #131: GFLOPs: 343.9511. Time: 1344.4411 us. Best GFLOPs: 383.1552
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #132: GFLOPs: 351.6702. Time: 1314.9307 us. Best GFLOPs: 383.1552
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #133: GFLOPs: 360.2429. Time: 1283.6393 us. Best GFLOPs: 383.1552
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #134: GFLOPs: 262.1974. Time: 1763.6407 us. Best GFLOPs: 383.1552
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #135: GFLOPs: 395.0074. Time: 1170.6667 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #136: GFLOPs: 379.9163. Time: 1217.1680 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #137: GFLOPs: 384.5167. Time: 1202.6057 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #138: GFLOPs: 156.5170. Time: 2954.4515 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #139: GFLOPs: 320.2004. Time: 1444.1644 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #140: GFLOPs: 373.0201. Time: 1239.6704 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #141: GFLOPs: 374.6838. Time: 1234.1662 us. Best GFLOPs: 395.0074
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #142: GFLOPs: 422.4481. Time: 1094.6244 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #143: GFLOPs: 407.7770. Time: 1134.0071 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #144: GFLOPs: 167.0737. Time: 2767.7734 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #145: GFLOPs: 170.5258. Time: 2711.7416 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #146: GFLOPs: 309.0564. Time: 1496.2385 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #147: GFLOPs: 315.8788. Time: 1463.9222 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #148: GFLOPs: 353.6313. Time: 1307.6390 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #149: GFLOPs: 196.2851. Time: 2355.8686 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #150: GFLOPs: 155.4029. Time: 2975.6325 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #151: GFLOPs: 168.3041. Time: 2747.5379 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #152: GFLOPs: 170.1746. Time: 2717.3381 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #153: GFLOPs: 170.8883. Time: 2705.9905 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #154: GFLOPs: 222.0088. Time: 2082.8991 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #155: GFLOPs: 128.8040. Time: 3590.1221 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #156: GFLOPs: 255.1916. Time: 1812.0578 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #157: GFLOPs: 255.0613. Time: 1812.9836 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #158: GFLOPs: 156.1369. Time: 2961.6454 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #159: GFLOPs: 242.4948. Time: 1906.9356 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #160: GFLOPs: 328.3065. Time: 1408.5072 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #161: GFLOPs: 215.3823. Time: 2146.9820 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #162: GFLOPs: 154.4911. Time: 2993.1945 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #163: GFLOPs: 142.9083. Time: 3235.7961 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #164: GFLOPs: 175.0287. Time: 2641.9779 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #165: GFLOPs: 154.3271. Time: 2996.3751 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #166: GFLOPs: 315.6229. Time: 1465.1091 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #167: GFLOPs: 376.4237. Time: 1228.4616 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #168: GFLOPs: 197.6869. Time: 2339.1635 us. Best GFLOPs: 422.4481
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #169: GFLOPs: 466.3611. Time: 991.5537 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #170: GFLOPs: 465.7563. Time: 992.8411 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #171: GFLOPs: 396.1279. Time: 1167.3553 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #172: GFLOPs: 214.3782. Time: 2157.0380 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #173: GFLOPs: 323.9858. Time: 1427.2911 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #174: GFLOPs: 201.2732. Time: 2297.4842 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #175: GFLOPs: 182.7821. Time: 2529.9084 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #176: GFLOPs: 217.4236. Time: 2126.8249 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #177: GFLOPs: 216.8081. Time: 2132.8634 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #178: GFLOPs: 104.3263. Time: 4432.4601 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #179: GFLOPs: 360.3144. Time: 1283.3847 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #180: GFLOPs: 266.2957. Time: 1736.4986 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #181: GFLOPs: 214.9899. Time: 2150.9014 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #182: GFLOPs: 435.2347. Time: 1062.4658 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #183: GFLOPs: 293.4346. Time: 1575.8949 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #184: GFLOPs: 294.5368. Time: 1569.9973 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #185: GFLOPs: 169.1881. Time: 2733.1828 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #186: GFLOPs: 191.9808. Time: 2408.6890 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #187: GFLOPs: 153.6375. Time: 3009.8252 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #188: GFLOPs: 179.1656. Time: 2580.9752 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #189: GFLOPs: 164.7078. Time: 2807.5287 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #190: GFLOPs: 8.7174. Time: 53045.7557 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #191: GFLOPs: 133.2421. Time: 3470.5390 us. Best GFLOPs: 466.3611
2024-04-29 07:34:29 [INFO] [task_scheduler.cc:131] [Task #88: fused_nn_contrib_conv2d_NCHWc_5] Trial #192: GFLOPs: 232.9154. Time: 1985.3644 us. Best GFLOPs: 466.3611
