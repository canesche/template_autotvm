2024-04-29 02:33:42 [INFO] [task_scheduler.cc:160] Initializing Task #83: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78"
2024-04-29 02:33:42 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(24), T.int64(1), T.int64(7), T.int64(7), T.int64(3), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(230), T.int64(230), T.int64(3)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(230), T.int64(230), T.int64(3)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(227) and T.int64(3) <= v_i3 and v_i3 < T.int64(227), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4), T.int64(3), T.int64(7), T.int64(7)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 02:33:42 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:33:42 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(24), T.int64(1), T.int64(7), T.int64(7), T.int64(3), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(230), T.int64(230), T.int64(3)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(8)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(117), T.int64(33), T.int64(3)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(230), oh_0 * T.int64(112) + ax2)
                        v_i3 = T.axis.spatial(T.int64(230), ow_0 * T.int64(28) + ax3)
                        v_i4 = T.axis.spatial(T.int64(3), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(227) and T.int64(3) <= v_i3 and v_i3 < T.int64(227), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4], T.float32(0))
                for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(2), T.int64(3), T.int64(7), T.int64(7), T.int64(1), T.int64(6), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(56) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(14) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(3), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(7), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(7), kw_0 + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 6, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 4, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[8, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[7, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[7, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 02:33:42 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(24), T.int64(1), T.int64(7), T.int64(7), T.int64(3), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(230), T.int64(230), T.int64(3)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(2)):
                for ic_0 in range(T.int64(3)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(33), T.int64(7), T.int64(1)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(230), oh_0 * T.int64(112) + oh_1 * T.int64(28) + ax2)
                            v_i3 = T.axis.spatial(T.int64(230), ow_0 * T.int64(28) + ow_1 * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(3), ic_0 + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(227) and T.int64(3) <= v_i3 and v_i3 < T.int64(227), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(7), T.int64(7), T.int64(1), T.int64(6), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(56) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(14) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(3), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(7), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(7), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(12), T.int64(14), T.int64(1), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(112), oh_0 * T.int64(56) + oh_1 * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(112), ow_0 * T.int64(14) + ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 6, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 4, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[8, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[7, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[7, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 02:33:42 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(24), T.int64(1), T.int64(7), T.int64(7), T.int64(3), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(230), T.int64(230), T.int64(3)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
            for n_0, oc_chunk_0, oh_0 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(117), T.int64(229), T.int64(3)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(230), oh_0 * T.int64(112) + ax2)
                        v_i3 = T.axis.spatial(T.int64(230), ax3)
                        v_i4 = T.axis.spatial(T.int64(3), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(227) and T.int64(3) <= v_i3 and v_i3 < T.int64(227), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4], T.float32(0))
                for ow_0, oc_block_0 in T.grid(T.int64(8), T.int64(1)):
                    for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(2), T.int64(3), T.int64(7), T.int64(7), T.int64(1), T.int64(6), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(56) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(14) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(3), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(7), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(7), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(12), T.int64(56), T.int64(14), T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(112), oh_0 * T.int64(56) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(112), ow_0 * T.int64(14) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 6, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 4, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[8, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[7, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[7, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 04:44:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:44:08 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 04:44:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 04:44:14 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 04:44:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 04:44:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 04:44:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 04:44:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 04:44:42 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9989  0.9977  0.9974  0.9974  0.9973  0.9961  0.9961  0.9958  0.9951  0.9949  0.9944  0.9942  0.9939  0.9938  0.9933  0.9931
[17 : 32]:	0.9929  0.9921  0.9920  0.9918  0.9915  0.9915  0.9910  0.9909  0.9908  0.9908  0.9905  0.9904  0.9892  0.9891  0.9890  0.9889
[33 : 48]:	0.9886  0.9877  0.9859  0.9854  0.9850  0.9842  0.9841  0.9838  0.9822  0.9822  0.9817  0.9809  0.9808  0.9804  0.9800  0.9793
[49 : 64]:	0.9788  0.9781  0.9759  0.9758  0.9753  0.9752  0.9738  0.9736  0.9736  0.9733  0.9732  0.9732  0.9725  0.9712  0.9708  0.9706
2024-04-29 04:44:42 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:44:43 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #1: GFLOPs: 25.8146. Time: 13808.0865 us. Best GFLOPs: 25.8146
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #2: GFLOPs: 72.6914. Time: 4903.6083 us. Best GFLOPs: 72.6914
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #3: GFLOPs: 13.9804. Time: 25496.4587 us. Best GFLOPs: 72.6914
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #4: GFLOPs: 45.3907. Time: 7852.9351 us. Best GFLOPs: 72.6914
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #5: GFLOPs: 11.3115. Time: 31512.3080 us. Best GFLOPs: 72.6914
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #6: GFLOPs: 66.9413. Time: 5324.8225 us. Best GFLOPs: 72.6914
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #7: GFLOPs: 106.0110. Time: 3362.3905 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #8: GFLOPs: 44.4383. Time: 8021.2335 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #9: GFLOPs: 5.8538. Time: 60892.4633 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #10: GFLOPs: 10.3311. Time: 34502.7530 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #11: GFLOPs: 62.0198. Time: 5747.3616 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #12: GFLOPs: 100.8719. Time: 3533.6941 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #13: GFLOPs: 66.8531. Time: 5331.8473 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #14: GFLOPs: 60.8905. Time: 5853.9537 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #15: GFLOPs: 64.0733. Time: 5563.1638 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #16: GFLOPs: 37.8292. Time: 9422.6165 us. Best GFLOPs: 106.0110
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #17: GFLOPs: 110.6666. Time: 3220.9386 us. Best GFLOPs: 110.6666
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #18: GFLOPs: 8.8015. Time: 40498.8200 us. Best GFLOPs: 110.6666
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #19: GFLOPs: 49.0672. Time: 7264.5390 us. Best GFLOPs: 110.6666
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #20: GFLOPs: 2.2140. Time: 161000.9553 us. Best GFLOPs: 110.6666
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #21: GFLOPs: 279.7479. Time: 1274.1838 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #22: GFLOPs: 141.4448. Time: 2520.0666 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #23: GFLOPs: 21.7998. Time: 16351.1124 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #24: GFLOPs: 188.0439. Time: 1895.5700 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #25: GFLOPs: 24.9115. Time: 14308.6784 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #26: GFLOPs: 48.7642. Time: 7309.6656 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #27: GFLOPs: 2.7097. Time: 131547.7843 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #28: GFLOPs: 200.0397. Time: 1781.8979 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #29: GFLOPs: 4.1096. Time: 86735.6553 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #30: GFLOPs: 3.2550. Time: 109507.6863 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #31: GFLOPs: 13.8191. Time: 25794.0518 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #32: GFLOPs: 70.7986. Time: 5034.7100 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #33: GFLOPs: 60.7544. Time: 5867.0710 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #34: GFLOPs: 37.0685. Time: 9615.9836 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #35: GFLOPs: 39.0261. Time: 9133.6458 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #36: GFLOPs: 52.6046. Time: 6776.0233 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #37: GFLOPs: 11.1529. Time: 31960.3943 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #38: GFLOPs: 8.4102. Time: 42383.3107 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #39: GFLOPs: 58.5532. Time: 6087.6317 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #40: GFLOPs: 25.3145. Time: 14080.8489 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #41: GFLOPs: 70.7859. Time: 5035.6132 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #42: GFLOPs: 7.5736. Time: 47064.7093 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #43: GFLOPs: 2.4789. Time: 143791.8243 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #44: GFLOPs: 61.5751. Time: 5788.8697 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #45: GFLOPs: 52.6908. Time: 6764.9394 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #46: GFLOPs: 80.1116. Time: 4449.4219 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #47: GFLOPs: 42.9246. Time: 8304.1068 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #48: GFLOPs: 6.6984. Time: 53214.0143 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:121] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #49: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(24), T.int64(1), T.int64(7), T.int64(7), T.int64(3), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(230), T.int64(230), T.int64(3)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(112), T.int64(112), T.int64(4)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(3), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(229), T.int64(229)):
                for ax4_fused in T.vectorized(T.int64(3)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(230), ax2)
                        v_i3 = T.axis.spatial(T.int64(230), ax3)
                        v_i4 = T.axis.spatial(T.int64(3), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(227) and T.int64(3) <= v_i3 and v_i3 < T.int64(227), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3 - T.int64(3), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(4), T.int64(14), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(28) + ow_1 * T.int64(28) + ow_2_init * T.int64(4) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(3), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4), T.int64(14), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(112), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(112), ow_0 * T.int64(28) + ow_1 * T.int64(28) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(3), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(7), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(7), kw_0 * T.int64(7) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(28), T.int64(28)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_fused_fused * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(112), oh_0 * T.int64(28) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(112), ow_0 * T.int64(28) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[3, 1, 2, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 2, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 7, 4])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[7, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 7])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77 = sch.get_loops(block=b68)
l78 = sch.fuse(l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l78)
l79 = sch.fuse(l77, preserve_unit_iters=True)
sch.vectorize(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l105)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b70)
l120 = sch.fuse(l119, preserve_unit_iters=True)
sch.vectorize(loop=l120)
b121 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146 = sch.get_loops(block=b121)
b147 = sch.decompose_reduction(block=b121, loop=l131)
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #50: GFLOPs: 22.0503. Time: 16165.3280 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #51: GFLOPs: 97.5805. Time: 3652.8860 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #52: GFLOPs: 140.9894. Time: 2528.2064 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #53: GFLOPs: 55.4749. Time: 6425.4371 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #54: GFLOPs: 16.5888. Time: 21487.4390 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #55: GFLOPs: 19.9291. Time: 17885.9005 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #56: GFLOPs: 54.3726. Time: 6555.7001 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #57: GFLOPs: 20.7167. Time: 17205.9245 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #58: GFLOPs: 48.1960. Time: 7395.8457 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #59: GFLOPs: 7.1956. Time: 49537.3980 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #60: GFLOPs: 2.9718. Time: 119942.8700 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #61: GFLOPs: 7.6447. Time: 46626.9887 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #62: GFLOPs: 5.1777. Time: 68842.9380 us. Best GFLOPs: 279.7479
2024-04-29 05:11:58 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #63: GFLOPs: 4.5432. Time: 78458.6610 us. Best GFLOPs: 279.7479
2024-04-29 06:08:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:08:48 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 06:08:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 06:08:54 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 06:09:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 06:09:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 06:09:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 06:09:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 06:09:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9752  0.9634  0.8850  0.8744  0.8696  0.8639  0.8632  0.8600  0.8515  0.8433  0.8400  0.8369  0.8307  0.8298  0.8252  0.8191
[17 : 32]:	0.8170  0.8168  0.8134  0.7885  0.7688  0.7665  0.7622  0.7613  0.7487  0.7412  0.7406  0.7339  0.7334  0.7320  0.7308  0.7303
[33 : 48]:	0.7293  0.7203  0.7186  0.7184  0.7180  0.7180  0.7175  0.7146  0.7106  0.7094  0.7094  0.7066  0.7053  0.6988  0.6977  0.6935
[49 : 64]:	0.6934  0.6822  0.6800  0.6779  0.6750  0.6597  0.6578  0.6408  0.6395  0.6345  0.6259  0.6233  0.6208  0.6185  0.6174  0.6119
2024-04-29 06:09:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:09:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #64: GFLOPs: 278.8906. Time: 1278.1007 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #65: GFLOPs: 60.0082. Time: 5940.0286 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #66: GFLOPs: 92.7671. Time: 3842.4212 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #67: GFLOPs: 127.7637. Time: 2789.9183 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #68: GFLOPs: 131.9413. Time: 2701.5816 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #69: GFLOPs: 132.2764. Time: 2694.7381 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #70: GFLOPs: 91.8926. Time: 3878.9894 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #71: GFLOPs: 102.2471. Time: 3486.1640 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #72: GFLOPs: 95.5601. Time: 3730.1171 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #73: GFLOPs: 132.8252. Time: 2683.6038 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #74: GFLOPs: 147.8381. Time: 2411.0861 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #75: GFLOPs: 92.8009. Time: 3841.0201 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #76: GFLOPs: 95.0730. Time: 3749.2273 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #77: GFLOPs: 126.9315. Time: 2808.2099 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #78: GFLOPs: 95.4703. Time: 3733.6242 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #79: GFLOPs: 163.7535. Time: 2176.7495 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #80: GFLOPs: 73.7449. Time: 4833.5595 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #81: GFLOPs: 93.6686. Time: 3805.4412 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #82: GFLOPs: 191.4671. Time: 1861.6791 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #83: GFLOPs: 97.9605. Time: 3638.7162 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #84: GFLOPs: 187.3262. Time: 1902.8322 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #85: GFLOPs: 253.2300. Time: 1407.6149 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #86: GFLOPs: 98.0255. Time: 3636.3016 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #87: GFLOPs: 101.4522. Time: 3513.4801 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #88: GFLOPs: 137.1179. Time: 2599.5896 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #89: GFLOPs: 110.8851. Time: 3214.5913 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #90: GFLOPs: 95.1383. Time: 3746.6554 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #91: GFLOPs: 80.6019. Time: 4422.3562 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #92: GFLOPs: 116.7137. Time: 3054.0571 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #93: GFLOPs: 105.4215. Time: 3381.1920 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #94: GFLOPs: 102.0895. Time: 3491.5489 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #95: GFLOPs: 49.1892. Time: 7246.5207 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #96: GFLOPs: 102.8694. Time: 3465.0749 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #97: GFLOPs: 109.0047. Time: 3270.0445 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #98: GFLOPs: 215.7117. Time: 1652.4384 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #99: GFLOPs: 142.2924. Time: 2505.0549 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #100: GFLOPs: 139.5888. Time: 2553.5747 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #101: GFLOPs: 41.0952. Time: 8673.7754 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #102: GFLOPs: 113.0515. Time: 3152.9911 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #103: GFLOPs: 129.9826. Time: 2742.2922 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #104: GFLOPs: 157.2045. Time: 2267.4304 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #105: GFLOPs: 134.7040. Time: 2646.1745 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #106: GFLOPs: 141.6668. Time: 2516.1168 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #107: GFLOPs: 120.6390. Time: 2954.6856 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #108: GFLOPs: 54.1659. Time: 6580.7166 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #109: GFLOPs: 99.4929. Time: 3582.6700 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #110: GFLOPs: 90.9141. Time: 3920.7363 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #111: GFLOPs: 116.4709. Time: 3060.4226 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #112: GFLOPs: 179.3956. Time: 1986.9507 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #113: GFLOPs: 140.3629. Time: 2539.4915 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #114: GFLOPs: 111.6635. Time: 3192.1824 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #115: GFLOPs: 262.8894. Time: 1355.8946 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #116: GFLOPs: 123.0051. Time: 2897.8506 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #117: GFLOPs: 193.1068. Time: 1845.8716 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #118: GFLOPs: 116.9254. Time: 3048.5273 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #119: GFLOPs: 59.6289. Time: 5977.8136 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #120: GFLOPs: 99.3741. Time: 3586.9536 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #121: GFLOPs: 45.0848. Time: 7906.2210 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #122: GFLOPs: 125.0009. Time: 2851.5809 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #123: GFLOPs: 99.5977. Time: 3578.8996 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #124: GFLOPs: 244.0738. Time: 1460.4200 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #125: GFLOPs: 9.1556. Time: 38932.6223 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #126: GFLOPs: 99.2854. Time: 3590.1583 us. Best GFLOPs: 279.7479
2024-04-29 06:11:23 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #127: GFLOPs: 30.1500. Time: 11822.5630 us. Best GFLOPs: 279.7479
2024-04-29 07:17:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:17:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:17:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 07:17:11 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:17:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 07:17:37 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 07:17:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 07:18:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x15358e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd9d23a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc2aa688)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x10812c78)]: 0 failure(s)
2024-04-29 07:18:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0621  1.0000  0.9969  0.8923  0.8555  0.8529  0.8469  0.8424  0.8352  0.8265  0.8127  0.8116  0.8108  0.7959  0.7870  0.7800
[17 : 32]:	0.7709  0.7686  0.7660  0.7511  0.7436  0.7436  0.7436  0.7331  0.7288  0.7221  0.7128  0.7088  0.7041  0.7035  0.6987  0.6964
[33 : 48]:	0.6960  0.6860  0.6855  0.6831  0.6823  0.6801  0.6791  0.6766  0.6759  0.6751  0.6751  0.6751  0.6751  0.6751  0.6732  0.6726
[49 : 64]:	0.6701  0.6696  0.6677  0.6673  0.6673  0.6669  0.6664  0.6612  0.6603  0.6595  0.6595  0.6595  0.6588  0.6588  0.6580  0.6572
2024-04-29 07:18:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:18:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #128: GFLOPs: 120.0953. Time: 2968.0618 us. Best GFLOPs: 279.7479
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #129: GFLOPs: 114.0727. Time: 3124.7635 us. Best GFLOPs: 279.7479
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #130: GFLOPs: 58.5049. Time: 6092.6579 us. Best GFLOPs: 279.7479
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #131: GFLOPs: 105.5598. Time: 3376.7621 us. Best GFLOPs: 279.7479
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #132: GFLOPs: 107.7295. Time: 3308.7537 us. Best GFLOPs: 279.7479
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #133: GFLOPs: 392.6974. Time: 907.6972 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #134: GFLOPs: 109.9024. Time: 3243.3348 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #135: GFLOPs: 279.5882. Time: 1274.9116 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #136: GFLOPs: 113.2022. Time: 3148.7931 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #137: GFLOPs: 286.0133. Time: 1246.2716 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #138: GFLOPs: 268.9152. Time: 1325.5119 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #139: GFLOPs: 263.2677. Time: 1353.9464 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #140: GFLOPs: 283.2972. Time: 1258.2204 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #141: GFLOPs: 260.3482. Time: 1369.1289 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #142: GFLOPs: 187.7096. Time: 1898.9460 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #143: GFLOPs: 167.1226. Time: 2132.8678 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #144: GFLOPs: 253.5181. Time: 1406.0155 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #145: GFLOPs: 108.6730. Time: 3280.0274 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #146: GFLOPs: 222.4794. Time: 1602.1722 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #147: GFLOPs: 162.8932. Time: 2188.2454 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #148: GFLOPs: 146.8023. Time: 2428.0976 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #149: GFLOPs: 196.4008. Time: 1814.9126 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #150: GFLOPs: 192.4753. Time: 1851.9280 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #151: GFLOPs: 110.4025. Time: 3228.6427 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #152: GFLOPs: 52.2623. Time: 6820.4109 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #153: GFLOPs: 75.1666. Time: 4742.1383 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #154: GFLOPs: 153.9505. Time: 2315.3567 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #155: GFLOPs: 228.1357. Time: 1562.4486 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #156: GFLOPs: 189.8198. Time: 1877.8349 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #157: GFLOPs: 371.3519. Time: 959.8720 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #158: GFLOPs: 111.6932. Time: 3191.3341 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #159: GFLOPs: 168.7646. Time: 2112.1155 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #160: GFLOPs: 119.6034. Time: 2980.2689 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #161: GFLOPs: 60.5037. Time: 5891.3755 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #162: GFLOPs: 74.2367. Time: 4801.5390 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #163: GFLOPs: 207.6350. Time: 1716.7155 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #164: GFLOPs: 100.3751. Time: 3551.1827 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #165: GFLOPs: 244.2884. Time: 1459.1371 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #166: GFLOPs: 245.5845. Time: 1451.4364 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #167: GFLOPs: 231.2985. Time: 1541.0833 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #168: GFLOPs: 169.5135. Time: 2102.7846 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #169: GFLOPs: 175.2228. Time: 2034.2691 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #170: GFLOPs: 111.9327. Time: 3184.5045 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #171: GFLOPs: 140.5754. Time: 2535.6516 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #172: GFLOPs: 174.8693. Time: 2038.3812 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #173: GFLOPs: 129.6418. Time: 2749.5024 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #174: GFLOPs: 144.7452. Time: 2462.6061 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #175: GFLOPs: 202.9016. Time: 1756.7643 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #176: GFLOPs: 106.5246. Time: 3346.1779 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #177: GFLOPs: 126.6767. Time: 2813.8582 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #178: GFLOPs: 144.0776. Time: 2474.0162 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #179: GFLOPs: 128.0162. Time: 2784.4159 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #180: GFLOPs: 168.5757. Time: 2114.4822 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #181: GFLOPs: 375.0608. Time: 950.3800 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #182: GFLOPs: 69.2006. Time: 5150.9690 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #183: GFLOPs: 139.4068. Time: 2556.9068 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #184: GFLOPs: 303.6845. Time: 1173.7519 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #185: GFLOPs: 59.7924. Time: 5961.4638 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #186: GFLOPs: 82.3873. Time: 4326.5224 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #187: GFLOPs: 82.3914. Time: 4326.3061 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #188: GFLOPs: 216.0773. Time: 1649.6423 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #189: GFLOPs: 244.3042. Time: 1459.0427 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #190: GFLOPs: 138.2055. Time: 2579.1320 us. Best GFLOPs: 392.6974
2024-04-29 07:19:48 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_78] Trial #191: GFLOPs: 56.6359. Time: 6293.7218 us. Best GFLOPs: 392.6974
