2024-04-29 02:34:01 [INFO] [task_scheduler.cc:160] Initializing Task #91: "fused_nn_contrib_conv2d_NCHWc_6"
2024-04-29 02:34:01 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4), T.int64(2112), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-29 02:34:01 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:34:01 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2112), T.int64(1), T.int64(1), T.int64(1), T.int64(22), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(264), oc_chunk_0 * T.int64(132) + oc_chunk_1 * T.int64(66) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(2112), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(66), T.int64(7), T.int64(1), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(264), oc_chunk_0 * T.int64(132) + oc_chunk_1 * T.int64(66) + ax1)
                        v2 = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ax3)
                        v4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 22, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[2112, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:34:01 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1), T.int64(2112), T.int64(1), T.int64(1), T.int64(1), T.int64(22), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(264), oc_chunk_0 * T.int64(132) + oc_chunk_1 * T.int64(66) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(2112), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(132), T.int64(14), T.int64(7), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(264), oc_chunk_0 * T.int64(132) + ax1)
                        v2 = T.axis.spatial(T.int64(14), ax2)
                        v3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 22, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[2112, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:34:01 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1), T.int64(2112), T.int64(1), T.int64(1), T.int64(1), T.int64(22), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), oc_chunk_0 * T.int64(132) + oc_chunk_1 * T.int64(66) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 22, 3])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[2112, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 04:55:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:55:08 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 04:55:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 04:55:10 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 04:55:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 04:55:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 04:55:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 04:55:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 04:55:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9996  0.9993  0.9991  0.9982  0.9976  0.9975  0.9972  0.9971  0.9969  0.9969  0.9968  0.9965  0.9965  0.9963  0.9959
[17 : 32]:	0.9955  0.9955  0.9949  0.9944  0.9938  0.9933  0.9931  0.9931  0.9929  0.9925  0.9923  0.9923  0.9919  0.9918  0.9917  0.9915
[33 : 48]:	0.9909  0.9908  0.9906  0.9898  0.9892  0.9885  0.9882  0.9878  0.9877  0.9873  0.9857  0.9855  0.9855  0.9852  0.9848  0.9846
[49 : 64]:	0.9846  0.9839  0.9837  0.9834  0.9826  0.9826  0.9824  0.9822  0.9819  0.9817  0.9814  0.9813  0.9809  0.9805  0.9800  0.9798
2024-04-29 04:55:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:55:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #1: GFLOPs: 40.5102. Time: 21581.4044 us. Best GFLOPs: 40.5102
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #2: GFLOPs: 187.8659. Time: 4653.6745 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #3: GFLOPs: 141.3640. Time: 6184.5080 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #4: GFLOPs: 47.7024. Time: 18327.5120 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #5: GFLOPs: 80.5812. Time: 10849.5088 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #6: GFLOPs: 54.4821. Time: 16046.8549 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #7: GFLOPs: 13.9327. Time: 62749.4510 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #8: GFLOPs: 78.7517. Time: 11101.5652 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #9: GFLOPs: 149.4253. Time: 5850.8609 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #10: GFLOPs: 106.2748. Time: 8226.4695 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #11: GFLOPs: 102.4585. Time: 8532.8891 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #12: GFLOPs: 84.1930. Time: 10384.0814 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #13: GFLOPs: 37.3399. Time: 23413.7518 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #14: GFLOPs: 95.2889. Time: 9174.9024 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #15: GFLOPs: 83.8682. Time: 10424.2929 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #16: GFLOPs: 72.7004. Time: 12025.6106 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #17: GFLOPs: 25.2280. Time: 34654.6050 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #18: GFLOPs: 60.3621. Time: 14483.6957 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #19: GFLOPs: 85.9756. Time: 10168.7763 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #20: GFLOPs: 58.9969. Time: 14818.8533 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #21: GFLOPs: 153.2511. Time: 5704.7996 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #22: GFLOPs: 98.4454. Time: 8880.7274 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #23: GFLOPs: 110.2740. Time: 7928.1266 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #24: GFLOPs: 168.0256. Time: 5203.1743 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #25: GFLOPs: 58.4492. Time: 14957.7217 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #26: GFLOPs: 26.2319. Time: 33328.4055 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #27: GFLOPs: 102.1938. Time: 8554.9836 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #28: GFLOPs: 102.0176. Time: 8569.7595 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #29: GFLOPs: 70.0795. Time: 12475.3503 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #30: GFLOPs: 77.7302. Time: 11247.4520 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #31: GFLOPs: 47.9362. Time: 18238.1443 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #32: GFLOPs: 76.0224. Time: 11500.1257 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #33: GFLOPs: 59.4727. Time: 14700.3034 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #34: GFLOPs: 139.7366. Time: 6256.5337 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #35: GFLOPs: 80.9745. Time: 10796.8123 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #36: GFLOPs: 16.3535. Time: 53460.4863 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #37: GFLOPs: 87.5069. Time: 9990.8274 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #38: GFLOPs: 77.7715. Time: 11241.4764 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #39: GFLOPs: 0.6879. Time: 1270870.4117 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #40: GFLOPs: 7.7161. Time: 113303.7667 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #41: GFLOPs: 90.8583. Time: 9622.3121 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #42: GFLOPs: 73.1481. Time: 11952.0110 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #43: GFLOPs: 112.6061. Time: 7763.9382 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #44: GFLOPs: 23.8482. Time: 36659.6740 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #45: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(33), T.int64(14), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(66) + oc_chunk_2_init * T.int64(33) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1056), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(33), T.int64(14), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(66) + oc_chunk_2 * T.int64(33) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(2112), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(66), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(66) + ax1)
                        v2 = T.axis.spatial(T.int64(14), ax2)
                        v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 2, 33])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1056, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #46: GFLOPs: 15.1543. Time: 57691.0200 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #47: GFLOPs: 57.6947. Time: 15153.3350 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #48: GFLOPs: 6.2693. Time: 139452.5177 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #49: GFLOPs: 6.8095. Time: 128389.8927 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #50: GFLOPs: 52.9829. Time: 16500.9264 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #51: GFLOPs: 38.2464. Time: 22858.7982 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #52: GFLOPs: 102.9196. Time: 8494.6532 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #53: GFLOPs: 171.4944. Time: 5097.9304 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #54: GFLOPs: 1.7781. Time: 491690.5330 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #55: GFLOPs: 75.3283. Time: 11606.0846 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #56: GFLOPs: 104.3023. Time: 8382.0492 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #57: GFLOPs: 65.3329. Time: 13381.7119 us. Best GFLOPs: 187.8659
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #58: GFLOPs: 313.4009. Time: 2789.6112 us. Best GFLOPs: 313.4009
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #59: GFLOPs: 27.2323. Time: 32103.9922 us. Best GFLOPs: 313.4009
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #60: GFLOPs: 33.7535. Time: 25901.4935 us. Best GFLOPs: 313.4009
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #61: GFLOPs: 104.4645. Time: 8369.0321 us. Best GFLOPs: 313.4009
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #62: GFLOPs: 102.5592. Time: 8524.5034 us. Best GFLOPs: 313.4009
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #63: GFLOPs: 87.7370. Time: 9964.6253 us. Best GFLOPs: 313.4009
2024-04-29 05:13:15 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #64: GFLOPs: 25.0695. Time: 34873.6743 us. Best GFLOPs: 313.4009
2024-04-29 05:29:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:29:32 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 05:29:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 05:29:34 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 05:29:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 05:29:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 05:29:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 05:29:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 05:29:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0100  0.9816  0.9449  0.9366  0.7484  0.7166  0.7076  0.7070  0.6892  0.6857  0.6789  0.6769  0.6769  0.6735  0.6726  0.6707
[17 : 32]:	0.6699  0.6690  0.6676  0.6676  0.6676  0.6622  0.6619  0.6571  0.6555  0.6555  0.6537  0.6534  0.6509  0.6503  0.6494  0.6449
[33 : 48]:	0.6430  0.6391  0.6390  0.6370  0.6346  0.6306  0.6297  0.6258  0.6249  0.6243  0.6221  0.6220  0.6220  0.6220  0.6207  0.6207
[49 : 64]:	0.6205  0.6180  0.6142  0.6100  0.6084  0.6082  0.6065  0.6065  0.6056  0.6029  0.6011  0.6008  0.5970  0.5960  0.5952  0.5930
2024-04-29 05:29:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:29:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #65: GFLOPs: 312.8243. Time: 2794.7533 us. Best GFLOPs: 313.4009
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #66: GFLOPs: 160.2159. Time: 5456.8036 us. Best GFLOPs: 313.4009
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #67: GFLOPs: 313.4232. Time: 2789.4127 us. Best GFLOPs: 313.4232
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #68: GFLOPs: 318.3760. Time: 2746.0197 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #69: GFLOPs: 41.0833. Time: 21280.3606 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #70: GFLOPs: 180.5901. Time: 4841.1666 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #71: GFLOPs: 77.4274. Time: 11291.4387 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #72: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(308), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(66), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(24), T.int64(7), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[11, 1, 3, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[66, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #73: GFLOPs: 150.1810. Time: 5821.4182 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #74: GFLOPs: 146.6350. Time: 5962.1951 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #75: GFLOPs: 181.2104. Time: 4824.5941 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #76: GFLOPs: 149.4877. Time: 5848.4202 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #77: GFLOPs: 130.3417. Time: 6707.4979 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #78: GFLOPs: 246.6841. Time: 3544.0741 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #79: GFLOPs: 106.2466. Time: 8228.6514 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #80: GFLOPs: 130.2243. Time: 6713.5440 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #81: GFLOPs: 113.5419. Time: 7699.9480 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #82: GFLOPs: 98.8199. Time: 8847.0693 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #83: GFLOPs: 127.5260. Time: 6855.5947 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #84: GFLOPs: 221.6519. Time: 3944.3230 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #85: GFLOPs: 130.7039. Time: 6688.9098 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #86: GFLOPs: 249.4434. Time: 3504.8696 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #87: GFLOPs: 89.4411. Time: 9774.7721 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #88: GFLOPs: 108.0880. Time: 8088.4732 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #89: GFLOPs: 150.1722. Time: 5821.7621 us. Best GFLOPs: 318.3760
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #90: GFLOPs: 346.0475. Time: 2526.4351 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #91: GFLOPs: 154.4099. Time: 5661.9845 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #92: GFLOPs: 108.0734. Time: 8089.5601 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #93: GFLOPs: 36.6265. Time: 23869.8128 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #94: GFLOPs: 154.0197. Time: 5676.3302 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #95: GFLOPs: 61.9306. Time: 14116.8868 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #96: GFLOPs: 145.4169. Time: 6012.1379 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #97: GFLOPs: 117.1453. Time: 7463.0929 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #98: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(336), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(44) + oc_chunk_2_init * T.int64(11) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(96), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(1), T.int64(22), T.int64(1), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(44) + oc_chunk_2 * T.int64(11) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 * T.int64(22) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(44), T.int64(1), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(44) + ax1)
                    v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) + ax2)
                    v3 = T.axis.spatial(T.int64(14), ax3)
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[6, 1, 4, 11])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[96, 22])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #99: GFLOPs: 119.7015. Time: 7303.7246 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #100: GFLOPs: 171.6110. Time: 5094.4671 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #101: GFLOPs: 192.0032. Time: 4553.3966 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #102: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(308), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(22) // T.int64(2) * T.int64(24) + oc_chunk_2_init * T.int64(24) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(44) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(44) // T.int64(22) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2112), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(22) // T.int64(2) * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(44) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(44) // T.int64(22) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(2), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(22) // T.int64(2) * T.int64(24) + ax1)
                    v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(44) * T.int64(2) + ax2)
                    v3 = T.axis.spatial(T.int64(14), ax3)
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(44) // T.int64(22) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 11, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[2112, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #103: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(308), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(132), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(24), T.int64(7), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[11, 1, 3, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[132, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #104: GFLOPs: 36.0564. Time: 24247.2104 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #105: GFLOPs: 142.6588. Time: 6128.3742 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #106: GFLOPs: 123.7679. Time: 7063.7566 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #107: GFLOPs: 192.0809. Time: 4551.5548 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #108: GFLOPs: 133.0865. Time: 6569.1619 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #109: GFLOPs: 132.9574. Time: 6575.5370 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #110: GFLOPs: 132.5648. Time: 6595.0116 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #111: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(308), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + oc_chunk_2_init * T.int64(24) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(192), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 * T.int64(11) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(2), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(24) + ax1)
                    v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax2)
                    v3 = T.axis.spatial(T.int64(14), ax3)
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[11, 1, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[192, 11])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #112: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(308), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(154) // T.int64(14) * T.int64(24) + oc_chunk_2_init * T.int64(24) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(154) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(192), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(154) // T.int64(14) * T.int64(24) + oc_chunk_2 * T.int64(24) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(154) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 * T.int64(11) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(2), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(154) // T.int64(14) * T.int64(24) + ax1)
                    v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax2)
                    v3 = T.axis.spatial(T.int64(14), ax3)
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(154) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 11, 1, 24])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[192, 11])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #113: GFLOPs: 151.9572. Time: 5753.3753 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #114: GFLOPs: 87.7882. Time: 9958.8211 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #115: GFLOPs: 244.7534. Time: 3572.0312 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #116: GFLOPs: 71.0297. Time: 12308.4582 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #117: GFLOPs: 161.1027. Time: 5426.7643 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #118: GFLOPs: 91.4541. Time: 9559.6210 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #119: GFLOPs: 109.3169. Time: 7997.5431 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #120: GFLOPs: 126.4219. Time: 6915.4672 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #121: GFLOPs: 144.7148. Time: 6041.3087 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #122: GFLOPs: 162.7933. Time: 5370.4081 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #123: GFLOPs: 155.8348. Time: 5610.2146 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:121] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #124: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(528), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(264), T.int64(528), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(264), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(336), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(44), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(6) // T.int64(2) * T.int64(88) + oc_chunk_2_init * T.int64(44) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(24) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(24) // T.int64(6) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2112), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(44), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(6) // T.int64(2) * T.int64(88) + oc_chunk_2 * T.int64(44) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(24) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(24) // T.int64(6) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2112), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(88), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(264), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(6) // T.int64(2) * T.int64(88) + ax1)
                    v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(24) + ax2)
                    v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ax3)
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(24) // T.int64(6) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 3, 2, 44])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[2112, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #125: GFLOPs: 101.5951. Time: 8605.3987 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #126: GFLOPs: 31.9230. Time: 27386.7555 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #127: GFLOPs: 55.8183. Time: 15662.7347 us. Best GFLOPs: 346.0475
2024-04-29 05:31:39 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #128: GFLOPs: 66.8957. Time: 13069.1058 us. Best GFLOPs: 346.0475
2024-04-29 06:11:23 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:11:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:11:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 06:11:26 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:11:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 06:11:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 06:11:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 06:11:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 06:11:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9467  0.9385  0.9380  0.9241  0.9065  0.8898  0.8898  0.8796  0.8761  0.8739  0.8589  0.8564  0.8563  0.8474  0.8474  0.8459
[17 : 32]:	0.8430  0.8281  0.8144  0.7770  0.7770  0.7655  0.7649  0.7649  0.7641  0.7595  0.7482  0.7396  0.7300  0.7274  0.7216  0.7179
[33 : 48]:	0.7119  0.7095  0.7094  0.7092  0.7031  0.6901  0.6899  0.6850  0.6840  0.6837  0.6837  0.6826  0.6822  0.6817  0.6805  0.6771
[49 : 64]:	0.6765  0.6694  0.6677  0.6661  0.6553  0.6512  0.6505  0.6412  0.6396  0.6349  0.6310  0.6300  0.6272  0.6206  0.6181  0.6179
2024-04-29 06:11:49 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:11:49 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #129: GFLOPs: 314.2427. Time: 2782.1384 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #130: GFLOPs: 310.3730. Time: 2816.8255 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #131: GFLOPs: 315.3109. Time: 2772.7125 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #132: GFLOPs: 320.4198. Time: 2728.5038 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #133: GFLOPs: 315.7612. Time: 2768.7590 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #134: GFLOPs: 314.4446. Time: 2780.3522 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #135: GFLOPs: 314.3536. Time: 2781.1564 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #136: GFLOPs: 311.9876. Time: 2802.2477 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #137: GFLOPs: 310.2715. Time: 2817.7471 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #138: GFLOPs: 307.1511. Time: 2846.3732 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #139: GFLOPs: 308.9538. Time: 2829.7649 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #140: GFLOPs: 318.3885. Time: 2745.9115 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #141: GFLOPs: 153.0209. Time: 5713.3787 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #142: GFLOPs: 314.1896. Time: 2782.6084 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #143: GFLOPs: 314.0619. Time: 2783.7398 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #144: GFLOPs: 311.2142. Time: 2809.2114 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #145: GFLOPs: 314.8777. Time: 2776.5274 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #146: GFLOPs: 147.6520. Time: 5921.1289 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #147: GFLOPs: 222.9618. Time: 3921.1490 us. Best GFLOPs: 346.0475
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #148: GFLOPs: 438.3770. Time: 1994.3257 us. Best GFLOPs: 438.3770
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #149: GFLOPs: 440.9289. Time: 1982.7835 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #150: GFLOPs: 196.2882. Time: 4453.9957 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #151: GFLOPs: 435.9022. Time: 2005.6484 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #152: GFLOPs: 435.4427. Time: 2007.7650 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #153: GFLOPs: 165.2998. Time: 5288.9764 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #154: GFLOPs: 167.9765. Time: 5204.6953 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #155: GFLOPs: 169.5499. Time: 5156.3983 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #156: GFLOPs: 196.8915. Time: 4440.3464 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #157: GFLOPs: 133.2892. Time: 6559.1708 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #158: GFLOPs: 169.9897. Time: 5143.0577 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #159: GFLOPs: 116.3110. Time: 7516.6297 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #160: GFLOPs: 85.9807. Time: 10168.1752 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #161: GFLOPs: 258.6515. Time: 3380.0943 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #162: GFLOPs: 418.8558. Time: 2087.2733 us. Best GFLOPs: 440.9289
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #163: GFLOPs: 455.9382. Time: 1917.5114 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #164: GFLOPs: 247.9549. Time: 3525.9096 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #165: GFLOPs: 269.2562. Time: 3246.9698 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #166: GFLOPs: 140.4937. Time: 6222.8159 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #167: GFLOPs: 168.7662. Time: 5180.3410 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #168: GFLOPs: 269.5767. Time: 3243.1092 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #169: GFLOPs: 221.7211. Time: 3943.0912 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #170: GFLOPs: 151.1364. Time: 5784.6197 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #171: GFLOPs: 154.7486. Time: 5649.5924 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #172: GFLOPs: 114.2031. Time: 7655.3696 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #173: GFLOPs: 146.1205. Time: 5983.1902 us. Best GFLOPs: 455.9382
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #174: GFLOPs: 458.5621. Time: 1906.5392 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #175: GFLOPs: 257.5233. Time: 3394.9035 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #176: GFLOPs: 170.1063. Time: 5139.5297 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #177: GFLOPs: 251.6460. Time: 3474.1929 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #178: GFLOPs: 152.7939. Time: 5721.8675 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #179: GFLOPs: 248.7593. Time: 3514.5088 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #180: GFLOPs: 127.3197. Time: 6866.7017 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #181: GFLOPs: 105.1875. Time: 8311.5055 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #182: GFLOPs: 139.5618. Time: 6264.3699 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #183: GFLOPs: 256.8801. Time: 3403.4039 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #184: GFLOPs: 140.1425. Time: 6238.4137 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #185: GFLOPs: 32.0104. Time: 27311.9857 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #186: GFLOPs: 258.8169. Time: 3377.9353 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #187: GFLOPs: 146.8358. Time: 5954.0411 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #188: GFLOPs: 148.2583. Time: 5896.9152 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #189: GFLOPs: 127.2854. Time: 6868.5537 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #190: GFLOPs: 3.8075. Time: 229615.2640 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #191: GFLOPs: 19.2266. Time: 45471.7493 us. Best GFLOPs: 458.5621
2024-04-29 06:13:33 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #192: GFLOPs: 34.9079. Time: 25044.9413 us. Best GFLOPs: 458.5621
2024-04-29 07:19:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:19:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:19:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 07:19:51 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:19:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 07:20:01 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 07:20:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 07:20:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x30dde18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6f88698)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xcdbcf28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x120c21a8)]: 0 failure(s)
2024-04-29 07:20:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9427  0.9046  0.9030  0.8864  0.8843  0.8464  0.8422  0.8413  0.8215  0.8191  0.8185  0.8155  0.8055  0.7946  0.7677  0.7637
[17 : 32]:	0.7602  0.7591  0.7521  0.7512  0.7512  0.7489  0.7480  0.7473  0.7456  0.7451  0.7369  0.7338  0.7338  0.7227  0.7215  0.7205
[33 : 48]:	0.7174  0.7174  0.7095  0.7073  0.7073  0.6981  0.6894  0.6877  0.6877  0.6875  0.6865  0.6860  0.6816  0.6809  0.6795  0.6795
[49 : 64]:	0.6790  0.6782  0.6761  0.6738  0.6726  0.6725  0.6709  0.6695  0.6659  0.6626  0.6621  0.6613  0.6593  0.6593  0.6586  0.6568
2024-04-29 07:20:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:20:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #193: GFLOPs: 225.6105. Time: 3875.1143 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #194: GFLOPs: 438.9612. Time: 1991.6719 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #195: GFLOPs: 440.8255. Time: 1983.2489 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #196: GFLOPs: 433.7230. Time: 2015.7259 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #197: GFLOPs: 347.8849. Time: 2513.0914 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #198: GFLOPs: 404.6748. Time: 2160.4179 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #199: GFLOPs: 424.5991. Time: 2059.0403 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #200: GFLOPs: 223.3624. Time: 3914.1167 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #201: GFLOPs: 440.3389. Time: 1985.4405 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #202: GFLOPs: 430.9077. Time: 2028.8952 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #203: GFLOPs: 362.6025. Time: 2411.0885 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #204: GFLOPs: 362.5994. Time: 2411.1090 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #205: GFLOPs: 440.7606. Time: 1983.5407 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #206: GFLOPs: 411.8230. Time: 2122.9182 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #207: GFLOPs: 423.4409. Time: 2064.6722 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #208: GFLOPs: 370.0104. Time: 2362.8165 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #209: GFLOPs: 180.9858. Time: 4830.5819 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #210: GFLOPs: 181.4430. Time: 4818.4099 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #211: GFLOPs: 126.1237. Time: 6931.8162 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #212: GFLOPs: 363.0076. Time: 2408.3978 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #213: GFLOPs: 314.6303. Time: 2778.7106 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #214: GFLOPs: 173.1841. Time: 5048.1913 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #215: GFLOPs: 228.6684. Time: 3823.2947 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #216: GFLOPs: 122.0554. Time: 7162.8678 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #217: GFLOPs: 421.8157. Time: 2072.6272 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #218: GFLOPs: 119.2696. Time: 7330.1686 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #219: GFLOPs: 346.1161. Time: 2525.9349 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #220: GFLOPs: 317.5461. Time: 2753.1955 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #221: GFLOPs: 317.4156. Time: 2754.3282 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #222: GFLOPs: 112.6090. Time: 7763.7342 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #223: GFLOPs: 317.1398. Time: 2756.7234 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #224: GFLOPs: 381.0943. Time: 2294.0953 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #225: GFLOPs: 312.3829. Time: 2798.7018 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #226: GFLOPs: 312.6394. Time: 2796.4062 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #227: GFLOPs: 138.1363. Time: 6329.0143 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #228: GFLOPs: 318.8344. Time: 2742.0710 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #229: GFLOPs: 319.0334. Time: 2740.3611 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #230: GFLOPs: 425.9735. Time: 2052.3970 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #231: GFLOPs: 312.8511. Time: 2794.5131 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #232: GFLOPs: 316.1809. Time: 2765.0837 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #233: GFLOPs: 315.0825. Time: 2774.7232 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #234: GFLOPs: 311.2811. Time: 2808.6080 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #235: GFLOPs: 197.8136. Time: 4419.6496 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #236: GFLOPs: 425.9877. Time: 2052.3282 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #237: GFLOPs: 311.4344. Time: 2807.2252 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #238: GFLOPs: 86.1709. Time: 10145.7299 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #239: GFLOPs: 158.8198. Time: 5504.7721 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #240: GFLOPs: 192.2744. Time: 4546.9740 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #241: GFLOPs: 147.2048. Time: 5939.1168 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #242: GFLOPs: 311.3516. Time: 2807.9724 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #243: GFLOPs: 151.1158. Time: 5785.4097 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #244: GFLOPs: 311.5278. Time: 2806.3841 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #245: GFLOPs: 125.8765. Time: 6945.4317 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #246: GFLOPs: 311.4038. Time: 2807.5019 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #247: GFLOPs: 317.4169. Time: 2754.3163 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #248: GFLOPs: 73.2833. Time: 11929.9504 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #249: GFLOPs: 94.5183. Time: 9249.7075 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #250: GFLOPs: 312.7013. Time: 2795.8526 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #251: GFLOPs: 311.1830. Time: 2809.4932 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #252: GFLOPs: 142.9942. Time: 6113.9995 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #253: GFLOPs: 197.3403. Time: 4430.2484 us. Best GFLOPs: 458.5621
2024-04-29 07:21:51 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #254: GFLOPs: 5.4638. Time: 160011.8967 us. Best GFLOPs: 458.5621
2024-04-29 07:21:52 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #255: GFLOPs: 89.1513. Time: 9806.5445 us. Best GFLOPs: 458.5621
2024-04-29 07:21:52 [INFO] [task_scheduler.cc:131] [Task #91: fused_nn_contrib_conv2d_NCHWc_6] Trial #256: GFLOPs: 39.6697. Time: 22038.6658 us. Best GFLOPs: 458.5621
