2024-04-28 19:50:03 [INFO] [task_scheduler.cc:160] Initializing Task #10: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6"
2024-04-28 19:50:03 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(16), T.int64(16)))
        input_tile = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(512), T.int64(16), T.int64(16)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(512), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(49), T.int64(512)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(512), T.int64(49), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(512), T.int64(14), T.int64(14)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-28 19:50:03 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 19:50:03 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(224), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(3584))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(3584) // T.int64(896))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(896) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(16384))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(16384) // T.int64(4096))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(32))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(64), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(128) + ci_1 * T.int64(2) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(2), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1 < T.int64(25088))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1 < T.int64(25088))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 2, 8, 1, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 7, 1, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[4, 64, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-04-28 19:50:03 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(224), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(3584))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(3584) // T.int64(896))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(896) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(16384))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(16384) // T.int64(4096))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(32))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(64), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(128) + ci_1 * T.int64(2) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(2), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 2, 8, 1, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 7, 1, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[4, 64, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-28 19:50:03 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(224), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(3584))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(3584) // T.int64(896))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(896) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(16384))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(16384) // T.int64(4096))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(32))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(64), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(128) + ci_1 * T.int64(2) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(2), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 2, 8, 1, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 7, 1, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[4, 64, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-28 20:14:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:14:08 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:14:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 498 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:14:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1002 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:14:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1502 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:14:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2007 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:14:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2508 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:14:40 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-28 20:14:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:15:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:15:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:15:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:15:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9999  0.9997  0.9996  0.9971  0.9965  0.9950  0.9948  0.9938  0.9934  0.9934  0.9931  0.9930  0.9924  0.9923  0.9922
[17 : 32]:	0.9911  0.9906  0.9903  0.9900  0.9895  0.9890  0.9890  0.9889  0.9876  0.9873  0.9860  0.9860  0.9848  0.9841  0.9838  0.9836
[33 : 48]:	0.9828  0.9823  0.9815  0.9788  0.9773  0.9773  0.9763  0.9760  0.9758  0.9757  0.9737  0.9732  0.9726  0.9721  0.9718  0.9713
[49 : 64]:	0.9711  0.9707  0.9700  0.9698  0.9691  0.9687  0.9674  0.9651  0.9643  0.9635  0.9635  0.9633  0.9631  0.9618  0.9613  0.9611
2024-04-28 20:15:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:15:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1: GFLOPs: 28.2008. Time: 15436.6861 us. Best GFLOPs: 28.2008
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #2: GFLOPs: 2107.8327. Time: 206.5282 us. Best GFLOPs: 2107.8327
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #3: GFLOPs: 3494.1475. Time: 124.5875 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #4: GFLOPs: 124.0039. Time: 3510.5899 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #5: GFLOPs: 746.7837. Time: 582.9358 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #6: GFLOPs: 157.5779. Time: 2762.6136 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #7: GFLOPs: 155.8880. Time: 2792.5618 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #8: GFLOPs: 425.6800. Time: 1022.6625 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #9: GFLOPs: 137.3944. Time: 3168.4480 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #10: GFLOPs: 1781.6480. Time: 244.3395 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #11: GFLOPs: 1296.4885. Time: 335.7739 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #12: GFLOPs: 476.7033. Time: 913.2032 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #13: GFLOPs: 906.4132. Time: 480.2743 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #14: GFLOPs: 1100.6009. Time: 395.5357 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #15: GFLOPs: 256.3396. Time: 1698.2432 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #16: GFLOPs: 1418.2077. Time: 306.9557 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #17: GFLOPs: 1511.8322. Time: 287.9466 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #18: GFLOPs: 37.1518. Time: 11717.5182 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #19: GFLOPs: 48.2023. Time: 9031.2532 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #20: GFLOPs: 1261.6960. Time: 345.0332 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #21: GFLOPs: 68.3678. Time: 6367.4240 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #22: GFLOPs: 1341.0767. Time: 324.6101 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #23: GFLOPs: 1236.0221. Time: 352.2000 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #24: GFLOPs: 1337.2790. Time: 325.5319 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #25: GFLOPs: 1226.7766. Time: 354.8543 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #26: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(25)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(196))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196) // T.int64(49))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                    v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1 < T.int64(784))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(256))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(64))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(4), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + ax0)
                            v1 = T.axis.spatial(T.int64(4), ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 2, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[8, 1, 16, 4, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 1, 7, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137 = sch.split(loop=l135, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b150)
l180, l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #27: GFLOPs: 2721.9117. Time: 159.9343 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #28: GFLOPs: 114.7582. Time: 3793.4271 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #29: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(7), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(16) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(196))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196) // T.int64(49))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(49))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(784))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(256))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(64))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(4), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(16) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 2, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[8, 1, 16, 4, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 1, 7, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137, l138 = sch.split(loop=l135, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l138)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l139, l140, l141, l142, l143 = sch.get_loops(block=b108)
l144, l145, l146 = sch.split(loop=l143, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l146)
sch.bind(loop=l145, thread_axis="threadIdx.x")
b147 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b147, ann_key="meta_schedule.unroll_explicit")
b148, b149, b150, b151, b152, b153, b154, b155, b156 = sch.get_child_blocks(b147)
l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b148)
l163, l164, l165, l166, l167, l168 = sch.get_loops(block=b149)
sch.annotate(block_or_loop=l163, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l163, ann_key="pragma_unroll_explicit", ann_val=1)
l169, l170, l171, l172, l173, l174 = sch.get_loops(block=b150)
l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b151)
l182, l183, l184, l185, l186, l187, l188 = sch.get_loops(block=b152)
l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l189, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l189, ann_key="pragma_unroll_explicit", ann_val=1)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b154)
l210, l211, l212, l213, l214, l215, l216, l217 = sch.get_loops(block=b155)
sch.annotate(block_or_loop=l210, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l210, ann_key="pragma_unroll_explicit", ann_val=1)
l218, l219, l220, l221 = sch.get_loops(block=b156)
b222 = sch.get_block(name="data_pack", func_name="main")
l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b222)
b229 = sch.decompose_reduction(block=b222, loop=l227)
b230 = sch.get_block(name="bgemm", func_name="main")
l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243, l244 = sch.get_loops(block=b230)
b245 = sch.decompose_reduction(block=b230, loop=l234)
b246 = sch.get_block(name="inverse", func_name="main")
l247, l248, l249, l250, l251, l252, l253, l254 = sch.get_loops(block=b246)
b255 = sch.decompose_reduction(block=b246, loop=l253)
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #30: GFLOPs: 125.2321. Time: 3476.1621 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #31: GFLOPs: 100.8947. Time: 4314.6667 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #32: GFLOPs: 91.4806. Time: 4758.6832 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #33: GFLOPs: 105.2756. Time: 4135.1169 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #34: GFLOPs: 152.3555. Time: 2857.3111 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #35: GFLOPs: 1266.3476. Time: 343.7658 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #36: GFLOPs: 720.5033. Time: 604.1985 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #37: GFLOPs: 147.1856. Time: 2957.6734 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #38: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(7), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(16) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(25)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(196))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196) // T.int64(49))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                    v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1 < T.int64(784))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(256))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(64))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(4), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(16) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 2, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[8, 1, 16, 4, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 1, 7, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137 = sch.split(loop=l135, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b150)
l180, l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #39: GFLOPs: 379.6829. Time: 1146.5542 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #40: GFLOPs: 95.6644. Time: 4550.5627 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #41: GFLOPs: 1659.1451. Time: 262.3803 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #42: GFLOPs: 57.7043. Time: 7544.1006 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #43: GFLOPs: 227.0398. Time: 1917.4034 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #44: GFLOPs: 1771.6425. Time: 245.7194 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #45: GFLOPs: 104.1364. Time: 4180.3519 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #46: GFLOPs: 1179.1421. Time: 369.1896 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #47: GFLOPs: 67.0992. Time: 6487.8082 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #48: GFLOPs: 66.9790. Time: 6499.4559 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #49: GFLOPs: 1424.9936. Time: 305.4940 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #50: GFLOPs: 2062.6284. Time: 211.0545 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #51: GFLOPs: 245.3692. Time: 1774.1709 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #52: GFLOPs: 1584.6750. Time: 274.7106 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #53: GFLOPs: 1185.6703. Time: 367.1568 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #54: GFLOPs: 953.4102. Time: 456.5999 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #55: GFLOPs: 615.0711. Time: 707.7669 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #56: GFLOPs: 262.5072. Time: 1658.3428 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #57: GFLOPs: 113.0568. Time: 3850.5158 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #58: GFLOPs: 796.5609. Time: 546.5081 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #59: GFLOPs: 2249.3763. Time: 193.5323 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #60: GFLOPs: 1079.1666. Time: 403.3918 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #61: GFLOPs: 689.7842. Time: 631.1060 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #62: GFLOPs: 85.5036. Time: 5091.3280 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #63: GFLOPs: 1081.7747. Time: 402.4192 us. Best GFLOPs: 3494.1475
2024-04-28 20:24:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #64: GFLOPs: 767.5182. Time: 567.1878 us. Best GFLOPs: 3494.1475
2024-04-28 20:31:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:31:13 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-28 20:31:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 443 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:31:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 881 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:31:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1316 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:31:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1759 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:31:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:31:44 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 20:31:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:32:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:32:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:32:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:32:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1851  1.1800  1.1380  1.1344  1.1255  1.1094  1.0853  1.0509  1.0489  1.0467  1.0375  1.0370  1.0305  1.0274  1.0242  1.0203
[17 : 32]:	1.0169  1.0128  1.0057  1.0057  1.0052  1.0027  1.0021  0.9996  0.9962  0.9936  0.9923  0.9921  0.9921  0.9893  0.9878  0.9878
[33 : 48]:	0.9847  0.9834  0.9834  0.9820  0.9757  0.9732  0.9681  0.9670  0.9663  0.9663  0.9606  0.9553  0.9522  0.9477  0.9467  0.9447
[49 : 64]:	0.9447  0.9435  0.9399  0.9377  0.9377  0.9326  0.9260  0.9241  0.9228  0.9217  0.9217  0.9210  0.9199  0.9188  0.9172  0.9171
2024-04-28 20:32:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:32:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #65: GFLOPs: 341.3777. Time: 1275.2062 us. Best GFLOPs: 3494.1475
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #66: GFLOPs: 340.5706. Time: 1278.2283 us. Best GFLOPs: 3494.1475
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #67: GFLOPs: 559.4590. Time: 778.1213 us. Best GFLOPs: 3494.1475
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #68: GFLOPs: 2044.5016. Time: 212.9257 us. Best GFLOPs: 3494.1475
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #69: GFLOPs: 2044.7639. Time: 212.8984 us. Best GFLOPs: 3494.1475
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #70: GFLOPs: 5628.2719. Time: 77.3465 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #71: GFLOPs: 2112.1630. Time: 206.1048 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #72: GFLOPs: 3519.9389. Time: 123.6746 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #73: GFLOPs: 3330.1065. Time: 130.7246 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #74: GFLOPs: 3418.4006. Time: 127.3481 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #75: GFLOPs: 3427.4479. Time: 127.0120 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #76: GFLOPs: 2433.5662. Time: 178.8844 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #77: GFLOPs: 2403.8254. Time: 181.0976 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #78: GFLOPs: 241.7366. Time: 1800.8321 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #79: GFLOPs: 2610.1369. Time: 166.7832 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #80: GFLOPs: 224.4332. Time: 1939.6726 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #81: GFLOPs: 2350.7783. Time: 185.1842 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #82: GFLOPs: 3467.2550. Time: 125.5538 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #83: GFLOPs: 333.5427. Time: 1305.1611 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #84: GFLOPs: 741.6470. Time: 586.9733 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #85: GFLOPs: 723.5644. Time: 601.6423 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #86: GFLOPs: 66.2251. Time: 6573.4399 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #87: GFLOPs: 92.6609. Time: 4698.0653 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #88: GFLOPs: 1232.2121. Time: 353.2890 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #89: GFLOPs: 3496.2012. Time: 124.5143 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #90: GFLOPs: 3435.8534. Time: 126.7013 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #91: GFLOPs: 3438.7421. Time: 126.5948 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #92: GFLOPs: 683.6435. Time: 636.7748 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #93: GFLOPs: 412.6026. Time: 1055.0757 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #94: GFLOPs: 3126.3344. Time: 139.2452 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #95: GFLOPs: 426.5080. Time: 1020.6772 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #96: GFLOPs: 677.3777. Time: 642.6650 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #97: GFLOPs: 3485.5504. Time: 124.8948 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #98: GFLOPs: 3531.7405. Time: 123.2613 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #99: GFLOPs: 3531.1278. Time: 123.2827 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #100: GFLOPs: 3518.5865. Time: 123.7221 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #101: GFLOPs: 3478.2076. Time: 125.1584 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #102: GFLOPs: 3584.5376. Time: 121.4458 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #103: GFLOPs: 3607.0763. Time: 120.6869 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #104: GFLOPs: 188.1553. Time: 2313.6581 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #105: GFLOPs: 260.0916. Time: 1673.7451 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #106: GFLOPs: 130.5089. Time: 3335.6117 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #107: GFLOPs: 3432.2357. Time: 126.8348 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #108: GFLOPs: 3584.6219. Time: 121.4429 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #109: GFLOPs: 1413.2412. Time: 308.0344 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #110: GFLOPs: 3577.3243. Time: 121.6907 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #111: GFLOPs: 834.6622. Time: 521.5607 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #112: GFLOPs: 4332.5826. Time: 100.4775 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #113: GFLOPs: 4186.4459. Time: 103.9849 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #114: GFLOPs: 3479.3824. Time: 125.1162 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #115: GFLOPs: 2660.6243. Time: 163.6184 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #116: GFLOPs: 4082.4476. Time: 106.6338 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #117: GFLOPs: 4168.5833. Time: 104.4304 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #118: GFLOPs: 2450.9664. Time: 177.6144 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #119: GFLOPs: 3285.0749. Time: 132.5166 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #120: GFLOPs: 4367.4314. Time: 99.6757 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #121: GFLOPs: 1242.4765. Time: 350.3704 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #122: GFLOPs: 11.4702. Time: 37952.8527 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #123: GFLOPs: 12.0059. Time: 36259.4983 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #124: GFLOPs: 3433.1846. Time: 126.7998 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #125: GFLOPs: 3807.6613. Time: 114.3292 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #126: GFLOPs: 1281.4304. Time: 339.7196 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #127: GFLOPs: 937.4319. Time: 464.3825 us. Best GFLOPs: 5628.2719
2024-04-28 20:34:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #128: GFLOPs: 2391.7734. Time: 182.0101 us. Best GFLOPs: 5628.2719
2024-04-28 20:57:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:57:28 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 20:57:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:57:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:57:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:57:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:57:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2010 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:58:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:58:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2818 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:58:05 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-28 20:58:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 154 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:58:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:58:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:59:14 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 20:59:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9163  0.9149  0.9149  0.9108  0.8950  0.8919  0.8739  0.8602  0.8559  0.8507  0.8474  0.8387  0.8350  0.8325  0.8323  0.8322
[17 : 32]:	0.8322  0.8310  0.8310  0.8310  0.8310  0.8245  0.8221  0.8209  0.8207  0.8198  0.8183  0.8140  0.8110  0.8081  0.8042  0.8019
[33 : 48]:	0.8010  0.7985  0.7957  0.7920  0.7917  0.7909  0.7905  0.7884  0.7873  0.7873  0.7860  0.7851  0.7851  0.7850  0.7849  0.7845
[49 : 64]:	0.7842  0.7842  0.7834  0.7830  0.7830  0.7826  0.7824  0.7822  0.7797  0.7796  0.7761  0.7755  0.7755  0.7741  0.7741  0.7721
2024-04-28 20:59:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:59:19 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #129: GFLOPs: 319.7668. Time: 1361.3890 us. Best GFLOPs: 5628.2719
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #130: GFLOPs: 279.1342. Time: 1559.5619 us. Best GFLOPs: 5628.2719
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #131: GFLOPs: 309.5385. Time: 1406.3742 us. Best GFLOPs: 5628.2719
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #132: GFLOPs: 307.8064. Time: 1414.2883 us. Best GFLOPs: 5628.2719
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #133: GFLOPs: 2337.4515. Time: 186.2400 us. Best GFLOPs: 5628.2719
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #134: GFLOPs: 5675.1525. Time: 76.7075 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #135: GFLOPs: 5354.2064. Time: 81.3056 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #136: GFLOPs: 2256.2696. Time: 192.9410 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #137: GFLOPs: 190.9382. Time: 2279.9360 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #138: GFLOPs: 2198.9126. Time: 197.9737 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #139: GFLOPs: 85.1773. Time: 5110.8353 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #140: GFLOPs: 2142.9737. Time: 203.1415 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #141: GFLOPs: 306.2201. Time: 1421.6148 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #142: GFLOPs: 300.8394. Time: 1447.0411 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #143: GFLOPs: 2119.9978. Time: 205.3431 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #144: GFLOPs: 283.3998. Time: 1536.0878 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #145: GFLOPs: 283.3638. Time: 1536.2828 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #146: GFLOPs: 268.6052. Time: 1620.6947 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #147: GFLOPs: 297.7438. Time: 1462.0858 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #148: GFLOPs: 309.3192. Time: 1407.3712 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #149: GFLOPs: 272.6153. Time: 1596.8548 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #150: GFLOPs: 98.4529. Time: 4421.6766 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #151: GFLOPs: 276.6552. Time: 1573.5360 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #152: GFLOPs: 289.5940. Time: 1503.2320 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #153: GFLOPs: 283.3854. Time: 1536.1658 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #154: GFLOPs: 291.9622. Time: 1491.0389 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #155: GFLOPs: 4684.6921. Time: 92.9254 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #156: GFLOPs: 3138.2050. Time: 138.7185 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #157: GFLOPs: 3289.7682. Time: 132.3276 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #158: GFLOPs: 2163.4530. Time: 201.2186 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #159: GFLOPs: 87.4167. Time: 4979.9070 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #160: GFLOPs: 3688.7355. Time: 118.0152 us. Best GFLOPs: 5675.1525
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #161: GFLOPs: 5685.9644. Time: 76.5617 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #162: GFLOPs: 4368.3590. Time: 99.6546 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #163: GFLOPs: 83.8228. Time: 5193.4208 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #164: GFLOPs: 273.1909. Time: 1593.4902 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #165: GFLOPs: 2182.0505. Time: 199.5036 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #166: GFLOPs: 3267.7004. Time: 133.2212 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #167: GFLOPs: 3297.2627. Time: 132.0268 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #168: GFLOPs: 4351.5874. Time: 100.0387 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #169: GFLOPs: 182.2964. Time: 2388.0168 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #170: GFLOPs: 96.9246. Time: 4491.3977 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #171: GFLOPs: 3370.6181. Time: 129.1535 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #172: GFLOPs: 93.8482. Time: 4638.6268 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #173: GFLOPs: 95.2659. Time: 4569.5998 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #174: GFLOPs: 1549.0622. Time: 281.0261 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #175: GFLOPs: 98.8421. Time: 4404.2687 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #176: GFLOPs: 3335.5787. Time: 130.5102 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #177: GFLOPs: 101.4686. Time: 4290.2613 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #178: GFLOPs: 98.1367. Time: 4435.9233 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #179: GFLOPs: 4219.0678. Time: 103.1808 us. Best GFLOPs: 5685.9644
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #180: GFLOPs: 5727.0132. Time: 76.0129 us. Best GFLOPs: 5727.0132
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #181: GFLOPs: 5736.3846. Time: 75.8887 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #182: GFLOPs: 2221.8128. Time: 195.9332 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #183: GFLOPs: 282.9430. Time: 1538.5679 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #184: GFLOPs: 74.7084. Time: 5827.0149 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #185: GFLOPs: 4495.6783. Time: 96.8323 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #186: GFLOPs: 4134.1647. Time: 105.2999 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #187: GFLOPs: 48.6166. Time: 8954.2827 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #188: GFLOPs: 304.6860. Time: 1428.7725 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #189: GFLOPs: 347.6040. Time: 1252.3648 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #190: GFLOPs: 18.9333. Time: 22992.6910 us. Best GFLOPs: 5736.3846
2024-04-28 21:00:45 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #191: GFLOPs: 1386.8869. Time: 313.8879 us. Best GFLOPs: 5736.3846
2024-04-28 21:15:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:15:43 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:15:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:15:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:15:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:16:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:16:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:16:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2415 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:16:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:16:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 3225 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:16:25 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-28 21:16:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:17:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:17:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:17:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:17:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1996  1.1830  1.1775  1.1690  1.1685  1.1604  1.1556  1.1478  1.1422  1.1415  1.1399  1.1357  1.1353  1.1341  1.1326  1.1315
[17 : 32]:	1.1311  1.1306  1.1305  1.1305  1.1302  1.1296  1.1294  1.1294  1.1294  1.1279  1.1212  1.1190  1.1097  1.1097  1.1094  1.0968
[33 : 48]:	1.0904  1.0628  1.0604  1.0455  1.0123  1.0026  0.9933  0.9823  0.9798  0.9757  0.9733  0.9685  0.9674  0.9672  0.9565  0.9486
[49 : 64]:	0.9486  0.9311  0.9303  0.9295  0.9163  0.9109  0.9079  0.9075  0.9070  0.9068  0.9068  0.9068  0.9048  0.9040  0.8976  0.8892
2024-04-28 21:17:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:17:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #192: GFLOPs: 60.7909. Time: 7161.0516 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #193: GFLOPs: 27.6260. Time: 15757.8974 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #194: GFLOPs: 454.0277. Time: 958.8114 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #195: GFLOPs: 486.5014. Time: 894.8114 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #196: GFLOPs: 31.3817. Time: 13871.9996 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #197: GFLOPs: 455.9972. Time: 954.6703 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #198: GFLOPs: 461.4383. Time: 943.4131 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #199: GFLOPs: 60.3312. Time: 7215.6159 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #200: GFLOPs: 447.1882. Time: 973.4760 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #201: GFLOPs: 933.6742. Time: 466.2515 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #202: GFLOPs: 933.0997. Time: 466.5385 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #203: GFLOPs: 981.2877. Time: 443.6283 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #204: GFLOPs: 918.2320. Time: 474.0926 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #205: GFLOPs: 933.3748. Time: 466.4010 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #206: GFLOPs: 35.7852. Time: 12165.0060 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #207: GFLOPs: 37.9447. Time: 11472.6681 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #208: GFLOPs: 929.9832. Time: 468.1020 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #209: GFLOPs: 933.7181. Time: 466.2296 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #210: GFLOPs: 35.7939. Time: 12162.0483 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #211: GFLOPs: 35.9148. Time: 12121.0878 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #212: GFLOPs: 930.1068. Time: 468.0398 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #213: GFLOPs: 981.0888. Time: 443.7182 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #214: GFLOPs: 37.5551. Time: 11591.6799 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #215: GFLOPs: 28.9535. Time: 15035.3916 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #216: GFLOPs: 29.5041. Time: 14754.8163 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #217: GFLOPs: 491.3723. Time: 885.9412 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #218: GFLOPs: 31.3840. Time: 13870.9764 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #219: GFLOPs: 26.2547. Time: 16580.9010 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #220: GFLOPs: 505.6107. Time: 860.9923 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #221: GFLOPs: 505.6678. Time: 860.8952 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #222: GFLOPs: 28.9287. Time: 15048.2646 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #223: GFLOPs: 31.8391. Time: 13672.7036 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #224: GFLOPs: 36.1541. Time: 12040.8749 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #225: GFLOPs: 28.9284. Time: 15048.4117 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #226: GFLOPs: 499.8697. Time: 870.8809 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #227: GFLOPs: 36.5293. Time: 11917.1981 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #228: GFLOPs: 491.1964. Time: 886.2584 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #229: GFLOPs: 505.5561. Time: 861.0854 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #230: GFLOPs: 58.9538. Time: 7384.2103 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #231: GFLOPs: 35.3752. Time: 12305.9768 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #232: GFLOPs: 981.1010. Time: 443.7127 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #233: GFLOPs: 933.3306. Time: 466.4231 us. Best GFLOPs: 5736.3846
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #234: GFLOPs: 5804.0774. Time: 75.0036 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #235: GFLOPs: 35.1387. Time: 12388.8074 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #236: GFLOPs: 35.3752. Time: 12305.9768 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #237: GFLOPs: 5727.6901. Time: 76.0039 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #238: GFLOPs: 35.3769. Time: 12305.4080 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #239: GFLOPs: 5145.5080. Time: 84.6033 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #240: GFLOPs: 5099.3186. Time: 85.3696 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #241: GFLOPs: 5357.7210. Time: 81.2523 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #242: GFLOPs: 2713.9862. Time: 160.4013 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #243: GFLOPs: 5688.2789. Time: 76.5305 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #244: GFLOPs: 4204.5293. Time: 103.5376 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #245: GFLOPs: 5640.4416. Time: 77.1796 us. Best GFLOPs: 5804.0774
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #246: GFLOPs: 6647.4170. Time: 65.4881 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #247: GFLOPs: 6556.1396. Time: 66.3999 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #248: GFLOPs: 6394.7301. Time: 68.0759 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #249: GFLOPs: 6550.3889. Time: 66.4582 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #250: GFLOPs: 6551.6554. Time: 66.4453 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #251: GFLOPs: 6582.0120. Time: 66.1389 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #252: GFLOPs: 5794.3573. Time: 75.1295 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #253: GFLOPs: 455.4929. Time: 955.7273 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #254: GFLOPs: 128.9244. Time: 3376.6060 us. Best GFLOPs: 6647.4170
2024-04-28 21:19:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #255: GFLOPs: 39.6216. Time: 10987.1101 us. Best GFLOPs: 6647.4170
2024-04-28 21:29:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:29:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:29:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:29:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 804 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2821 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 3218 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:25 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-04-28 21:30:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:30:57 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:31:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:31:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 21:31:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0728  1.0154  1.0010  0.9990  0.9822  0.9820  0.9820  0.9820  0.9802  0.9802  0.9802  0.9789  0.9784  0.9771  0.9771  0.9771
[17 : 32]:	0.9761  0.9743  0.9743  0.9699  0.9694  0.9592  0.9548  0.9541  0.9533  0.9523  0.9520  0.9502  0.9497  0.9469  0.9455  0.9444
[33 : 48]:	0.9435  0.9435  0.9396  0.9395  0.9388  0.9388  0.9381  0.9370  0.9370  0.9357  0.9339  0.9339  0.9329  0.9327  0.9327  0.9318
[49 : 64]:	0.9311  0.9300  0.9262  0.9220  0.9205  0.9200  0.9158  0.9101  0.9092  0.9030  0.9030  0.9003  0.8898  0.8888  0.8839  0.8816
2024-04-28 21:31:36 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:31:36 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #256: GFLOPs: 6396.2644. Time: 68.0596 us. Best GFLOPs: 6647.4170
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #257: GFLOPs: 6592.9429. Time: 66.0292 us. Best GFLOPs: 6647.4170
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #258: GFLOPs: 6073.5952. Time: 71.6753 us. Best GFLOPs: 6647.4170
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #259: GFLOPs: 6766.2158. Time: 64.3383 us. Best GFLOPs: 6766.2158
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #260: GFLOPs: 6542.6466. Time: 66.5368 us. Best GFLOPs: 6766.2158
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #261: GFLOPs: 6706.3905. Time: 64.9123 us. Best GFLOPs: 6766.2158
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #262: GFLOPs: 6705.7582. Time: 64.9184 us. Best GFLOPs: 6766.2158
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #263: GFLOPs: 6582.4269. Time: 66.1347 us. Best GFLOPs: 6766.2158
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #264: GFLOPs: 6755.6933. Time: 64.4385 us. Best GFLOPs: 6766.2158
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #265: GFLOPs: 6766.6964. Time: 64.3338 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #266: GFLOPs: 6455.6174. Time: 67.4338 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #267: GFLOPs: 6385.9028. Time: 68.1700 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #268: GFLOPs: 6609.1352. Time: 65.8675 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #269: GFLOPs: 6651.6494. Time: 65.4465 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #270: GFLOPs: 6548.8612. Time: 66.4737 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #271: GFLOPs: 6466.1664. Time: 67.3238 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #272: GFLOPs: 6377.7393. Time: 68.2573 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #273: GFLOPs: 6479.6988. Time: 67.1832 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #274: GFLOPs: 6415.5843. Time: 67.8546 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #275: GFLOPs: 6279.7605. Time: 69.3222 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #276: GFLOPs: 6453.4444. Time: 67.4565 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #277: GFLOPs: 6508.6119. Time: 66.8848 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #278: GFLOPs: 6615.5808. Time: 65.8033 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #279: GFLOPs: 6441.1112. Time: 67.5857 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #280: GFLOPs: 6373.2760. Time: 68.3051 us. Best GFLOPs: 6766.6964
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #281: GFLOPs: 6870.4702. Time: 63.3620 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #282: GFLOPs: 5326.0234. Time: 81.7358 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #283: GFLOPs: 5468.7676. Time: 79.6024 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #284: GFLOPs: 6644.9772. Time: 65.5122 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #285: GFLOPs: 6614.6626. Time: 65.8124 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #286: GFLOPs: 3978.1927. Time: 109.4283 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #287: GFLOPs: 6869.2640. Time: 63.3732 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #288: GFLOPs: 6465.7641. Time: 67.3280 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #289: GFLOPs: 6524.7154. Time: 66.7197 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #290: GFLOPs: 6807.3407. Time: 63.9496 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #291: GFLOPs: 6050.6115. Time: 71.9476 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #292: GFLOPs: 6411.2055. Time: 67.9010 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #293: GFLOPs: 6460.3048. Time: 67.3849 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #294: GFLOPs: 6718.6675. Time: 64.7936 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #295: GFLOPs: 6412.2627. Time: 67.8898 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #296: GFLOPs: 6450.4897. Time: 67.4874 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #297: GFLOPs: 6383.6249. Time: 68.1943 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #298: GFLOPs: 6380.2200. Time: 68.2307 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #299: GFLOPs: 6437.1173. Time: 67.6276 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #300: GFLOPs: 6236.2066. Time: 69.8064 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #301: GFLOPs: 4860.1565. Time: 89.5706 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #302: GFLOPs: 4858.5915. Time: 89.5994 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #303: GFLOPs: 6329.0431. Time: 68.7824 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #304: GFLOPs: 6237.5305. Time: 69.7916 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #305: GFLOPs: 5416.6578. Time: 80.3682 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #306: GFLOPs: 5471.1195. Time: 79.5682 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #307: GFLOPs: 5867.7342. Time: 74.1900 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #308: GFLOPs: 5532.4187. Time: 78.6866 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #309: GFLOPs: 5520.9117. Time: 78.8506 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #310: GFLOPs: 4059.2325. Time: 107.2437 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #311: GFLOPs: 6270.2654. Time: 69.4272 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #312: GFLOPs: 5580.5223. Time: 78.0083 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #313: GFLOPs: 5447.3848. Time: 79.9149 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #314: GFLOPs: 5447.3965. Time: 79.9147 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #315: GFLOPs: 5696.7714. Time: 76.4164 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #316: GFLOPs: 5520.9824. Time: 78.8495 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #317: GFLOPs: 2258.5178. Time: 192.7490 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #318: GFLOPs: 2927.7740. Time: 148.6887 us. Best GFLOPs: 6870.4702
2024-04-28 21:32:53 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #319: GFLOPs: 1873.2580. Time: 232.3903 us. Best GFLOPs: 6870.4702
2024-04-28 22:06:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:06:20 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:06:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:06:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:06:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1202 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:06:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1599 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:06:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2000 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:06:46 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-28 22:07:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:07:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:07:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:07:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:07:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9879  0.9874  0.9860  0.9821  0.9819  0.9750  0.9734  0.9728  0.9728  0.9728  0.9728  0.9728  0.9719  0.9709  0.9704  0.9704
[17 : 32]:	0.9700  0.9690  0.9671  0.9670  0.9658  0.9657  0.9656  0.9644  0.9644  0.9630  0.9625  0.9620  0.9618  0.9618  0.9610  0.9592
[33 : 48]:	0.9591  0.9589  0.9574  0.9572  0.9564  0.9544  0.9541  0.9539  0.9539  0.9539  0.9521  0.9509  0.9509  0.9508  0.9506  0.9505
[49 : 64]:	0.9505  0.9500  0.9498  0.9485  0.9484  0.9484  0.9457  0.9454  0.9438  0.9432  0.9430  0.9427  0.9427  0.9426  0.9426  0.9421
2024-04-28 22:07:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:07:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #320: GFLOPs: 6702.2192. Time: 64.9527 us. Best GFLOPs: 6870.4702
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #321: GFLOPs: 6697.4932. Time: 64.9985 us. Best GFLOPs: 6870.4702
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #322: GFLOPs: 6864.0554. Time: 63.4213 us. Best GFLOPs: 6870.4702
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #323: GFLOPs: 6709.3978. Time: 64.8832 us. Best GFLOPs: 6870.4702
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #324: GFLOPs: 118.2261. Time: 3682.1578 us. Best GFLOPs: 6870.4702
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #325: GFLOPs: 6922.7119. Time: 62.8839 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #326: GFLOPs: 6747.2741. Time: 64.5189 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #327: GFLOPs: 6748.9396. Time: 64.5030 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #328: GFLOPs: 6764.5617. Time: 64.3541 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #329: GFLOPs: 6755.4363. Time: 64.4410 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #330: GFLOPs: 6748.8111. Time: 64.5042 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #331: GFLOPs: 6457.9360. Time: 67.4096 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #332: GFLOPs: 6488.3850. Time: 67.0933 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #333: GFLOPs: 6802.0706. Time: 63.9992 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #334: GFLOPs: 6756.4635. Time: 64.4312 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #335: GFLOPs: 6693.5702. Time: 65.0366 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #336: GFLOPs: 6727.9525. Time: 64.7042 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #337: GFLOPs: 6725.4388. Time: 64.7284 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #338: GFLOPs: 6581.7721. Time: 66.1413 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #339: GFLOPs: 6619.2482. Time: 65.7668 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #340: GFLOPs: 6710.0226. Time: 64.8771 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #341: GFLOPs: 6436.9518. Time: 67.6294 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #342: GFLOPs: 6664.1634. Time: 65.3236 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #343: GFLOPs: 6661.9140. Time: 65.3456 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #344: GFLOPs: 6668.0930. Time: 65.2851 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #345: GFLOPs: 6705.9569. Time: 64.9165 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #346: GFLOPs: 6707.7419. Time: 64.8992 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #347: GFLOPs: 6575.9269. Time: 66.2001 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #348: GFLOPs: 6763.3179. Time: 64.3659 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #349: GFLOPs: 6757.8758. Time: 64.4177 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #350: GFLOPs: 6583.5105. Time: 66.1238 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #351: GFLOPs: 6520.9734. Time: 66.7580 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #352: GFLOPs: 6672.1061. Time: 65.2458 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #353: GFLOPs: 6560.6647. Time: 66.3541 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #354: GFLOPs: 6550.5384. Time: 66.4567 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #355: GFLOPs: 6526.8211. Time: 66.6982 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #356: GFLOPs: 6793.3414. Time: 64.0814 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #357: GFLOPs: 6648.7900. Time: 65.4746 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #358: GFLOPs: 6631.9582. Time: 65.6408 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #359: GFLOPs: 170.7891. Time: 2548.9153 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #360: GFLOPs: 6706.9357. Time: 64.9070 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #361: GFLOPs: 6685.4037. Time: 65.1160 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #362: GFLOPs: 6737.6527. Time: 64.6111 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #363: GFLOPs: 6466.8369. Time: 67.3168 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #364: GFLOPs: 6384.9400. Time: 68.1803 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #365: GFLOPs: 6531.5608. Time: 66.6498 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #366: GFLOPs: 6474.6288. Time: 67.2358 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #367: GFLOPs: 6566.9674. Time: 66.2904 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #368: GFLOPs: 6593.3703. Time: 66.0250 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #369: GFLOPs: 6709.4682. Time: 64.8825 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #370: GFLOPs: 6535.5041. Time: 66.6095 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #371: GFLOPs: 6718.8674. Time: 64.7917 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #372: GFLOPs: 6578.2382. Time: 66.1768 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #373: GFLOPs: 6620.4918. Time: 65.7545 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #374: GFLOPs: 6495.5215. Time: 67.0196 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #375: GFLOPs: 6522.3878. Time: 66.7435 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #376: GFLOPs: 6455.9433. Time: 67.4304 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #377: GFLOPs: 6462.7118. Time: 67.3598 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #378: GFLOPs: 6456.8765. Time: 67.4207 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #379: GFLOPs: 6612.5567. Time: 65.8334 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #380: GFLOPs: 6426.0722. Time: 67.7439 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #381: GFLOPs: 113.4154. Time: 3838.3422 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #382: GFLOPs: 119.5008. Time: 3642.8800 us. Best GFLOPs: 6922.7119
2024-04-28 22:09:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #383: GFLOPs: 109.8119. Time: 3964.2979 us. Best GFLOPs: 6922.7119
2024-04-28 22:19:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:19:40 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:19:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:19:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:19:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:20:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1606 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:20:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:20:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:20:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2814 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:20:15 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 22:20:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:20:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:21:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:21:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:21:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9972  0.9891  0.9891  0.9866  0.9865  0.9858  0.9844  0.9832  0.9819  0.9800  0.9792  0.9792  0.9792  0.9785  0.9785  0.9776
[17 : 32]:	0.9761  0.9760  0.9760  0.9758  0.9758  0.9749  0.9746  0.9746  0.9746  0.9740  0.9729  0.9729  0.9726  0.9726  0.9726  0.9726
[33 : 48]:	0.9711  0.9711  0.9711  0.9707  0.9704  0.9688  0.9686  0.9686  0.9681  0.9681  0.9681  0.9680  0.9670  0.9655  0.9655  0.9643
[49 : 64]:	0.9643  0.9639  0.9634  0.9634  0.9631  0.9631  0.9631  0.9629  0.9628  0.9623  0.9617  0.9605  0.9599  0.9599  0.9592  0.9583
2024-04-28 22:21:21 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:21:21 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #384: GFLOPs: 6932.8536. Time: 62.7919 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #385: GFLOPs: 6749.8790. Time: 64.4940 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #386: GFLOPs: 6867.8427. Time: 63.3863 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #387: GFLOPs: 6758.7625. Time: 64.4093 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #388: GFLOPs: 6864.2282. Time: 63.4197 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #389: GFLOPs: 6653.9165. Time: 65.4242 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #390: GFLOPs: 6662.9754. Time: 65.3352 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #391: GFLOPs: 6822.1749. Time: 63.8106 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #392: GFLOPs: 6775.3903. Time: 64.2512 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #393: GFLOPs: 6742.6104. Time: 64.5636 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #394: GFLOPs: 6866.9547. Time: 63.3945 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #395: GFLOPs: 6809.2559. Time: 63.9317 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #396: GFLOPs: 6741.8895. Time: 64.5705 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #397: GFLOPs: 6691.0212. Time: 65.0614 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #398: GFLOPs: 6687.0800. Time: 65.0997 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #399: GFLOPs: 6871.1598. Time: 63.3557 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #400: GFLOPs: 6771.8191. Time: 64.2851 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #401: GFLOPs: 6692.7764. Time: 65.0443 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #402: GFLOPs: 6704.1178. Time: 64.9343 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #403: GFLOPs: 6692.9130. Time: 65.0430 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #404: GFLOPs: 6693.0273. Time: 65.0419 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #405: GFLOPs: 6741.5600. Time: 64.5736 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #406: GFLOPs: 6661.0971. Time: 65.3536 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #407: GFLOPs: 6770.3282. Time: 64.2992 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #408: GFLOPs: 6769.1314. Time: 64.3106 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #409: GFLOPs: 6707.0800. Time: 64.9056 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #410: GFLOPs: 6793.1254. Time: 64.0835 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #411: GFLOPs: 6762.1163. Time: 64.3773 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #412: GFLOPs: 6707.5082. Time: 64.9014 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #413: GFLOPs: 6706.4692. Time: 64.9115 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #414: GFLOPs: 6675.6029. Time: 65.2116 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #415: GFLOPs: 6594.9417. Time: 66.0092 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #416: GFLOPs: 6816.2958. Time: 63.8656 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #417: GFLOPs: 6816.3724. Time: 63.8649 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #418: GFLOPs: 6863.0671. Time: 63.4304 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #419: GFLOPs: 6632.8940. Time: 65.6315 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #420: GFLOPs: 6656.3070. Time: 65.4007 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #421: GFLOPs: 6656.2832. Time: 65.4009 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #422: GFLOPs: 6759.1610. Time: 64.4055 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #423: GFLOPs: 6763.8371. Time: 64.3609 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #424: GFLOPs: 6670.4438. Time: 65.2621 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #425: GFLOPs: 6670.1853. Time: 65.2646 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #426: GFLOPs: 6561.7239. Time: 66.3434 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #427: GFLOPs: 6723.0544. Time: 64.7514 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #428: GFLOPs: 6760.2743. Time: 64.3949 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #429: GFLOPs: 6683.2608. Time: 65.1369 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #430: GFLOPs: 6619.9589. Time: 65.7598 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #431: GFLOPs: 6481.1829. Time: 67.1678 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #432: GFLOPs: 6479.9685. Time: 67.1804 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #433: GFLOPs: 6777.5181. Time: 64.2310 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #434: GFLOPs: 6560.7398. Time: 66.3533 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #435: GFLOPs: 6676.9706. Time: 65.1983 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #436: GFLOPs: 6661.3916. Time: 65.3508 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #437: GFLOPs: 6662.3565. Time: 65.3413 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #438: GFLOPs: 6678.2985. Time: 65.1853 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #439: GFLOPs: 6729.0985. Time: 64.6932 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #440: GFLOPs: 6673.1802. Time: 65.2353 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #441: GFLOPs: 6572.5216. Time: 66.2344 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #442: GFLOPs: 6622.7689. Time: 65.7319 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #443: GFLOPs: 6692.6159. Time: 65.0459 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #444: GFLOPs: 6715.9217. Time: 64.8201 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #445: GFLOPs: 3953.4193. Time: 110.1140 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #446: GFLOPs: 995.5171. Time: 437.2873 us. Best GFLOPs: 6932.8536
2024-04-28 22:23:03 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #447: GFLOPs: 28.7243. Time: 15155.3464 us. Best GFLOPs: 6932.8536
2024-04-28 22:52:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:52:23 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:52:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:52:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:52:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:52:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1603 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:52:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:52:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:53:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2815 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:53:00 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-28 22:53:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:53:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:53:49 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:54:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 156 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 22:54:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0285  1.0252  1.0245  1.0116  0.9914  0.9912  0.9906  0.9906  0.9899  0.9891  0.9888  0.9867  0.9863  0.9863  0.9863  0.9861
[17 : 32]:	0.9852  0.9849  0.9838  0.9824  0.9816  0.9808  0.9804  0.9801  0.9800  0.9783  0.9780  0.9780  0.9779  0.9777  0.9773  0.9769
[33 : 48]:	0.9767  0.9763  0.9761  0.9759  0.9756  0.9752  0.9750  0.9749  0.9747  0.9745  0.9741  0.9738  0.9736  0.9728  0.9724  0.9723
[49 : 64]:	0.9720  0.9716  0.9716  0.9713  0.9709  0.9704  0.9704  0.9704  0.9704  0.9701  0.9696  0.9696  0.9695  0.9691  0.9689  0.9687
2024-04-28 22:54:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:54:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #448: GFLOPs: 6667.9349. Time: 65.2866 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #449: GFLOPs: 6717.7830. Time: 64.8022 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #450: GFLOPs: 6717.8571. Time: 64.8015 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #451: GFLOPs: 6546.9508. Time: 66.4931 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #452: GFLOPs: 6895.2160. Time: 63.1346 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #453: GFLOPs: 6648.6021. Time: 65.4765 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #454: GFLOPs: 6778.8151. Time: 64.2187 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #455: GFLOPs: 6781.5032. Time: 64.1933 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #456: GFLOPs: 6895.7878. Time: 63.1294 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #457: GFLOPs: 6738.5646. Time: 64.6023 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #458: GFLOPs: 6826.3758. Time: 63.7713 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #459: GFLOPs: 6895.0973. Time: 63.1357 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #460: GFLOPs: 6914.9992. Time: 62.9540 us. Best GFLOPs: 6932.8536
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #461: GFLOPs: 6992.2869. Time: 62.2582 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #462: GFLOPs: 6910.2528. Time: 62.9973 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #463: GFLOPs: 6888.8448. Time: 63.1930 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #464: GFLOPs: 6891.7216. Time: 63.1667 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #465: GFLOPs: 6685.6634. Time: 65.1135 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #466: GFLOPs: 6854.4837. Time: 63.5098 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #467: GFLOPs: 6777.9794. Time: 64.2267 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #468: GFLOPs: 6848.2540. Time: 63.5676 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #469: GFLOPs: 6929.1339. Time: 62.8256 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #470: GFLOPs: 6889.2276. Time: 63.1895 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #471: GFLOPs: 6715.8147. Time: 64.8212 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #472: GFLOPs: 6884.6758. Time: 63.2313 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #473: GFLOPs: 6816.4809. Time: 63.8639 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #474: GFLOPs: 6938.3021. Time: 62.7426 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #475: GFLOPs: 6891.4185. Time: 63.1694 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #476: GFLOPs: 6768.2107. Time: 64.3194 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #477: GFLOPs: 6846.3410. Time: 63.5853 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #478: GFLOPs: 6975.2942. Time: 62.4098 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #479: GFLOPs: 6920.6858. Time: 62.9023 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #480: GFLOPs: 6685.0684. Time: 65.1193 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #481: GFLOPs: 6832.5361. Time: 63.7138 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #482: GFLOPs: 6724.7637. Time: 64.7349 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #483: GFLOPs: 6702.8193. Time: 64.9468 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #484: GFLOPs: 6831.3241. Time: 63.7251 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #485: GFLOPs: 6911.6740. Time: 62.9843 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #486: GFLOPs: 6676.7882. Time: 65.2001 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #487: GFLOPs: 6837.2059. Time: 63.6703 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #488: GFLOPs: 6715.8572. Time: 64.8208 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #489: GFLOPs: 6795.2026. Time: 64.0639 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #490: GFLOPs: 6699.1590. Time: 64.9823 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #491: GFLOPs: 6689.8905. Time: 65.0724 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #492: GFLOPs: 6818.2915. Time: 63.8469 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #493: GFLOPs: 6714.4595. Time: 64.8343 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #494: GFLOPs: 6821.8871. Time: 63.8133 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #495: GFLOPs: 6809.6729. Time: 63.9277 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #496: GFLOPs: 6795.7432. Time: 64.0588 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #497: GFLOPs: 6698.1813. Time: 64.9918 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #498: GFLOPs: 6786.3127. Time: 64.1478 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #499: GFLOPs: 6939.4509. Time: 62.7322 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #500: GFLOPs: 6810.3010. Time: 63.9218 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #501: GFLOPs: 6710.6204. Time: 64.8713 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #502: GFLOPs: 6722.1012. Time: 64.7606 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #503: GFLOPs: 6641.7680. Time: 65.5438 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #504: GFLOPs: 6769.9288. Time: 64.3030 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #505: GFLOPs: 6780.3902. Time: 64.2038 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #506: GFLOPs: 6656.5592. Time: 65.3982 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #507: GFLOPs: 6642.0532. Time: 65.5410 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #508: GFLOPs: 6800.8348. Time: 64.0108 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #509: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_3_init * T.int64(2) + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(128) + eps_2_nu_2_co_2_p_2_fused // T.int64(49) * T.int64(64) + co_3_init * T.int64(4) + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused % T.int64(49) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98) // T.int64(49))
                                        v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(49))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(21)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(256))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(128))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(98) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4096))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_3 * T.int64(2) + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(128) + eps_2_nu_2_co_2_p_2_fused // T.int64(49) * T.int64(64) + co_3 * T.int64(4) + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused % T.int64(49) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(2) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(2), T.int64(64), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(128) + eps_2_nu_2_co_2_p_2_fused // T.int64(49) * T.int64(64) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused % T.int64(49) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[4, 1, 2, 16, 4])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 1, 49, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 2, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 98, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 98, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #510: GFLOPs: 349.3013. Time: 1246.2795 us. Best GFLOPs: 6992.2869
2024-04-28 22:55:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #511: GFLOPs: 848.3989. Time: 513.1159 us. Best GFLOPs: 6992.2869
2024-04-28 23:19:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:19:05 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:19:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2413 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2813 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:19:41 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-28 23:19:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:20:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:20:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:20:44 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:20:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9975  0.9923  0.9874  0.9874  0.9873  0.9868  0.9852  0.9838  0.9838  0.9834  0.9830  0.9823  0.9800  0.9793  0.9793  0.9793
[17 : 32]:	0.9791  0.9778  0.9778  0.9773  0.9765  0.9760  0.9760  0.9757  0.9751  0.9749  0.9746  0.9746  0.9735  0.9734  0.9729  0.9722
[33 : 48]:	0.9722  0.9720  0.9716  0.9716  0.9716  0.9714  0.9714  0.9711  0.9711  0.9711  0.9709  0.9704  0.9703  0.9702  0.9700  0.9700
[49 : 64]:	0.9698  0.9685  0.9684  0.9682  0.9675  0.9673  0.9673  0.9673  0.9671  0.9668  0.9660  0.9660  0.9660  0.9658  0.9656  0.9647
2024-04-28 23:20:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:20:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #512: GFLOPs: 6936.4768. Time: 62.7591 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #513: GFLOPs: 6888.4092. Time: 63.1970 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #514: GFLOPs: 6823.5928. Time: 63.7973 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #515: GFLOPs: 6920.2770. Time: 62.9060 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #516: GFLOPs: 6904.8084. Time: 63.0469 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #517: GFLOPs: 6938.0367. Time: 62.7450 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #518: GFLOPs: 6879.1687. Time: 63.2819 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #519: GFLOPs: 6818.3115. Time: 63.8467 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #520: GFLOPs: 6859.5449. Time: 63.4630 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #521: GFLOPs: 6872.3236. Time: 63.3449 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #522: GFLOPs: 6841.6866. Time: 63.6286 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #523: GFLOPs: 6754.2914. Time: 64.4519 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #524: GFLOPs: 6859.7155. Time: 63.4614 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #525: GFLOPs: 6771.8678. Time: 64.2846 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #526: GFLOPs: 6780.2139. Time: 64.2055 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #527: GFLOPs: 6869.2869. Time: 63.3729 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #528: GFLOPs: 6882.3827. Time: 63.2524 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #529: GFLOPs: 6938.1249. Time: 62.7442 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #530: GFLOPs: 6837.4984. Time: 63.6676 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #531: GFLOPs: 6917.3186. Time: 62.9329 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #532: GFLOPs: 6796.5878. Time: 64.0508 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #533: GFLOPs: 6821.8871. Time: 63.8133 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #534: GFLOPs: 6818.6817. Time: 63.8433 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #535: GFLOPs: 6815.3484. Time: 63.8745 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #536: GFLOPs: 6831.0768. Time: 63.7274 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #537: GFLOPs: 6853.4996. Time: 63.5189 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #538: GFLOPs: 6865.4396. Time: 63.4085 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #539: GFLOPs: 6815.5464. Time: 63.8726 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #540: GFLOPs: 6798.1437. Time: 64.0362 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #541: GFLOPs: 6723.7067. Time: 64.7451 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #542: GFLOPs: 6765.3995. Time: 64.3461 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #543: GFLOPs: 6814.6080. Time: 63.8814 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #544: GFLOPs: 6890.7730. Time: 63.1753 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #545: GFLOPs: 6676.5332. Time: 65.2025 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #546: GFLOPs: 6661.7701. Time: 65.3470 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #547: GFLOPs: 6821.4945. Time: 63.8170 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #548: GFLOPs: 6757.3195. Time: 64.4230 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #549: GFLOPs: 6763.2751. Time: 64.3663 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #550: GFLOPs: 6833.5454. Time: 63.7044 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #551: GFLOPs: 6787.1596. Time: 64.1398 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #552: GFLOPs: 6786.9567. Time: 64.1417 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #553: GFLOPs: 6706.3905. Time: 64.9123 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #554: GFLOPs: 6808.2574. Time: 63.9410 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #555: GFLOPs: 6786.6847. Time: 64.1443 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #556: GFLOPs: 6882.9417. Time: 63.2472 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #557: GFLOPs: 6838.8616. Time: 63.6549 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #558: GFLOPs: 6883.8375. Time: 63.2390 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #559: GFLOPs: 6833.2306. Time: 63.7073 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #560: GFLOPs: 6845.3405. Time: 63.5946 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #561: GFLOPs: 6719.3807. Time: 64.7868 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #562: GFLOPs: 6780.4758. Time: 64.2030 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #563: GFLOPs: 6819.0517. Time: 63.8398 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #564: GFLOPs: 6883.9504. Time: 63.2380 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #565: GFLOPs: 6770.2002. Time: 64.3005 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #566: GFLOPs: 6554.3896. Time: 66.4176 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #567: GFLOPs: 6681.1655. Time: 65.1573 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #568: GFLOPs: 6755.8214. Time: 64.4373 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #569: GFLOPs: 6734.0284. Time: 64.6458 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #570: GFLOPs: 6795.2586. Time: 64.0633 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #571: GFLOPs: 6787.7215. Time: 64.1345 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #572: GFLOPs: 6771.1491. Time: 64.2914 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #573: GFLOPs: 1916.1853. Time: 227.1842 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #574: GFLOPs: 217.0063. Time: 2006.0570 us. Best GFLOPs: 6992.2869
2024-04-28 23:22:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #575: GFLOPs: 442.1366. Time: 984.5983 us. Best GFLOPs: 6992.2869
2024-04-28 23:44:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:44:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:44:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:44:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:44:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1206 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:44:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1613 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:44:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:44:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:45:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:45:01 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-28 23:45:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:45:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 173 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:45:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 148 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:46:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-28 23:46:15 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0040  0.9962  0.9958  0.9958  0.9947  0.9947  0.9941  0.9927  0.9905  0.9898  0.9896  0.9889  0.9889  0.9884  0.9866  0.9862
[17 : 32]:	0.9848  0.9843  0.9840  0.9835  0.9828  0.9824  0.9808  0.9804  0.9803  0.9803  0.9803  0.9791  0.9791  0.9788  0.9780  0.9768
[33 : 48]:	0.9766  0.9766  0.9758  0.9757  0.9755  0.9748  0.9747  0.9740  0.9734  0.9730  0.9730  0.9726  0.9720  0.9716  0.9708  0.9705
[49 : 64]:	0.9698  0.9692  0.9689  0.9686  0.9684  0.9683  0.9680  0.9680  0.9677  0.9674  0.9670  0.9670  0.9663  0.9660  0.9658  0.9648
2024-04-28 23:46:15 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:46:15 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #576: GFLOPs: 6966.8615. Time: 62.4854 us. Best GFLOPs: 6992.2869
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #577: GFLOPs: 6899.4180. Time: 63.0962 us. Best GFLOPs: 6992.2869
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #578: GFLOPs: 6884.9775. Time: 63.2285 us. Best GFLOPs: 6992.2869
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #579: GFLOPs: 6975.2365. Time: 62.4104 us. Best GFLOPs: 6992.2869
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #580: GFLOPs: 6946.5142. Time: 62.6684 us. Best GFLOPs: 6992.2869
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #581: GFLOPs: 7002.0742. Time: 62.1711 us. Best GFLOPs: 7002.0742
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #582: GFLOPs: 7036.0033. Time: 61.8713 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #583: GFLOPs: 6885.1214. Time: 63.2272 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #584: GFLOPs: 6838.5070. Time: 63.6582 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #585: GFLOPs: 6977.3713. Time: 62.3913 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #586: GFLOPs: 6846.8552. Time: 63.5806 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #587: GFLOPs: 6961.6287. Time: 62.5323 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #588: GFLOPs: 6903.3296. Time: 63.0604 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #589: GFLOPs: 6869.8796. Time: 63.3675 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #590: GFLOPs: 6915.4820. Time: 62.9496 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #591: GFLOPs: 6929.9807. Time: 62.8179 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #592: GFLOPs: 6920.3360. Time: 62.9055 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #593: GFLOPs: 6827.3757. Time: 63.7620 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #594: GFLOPs: 6980.5124. Time: 62.3632 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #595: GFLOPs: 6975.4272. Time: 62.4086 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #596: GFLOPs: 6951.6897. Time: 62.6218 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #597: GFLOPs: 6915.1216. Time: 62.9529 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #598: GFLOPs: 6842.8942. Time: 63.6174 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #599: GFLOPs: 6781.7623. Time: 64.1908 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #600: GFLOPs: 6889.7536. Time: 63.1847 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #601: GFLOPs: 6933.8723. Time: 62.7827 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #602: GFLOPs: 6846.8116. Time: 63.5810 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #603: GFLOPs: 6867.9287. Time: 63.3855 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #604: GFLOPs: 6863.2823. Time: 63.4284 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #605: GFLOPs: 6788.4230. Time: 64.1279 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #606: GFLOPs: 6891.2420. Time: 63.1710 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #607: GFLOPs: 6843.2108. Time: 63.6144 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #608: GFLOPs: 6732.6775. Time: 64.6588 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #609: GFLOPs: 6856.5319. Time: 63.4908 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #610: GFLOPs: 6907.2463. Time: 63.0247 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #611: GFLOPs: 6651.1883. Time: 65.4510 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #612: GFLOPs: 6785.9075. Time: 64.1516 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #613: GFLOPs: 6861.0933. Time: 63.4486 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #614: GFLOPs: 6665.2208. Time: 65.3132 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #615: GFLOPs: 6697.7878. Time: 64.9956 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #616: GFLOPs: 6714.5263. Time: 64.8336 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #617: GFLOPs: 6850.9301. Time: 63.5428 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #618: GFLOPs: 6876.3627. Time: 63.3077 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #619: GFLOPs: 6852.2862. Time: 63.5302 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #620: GFLOPs: 6907.9384. Time: 63.0184 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #621: GFLOPs: 6849.2643. Time: 63.5582 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #622: GFLOPs: 6813.3522. Time: 63.8932 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #623: GFLOPs: 6859.9257. Time: 63.4594 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #624: GFLOPs: 6641.7512. Time: 65.5440 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #625: GFLOPs: 6845.6312. Time: 63.5919 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #626: GFLOPs: 6888.6708. Time: 63.1946 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #627: GFLOPs: 6642.0956. Time: 65.5406 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #628: GFLOPs: 6885.7697. Time: 63.2213 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #629: GFLOPs: 6979.9468. Time: 62.3682 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #630: GFLOPs: 6776.7042. Time: 64.2387 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #631: GFLOPs: 6798.0161. Time: 64.0374 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #632: GFLOPs: 6865.2668. Time: 63.4101 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #633: GFLOPs: 6665.7259. Time: 65.3083 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #634: GFLOPs: 6796.8095. Time: 64.0487 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #635: GFLOPs: 6829.2361. Time: 63.7446 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #636: GFLOPs: 6719.0322. Time: 64.7901 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #637: GFLOPs: 280.2314. Time: 1553.4553 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #638: GFLOPs: 2287.2886. Time: 190.3245 us. Best GFLOPs: 7036.0033
2024-04-28 23:47:35 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #639: GFLOPs: 1991.6834. Time: 218.5724 us. Best GFLOPs: 7036.0033
2024-04-29 00:02:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:02:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:02:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:02:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:02:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:02:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1599 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:02:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:03:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:03:02 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 00:03:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:03:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 152 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:03:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:04:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 146 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:04:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9894  0.9873  0.9855  0.9841  0.9838  0.9833  0.9821  0.9821  0.9810  0.9810  0.9808  0.9807  0.9800  0.9800  0.9800  0.9799
[17 : 32]:	0.9783  0.9772  0.9772  0.9770  0.9769  0.9761  0.9756  0.9737  0.9737  0.9736  0.9734  0.9734  0.9728  0.9728  0.9722  0.9714
[33 : 48]:	0.9714  0.9714  0.9712  0.9712  0.9712  0.9712  0.9710  0.9702  0.9701  0.9700  0.9698  0.9697  0.9697  0.9697  0.9697  0.9697
[49 : 64]:	0.9694  0.9690  0.9688  0.9684  0.9673  0.9671  0.9671  0.9668  0.9654  0.9651  0.9650  0.9645  0.9642  0.9642  0.9642  0.9642
2024-04-29 00:04:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:04:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #640: GFLOPs: 6931.5769. Time: 62.8035 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #641: GFLOPs: 6924.6229. Time: 62.8665 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #642: GFLOPs: 6865.7015. Time: 63.4060 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #643: GFLOPs: 7010.7338. Time: 62.0944 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #644: GFLOPs: 6965.5422. Time: 62.4972 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #645: GFLOPs: 6854.0626. Time: 63.5137 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #646: GFLOPs: 6910.5240. Time: 62.9948 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #647: GFLOPs: 7015.8734. Time: 62.0489 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #648: GFLOPs: 7027.7668. Time: 61.9439 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #649: GFLOPs: 6977.2820. Time: 62.3921 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #650: GFLOPs: 7027.8745. Time: 61.9429 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #651: GFLOPs: 6942.6602. Time: 62.7032 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #652: GFLOPs: 6942.5264. Time: 62.7044 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #653: GFLOPs: 6919.8757. Time: 62.9097 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #654: GFLOPs: 6962.9436. Time: 62.5205 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #655: GFLOPs: 6963.9122. Time: 62.5118 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #656: GFLOPs: 6885.7884. Time: 63.2211 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #657: GFLOPs: 6945.1228. Time: 62.6810 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #658: GFLOPs: 6894.5572. Time: 63.1407 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #659: GFLOPs: 6804.6909. Time: 63.9745 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #660: GFLOPs: 6933.7302. Time: 62.7840 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #661: GFLOPs: 6912.4101. Time: 62.9776 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #662: GFLOPs: 6854.3271. Time: 63.5113 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #663: GFLOPs: 6903.5902. Time: 63.0581 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #664: GFLOPs: 6952.8318. Time: 62.6115 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #665: GFLOPs: 6940.1952. Time: 62.7255 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #666: GFLOPs: 6956.9418. Time: 62.5745 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #667: GFLOPs: 6908.5952. Time: 63.0124 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #668: GFLOPs: 6969.4652. Time: 62.4620 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #669: GFLOPs: 6957.2681. Time: 62.5715 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #670: GFLOPs: 6841.0881. Time: 63.6342 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #671: GFLOPs: 6833.2839. Time: 63.7068 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #672: GFLOPs: 6833.1624. Time: 63.7080 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #673: GFLOPs: 6974.0000. Time: 62.4214 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #674: GFLOPs: 6773.2387. Time: 64.2716 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #675: GFLOPs: 6799.6209. Time: 64.0222 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #676: GFLOPs: 6864.0885. Time: 63.4209 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #677: GFLOPs: 6853.4502. Time: 63.5194 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #678: GFLOPs: 6864.4396. Time: 63.4177 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #679: GFLOPs: 6871.1139. Time: 63.3561 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #680: GFLOPs: 6758.1560. Time: 64.4151 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #681: GFLOPs: 6835.2878. Time: 63.6882 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #682: GFLOPs: 6726.6197. Time: 64.7170 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #683: GFLOPs: 6852.2172. Time: 63.5308 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #684: GFLOPs: 6912.1029. Time: 62.9804 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #685: GFLOPs: 6922.8084. Time: 62.8830 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #686: GFLOPs: 6968.2597. Time: 62.4728 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #687: GFLOPs: 6769.4134. Time: 64.3079 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #688: GFLOPs: 6653.1306. Time: 65.4319 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #689: GFLOPs: 6756.8618. Time: 64.4274 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #690: GFLOPs: 6869.3388. Time: 63.3725 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #691: GFLOPs: 6670.2538. Time: 65.2639 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #692: GFLOPs: 6757.0355. Time: 64.4257 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #693: GFLOPs: 6850.7928. Time: 63.5440 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #694: GFLOPs: 6850.8671. Time: 63.5433 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #695: GFLOPs: 6766.2785. Time: 64.3377 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #696: GFLOPs: 6728.7068. Time: 64.6970 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #697: GFLOPs: 6857.1032. Time: 63.4856 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #698: GFLOPs: 6810.2576. Time: 63.9222 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #699: GFLOPs: 6850.5186. Time: 63.5466 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #700: GFLOPs: 6861.2448. Time: 63.4472 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #701: GFLOPs: 3455.9380. Time: 125.9649 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #702: GFLOPs: 978.5664. Time: 444.8620 us. Best GFLOPs: 7036.0033
2024-04-29 00:05:31 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #703: GFLOPs: 2090.2281. Time: 208.2677 us. Best GFLOPs: 7036.0033
2024-04-29 00:23:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:23:04 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:23:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:23:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:23:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1202 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:23:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:23:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2007 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:23:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2408 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:23:36 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 00:23:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:24:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 176 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:24:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 168 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:24:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 162 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:24:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0750  1.0297  1.0118  1.0061  0.9953  0.9952  0.9911  0.9905  0.9900  0.9892  0.9890  0.9882  0.9862  0.9861  0.9861  0.9842
[17 : 32]:	0.9841  0.9841  0.9838  0.9822  0.9819  0.9819  0.9805  0.9804  0.9789  0.9781  0.9774  0.9770  0.9770  0.9766  0.9765  0.9765
[33 : 48]:	0.9761  0.9757  0.9743  0.9741  0.9737  0.9736  0.9733  0.9729  0.9726  0.9723  0.9722  0.9722  0.9722  0.9722  0.9716  0.9716
[49 : 64]:	0.9701  0.9701  0.9697  0.9696  0.9696  0.9688  0.9687  0.9681  0.9680  0.9676  0.9668  0.9667  0.9667  0.9666  0.9663  0.9662
2024-04-29 00:24:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:24:50 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #704: GFLOPs: 1196.6775. Time: 363.7797 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #705: GFLOPs: 1698.3036. Time: 256.3305 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #706: GFLOPs: 638.0929. Time: 682.2313 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #707: GFLOPs: 1695.2508. Time: 256.7921 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #708: GFLOPs: 6841.9783. Time: 63.6259 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #709: GFLOPs: 6885.1869. Time: 63.2266 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #710: GFLOPs: 6877.3791. Time: 63.2984 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #711: GFLOPs: 6890.4104. Time: 63.1787 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #712: GFLOPs: 6889.8275. Time: 63.1840 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #713: GFLOPs: 6814.7954. Time: 63.8797 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #714: GFLOPs: 6793.6684. Time: 64.0783 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #715: GFLOPs: 6740.5335. Time: 64.5835 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #716: GFLOPs: 6881.9676. Time: 63.2562 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #717: GFLOPs: 6888.3112. Time: 63.1979 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #718: GFLOPs: 6889.1342. Time: 63.1904 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #719: GFLOPs: 6882.3395. Time: 63.2528 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #720: GFLOPs: 6888.6585. Time: 63.1947 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #721: GFLOPs: 6823.1191. Time: 63.8018 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #722: GFLOPs: 6850.2267. Time: 63.5493 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #723: GFLOPs: 6857.5371. Time: 63.4815 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #724: GFLOPs: 6832.0647. Time: 63.7182 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #725: GFLOPs: 6844.2113. Time: 63.6051 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #726: GFLOPs: 6863.3452. Time: 63.4278 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #727: GFLOPs: 6959.6429. Time: 62.5502 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #728: GFLOPs: 6964.1214. Time: 62.5100 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #729: GFLOPs: 6927.0055. Time: 62.8449 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #730: GFLOPs: 6787.7646. Time: 64.1341 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #731: GFLOPs: 6945.3367. Time: 62.6790 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #732: GFLOPs: 6960.6984. Time: 62.5407 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #733: GFLOPs: 6921.0630. Time: 62.8989 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #734: GFLOPs: 6860.0251. Time: 63.4585 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #735: GFLOPs: 6946.1183. Time: 62.6720 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #736: GFLOPs: 6923.2065. Time: 62.8794 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #737: GFLOPs: 6887.2331. Time: 63.2078 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #738: GFLOPs: 6800.3746. Time: 64.0151 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #739: GFLOPs: 6797.4991. Time: 64.0422 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #740: GFLOPs: 6620.7331. Time: 65.7521 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #741: GFLOPs: 6939.3627. Time: 62.7330 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #742: GFLOPs: 6836.6552. Time: 63.6754 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #743: GFLOPs: 6774.4926. Time: 64.2597 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #744: GFLOPs: 6872.5376. Time: 63.3430 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #745: GFLOPs: 6714.1563. Time: 64.8372 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #746: GFLOPs: 6828.2049. Time: 63.7542 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #747: GFLOPs: 6850.9540. Time: 63.5425 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #748: GFLOPs: 6660.6602. Time: 65.3579 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #749: GFLOPs: 6776.3006. Time: 64.2426 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #750: GFLOPs: 6728.0881. Time: 64.7029 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #751: GFLOPs: 6719.7670. Time: 64.7830 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #752: GFLOPs: 6750.4216. Time: 64.4889 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #753: GFLOPs: 6773.8785. Time: 64.2655 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #754: GFLOPs: 6940.2392. Time: 62.7251 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #755: GFLOPs: 6922.9548. Time: 62.8817 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #756: GFLOPs: 6782.0151. Time: 64.1884 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #757: GFLOPs: 6744.4344. Time: 64.5461 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #758: GFLOPs: 6810.0001. Time: 63.9247 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #759: GFLOPs: 6772.4828. Time: 64.2788 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #760: GFLOPs: 6849.4357. Time: 63.5566 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #761: GFLOPs: 6859.5007. Time: 63.4634 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #762: GFLOPs: 6745.2262. Time: 64.5385 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #763: GFLOPs: 6753.2432. Time: 64.4619 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #764: GFLOPs: 6819.8135. Time: 63.8327 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #765: GFLOPs: 59.7912. Time: 7280.7862 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #766: GFLOPs: 210.3767. Time: 2069.2741 us. Best GFLOPs: 7036.0033
2024-04-29 00:26:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #767: GFLOPs: 117.7121. Time: 3698.2354 us. Best GFLOPs: 7036.0033
2024-04-29 00:33:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:33:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:33:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1202 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1602 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2006 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:24 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 00:34:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 131 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:34:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 146 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:35:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 172 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:35:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:35:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3109  1.2166  1.2152  1.1575  1.1280  1.1230  1.1228  1.1165  1.1150  1.1149  1.1142  1.1142  1.1141  1.1118  1.1117  1.1110
[17 : 32]:	1.1110  1.1110  1.1107  1.1053  1.1021  1.1021  1.1013  1.0997  1.0987  1.0979  1.0906  1.0871  1.0851  1.0851  1.0818  1.0772
[33 : 48]:	1.0705  1.0694  1.0688  1.0665  1.0633  1.0633  1.0623  1.0618  1.0602  1.0600  1.0594  1.0535  1.0184  1.0041  0.9923  0.9918
[49 : 64]:	0.9906  0.9900  0.9900  0.9900  0.9888  0.9877  0.9877  0.9854  0.9839  0.9836  0.9830  0.9826  0.9825  0.9822  0.9814  0.9802
2024-04-29 00:35:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:35:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #768: GFLOPs: 146.0606. Time: 2980.4544 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #769: GFLOPs: 1849.6472. Time: 235.3568 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #770: GFLOPs: 1870.1925. Time: 232.7712 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #771: GFLOPs: 1836.4816. Time: 237.0440 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #772: GFLOPs: 2924.5023. Time: 148.8551 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #773: GFLOPs: 2810.1372. Time: 154.9131 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #774: GFLOPs: 2811.3038. Time: 154.8488 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #775: GFLOPs: 2668.9245. Time: 163.1095 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #776: GFLOPs: 3043.3780. Time: 143.0407 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #777: GFLOPs: 3060.0973. Time: 142.2592 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #778: GFLOPs: 3064.7543. Time: 142.0430 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #779: GFLOPs: 2667.4657. Time: 163.1987 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #780: GFLOPs: 2667.6684. Time: 163.1863 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #781: GFLOPs: 2915.4043. Time: 149.3196 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #782: GFLOPs: 3060.5358. Time: 142.2388 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #783: GFLOPs: 3061.2446. Time: 142.2059 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #784: GFLOPs: 3055.2978. Time: 142.4827 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #785: GFLOPs: 2668.1871. Time: 163.1546 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #786: GFLOPs: 2667.5012. Time: 163.1965 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #787: GFLOPs: 2665.7047. Time: 163.3065 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #788: GFLOPs: 2846.2043. Time: 152.9500 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #789: GFLOPs: 2869.3148. Time: 151.7181 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #790: GFLOPs: 2663.2459. Time: 163.4573 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #791: GFLOPs: 3224.8309. Time: 134.9922 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #792: GFLOPs: 3224.3084. Time: 135.0141 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #793: GFLOPs: 2659.5940. Time: 163.6817 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #794: GFLOPs: 2646.9620. Time: 164.4629 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #795: GFLOPs: 2894.4040. Time: 150.4030 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #796: GFLOPs: 2868.8108. Time: 151.7448 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #797: GFLOPs: 2544.0936. Time: 171.1128 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #798: GFLOPs: 2521.4094. Time: 172.6522 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #799: GFLOPs: 3033.1130. Time: 143.5248 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #800: GFLOPs: 2752.2796. Time: 158.1696 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #801: GFLOPs: 2807.9354. Time: 155.0345 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #802: GFLOPs: 2783.7988. Time: 156.3788 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #803: GFLOPs: 2783.7594. Time: 156.3810 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #804: GFLOPs: 3192.5259. Time: 136.3582 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #805: GFLOPs: 2782.3820. Time: 156.4584 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #806: GFLOPs: 2774.8608. Time: 156.8825 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #807: GFLOPs: 2775.2025. Time: 156.8631 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #808: GFLOPs: 2784.2435. Time: 156.3538 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #809: GFLOPs: 2805.1564. Time: 155.1881 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #810: GFLOPs: 2791.2169. Time: 155.9631 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #811: GFLOPs: 2778.2251. Time: 156.6925 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #812: GFLOPs: 3142.2155. Time: 138.5414 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #813: GFLOPs: 6770.5850. Time: 64.2968 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #814: GFLOPs: 2781.3722. Time: 156.5152 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #815: GFLOPs: 2372.8739. Time: 183.4598 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #816: GFLOPs: 6883.3579. Time: 63.2434 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #817: GFLOPs: 2642.0551. Time: 164.7683 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #818: GFLOPs: 6839.6313. Time: 63.6477 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #819: GFLOPs: 6933.3711. Time: 62.7872 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #820: GFLOPs: 6883.1179. Time: 63.2456 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #821: GFLOPs: 6929.5909. Time: 62.8215 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #822: GFLOPs: 6873.2747. Time: 63.3362 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #823: GFLOPs: 6837.5806. Time: 63.6668 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #824: GFLOPs: 6834.4012. Time: 63.6964 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #825: GFLOPs: 6876.3884. Time: 63.3075 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #826: GFLOPs: 6914.2216. Time: 62.9611 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #827: GFLOPs: 6915.8365. Time: 62.9464 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #828: GFLOPs: 6960.4785. Time: 62.5427 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #829: GFLOPs: 554.4590. Time: 785.1382 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #830: GFLOPs: 163.2168. Time: 2667.1697 us. Best GFLOPs: 7036.0033
2024-04-29 00:36:50 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #831: GFLOPs: 1228.0220. Time: 354.4944 us. Best GFLOPs: 7036.0033
2024-04-29 00:52:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:52:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:52:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:52:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:52:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:52:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1605 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:52:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2008 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:52:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:52:37 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 00:52:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 164 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:53:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:53:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 185 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:53:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 00:53:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9938  0.9931  0.9907  0.9907  0.9891  0.9882  0.9876  0.9865  0.9861  0.9854  0.9854  0.9854  0.9849  0.9836  0.9820  0.9814
[17 : 32]:	0.9813  0.9809  0.9802  0.9799  0.9789  0.9787  0.9787  0.9787  0.9787  0.9783  0.9782  0.9780  0.9776  0.9776  0.9764  0.9758
[33 : 48]:	0.9755  0.9753  0.9746  0.9743  0.9743  0.9736  0.9736  0.9729  0.9729  0.9729  0.9729  0.9727  0.9726  0.9726  0.9726  0.9726
[49 : 64]:	0.9726  0.9726  0.9724  0.9724  0.9718  0.9714  0.9713  0.9706  0.9705  0.9704  0.9699  0.9699  0.9698  0.9692  0.9688  0.9676
2024-04-29 00:53:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:53:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #832: GFLOPs: 6929.1825. Time: 62.8252 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #833: GFLOPs: 6939.0587. Time: 62.7357 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #834: GFLOPs: 7034.2953. Time: 61.8864 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #835: GFLOPs: 7000.1827. Time: 62.1879 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #836: GFLOPs: 7007.7626. Time: 62.1207 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #837: GFLOPs: 6979.0969. Time: 62.3758 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #838: GFLOPs: 6798.3642. Time: 64.0341 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #839: GFLOPs: 6982.4036. Time: 62.3463 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #840: GFLOPs: 7035.0139. Time: 61.8800 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #841: GFLOPs: 6970.3427. Time: 62.4542 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #842: GFLOPs: 6955.4851. Time: 62.5876 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #843: GFLOPs: 6918.1070. Time: 62.9257 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #844: GFLOPs: 6999.7925. Time: 62.1914 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #845: GFLOPs: 6939.6240. Time: 62.7306 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #846: GFLOPs: 7023.9820. Time: 61.9772 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #847: GFLOPs: 6929.4846. Time: 62.8224 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #848: GFLOPs: 6998.0933. Time: 62.2065 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #849: GFLOPs: 6945.2417. Time: 62.6799 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #850: GFLOPs: 6993.4606. Time: 62.2477 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #851: GFLOPs: 6864.3067. Time: 63.4189 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #852: GFLOPs: 6850.3013. Time: 63.5486 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #853: GFLOPs: 6910.3398. Time: 62.9965 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #854: GFLOPs: 7000.9169. Time: 62.1814 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #855: GFLOPs: 6964.4168. Time: 62.5073 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #856: GFLOPs: 6960.0828. Time: 62.5462 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #857: GFLOPs: 6920.4382. Time: 62.9045 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #858: GFLOPs: 6904.2431. Time: 63.0521 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #859: GFLOPs: 6882.2721. Time: 63.2534 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #860: GFLOPs: 6963.9880. Time: 62.5112 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #861: GFLOPs: 7014.7176. Time: 62.0591 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #862: GFLOPs: 6884.1422. Time: 63.2362 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #863: GFLOPs: 6915.8772. Time: 62.9460 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #864: GFLOPs: 6854.3271. Time: 63.5113 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #865: GFLOPs: 6805.1411. Time: 63.9703 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #866: GFLOPs: 6788.5090. Time: 64.1270 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #867: GFLOPs: 6888.4962. Time: 63.1962 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #868: GFLOPs: 6890.6735. Time: 63.1763 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #869: GFLOPs: 6799.6112. Time: 64.0223 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #870: GFLOPs: 6915.8772. Time: 62.9460 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #871: GFLOPs: 6756.7716. Time: 64.4283 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #872: GFLOPs: 6716.6408. Time: 64.8132 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #873: GFLOPs: 6798.8781. Time: 64.0292 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #874: GFLOPs: 6799.6451. Time: 64.0220 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #875: GFLOPs: 6918.2056. Time: 62.9248 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #876: GFLOPs: 6905.4852. Time: 63.0408 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #877: GFLOPs: 6904.8954. Time: 63.0461 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #878: GFLOPs: 6798.5355. Time: 64.0325 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #879: GFLOPs: 6813.9418. Time: 63.8877 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #880: GFLOPs: 6840.3911. Time: 63.6407 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #881: GFLOPs: 6874.4554. Time: 63.3253 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #882: GFLOPs: 6801.1512. Time: 64.0078 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #883: GFLOPs: 6804.1097. Time: 63.9800 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #884: GFLOPs: 6722.3979. Time: 64.7577 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #885: GFLOPs: 6835.4183. Time: 63.6870 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #886: GFLOPs: 6910.4035. Time: 62.9959 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #887: GFLOPs: 6915.6516. Time: 62.9481 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #888: GFLOPs: 6905.2513. Time: 63.0429 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #889: GFLOPs: 6734.8346. Time: 64.6381 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #890: GFLOPs: 6902.8506. Time: 63.0648 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #891: GFLOPs: 6900.0172. Time: 63.0907 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #892: GFLOPs: 6736.6207. Time: 64.6210 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #893: GFLOPs: 1585.8143. Time: 274.5132 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #894: GFLOPs: 1680.0069. Time: 259.1221 us. Best GFLOPs: 7036.0033
2024-04-29 00:55:05 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #895: GFLOPs: 890.7442. Time: 488.7227 us. Best GFLOPs: 7036.0033
2024-04-29 01:16:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:16:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:16:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:16:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1204 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2815 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:22 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 01:17:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 172 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:17:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 166 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:18:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:18:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:18:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0405  1.0248  1.0192  1.0164  1.0004  0.9946  0.9945  0.9944  0.9932  0.9923  0.9920  0.9906  0.9888  0.9882  0.9880  0.9872
[17 : 32]:	0.9872  0.9871  0.9870  0.9869  0.9866  0.9864  0.9856  0.9848  0.9829  0.9827  0.9827  0.9821  0.9820  0.9819  0.9815  0.9814
[33 : 48]:	0.9812  0.9812  0.9808  0.9804  0.9794  0.9794  0.9792  0.9790  0.9789  0.9782  0.9780  0.9779  0.9777  0.9774  0.9773  0.9768
[49 : 64]:	0.9767  0.9765  0.9762  0.9761  0.9759  0.9759  0.9756  0.9753  0.9748  0.9748  0.9746  0.9746  0.9746  0.9741  0.9741  0.9738
2024-04-29 01:18:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:18:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #896: GFLOPs: 6920.9574. Time: 62.8998 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #897: GFLOPs: 6901.3723. Time: 63.0783 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #898: GFLOPs: 6882.0978. Time: 63.2550 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #899: GFLOPs: 6830.6321. Time: 63.7316 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #900: GFLOPs: 6640.2095. Time: 65.5592 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #901: GFLOPs: 6924.3035. Time: 62.8694 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #902: GFLOPs: 6802.3491. Time: 63.9966 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #903: GFLOPs: 6890.5663. Time: 63.1772 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #904: GFLOPs: 6872.8912. Time: 63.3397 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #905: GFLOPs: 6822.8047. Time: 63.8047 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #906: GFLOPs: 6886.7976. Time: 63.2118 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #907: GFLOPs: 6877.2477. Time: 63.2996 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #908: GFLOPs: 6872.0548. Time: 63.3474 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #909: GFLOPs: 6708.9303. Time: 64.8877 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #910: GFLOPs: 6884.1902. Time: 63.2358 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #911: GFLOPs: 6870.8377. Time: 63.3586 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #912: GFLOPs: 6874.5533. Time: 63.3244 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #913: GFLOPs: 6886.5154. Time: 63.2144 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #914: GFLOPs: 6877.9755. Time: 63.2929 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #915: GFLOPs: 6883.2906. Time: 63.2440 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #916: GFLOPs: 6886.3982. Time: 63.2155 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #917: GFLOPs: 6848.1804. Time: 63.5683 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #918: GFLOPs: 6868.9468. Time: 63.3761 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #919: GFLOPs: 6857.4088. Time: 63.4827 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #920: GFLOPs: 6761.6607. Time: 64.3817 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #921: GFLOPs: 6798.6722. Time: 64.0312 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #922: GFLOPs: 6885.0559. Time: 63.2278 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #923: GFLOPs: 6806.0434. Time: 63.9618 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #924: GFLOPs: 6881.0429. Time: 63.2647 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #925: GFLOPs: 6875.8075. Time: 63.3129 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #926: GFLOPs: 6853.4996. Time: 63.5189 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #927: GFLOPs: 6750.3540. Time: 64.4895 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #928: GFLOPs: 6704.0945. Time: 64.9345 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #929: GFLOPs: 6836.1730. Time: 63.6799 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #930: GFLOPs: 6779.7399. Time: 64.2100 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #931: GFLOPs: 6797.5003. Time: 64.0422 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #932: GFLOPs: 6855.2336. Time: 63.5029 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #933: GFLOPs: 6868.9468. Time: 63.3761 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #934: GFLOPs: 6863.1920. Time: 63.4292 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #935: GFLOPs: 6903.3407. Time: 63.0603 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #936: GFLOPs: 6838.6478. Time: 63.6569 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #937: GFLOPs: 6756.9732. Time: 64.4263 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #938: GFLOPs: 6856.0576. Time: 63.4952 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #939: GFLOPs: 6814.4353. Time: 63.8831 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #940: GFLOPs: 6854.4530. Time: 63.5101 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #941: GFLOPs: 6818.5058. Time: 63.8449 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #942: GFLOPs: 6880.6105. Time: 63.2687 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #943: GFLOPs: 6905.9402. Time: 63.0366 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #944: GFLOPs: 6875.4947. Time: 63.3157 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #945: GFLOPs: 6812.7554. Time: 63.8988 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #946: GFLOPs: 6911.5049. Time: 62.9858 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #947: GFLOPs: 6339.5993. Time: 68.6679 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #948: GFLOPs: 6669.8133. Time: 65.2682 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #949: GFLOPs: 6929.0901. Time: 62.8260 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #950: GFLOPs: 6729.7780. Time: 64.6867 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #951: GFLOPs: 6777.7326. Time: 64.2290 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #952: GFLOPs: 6834.7395. Time: 63.6933 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #953: GFLOPs: 6756.0784. Time: 64.4349 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #954: GFLOPs: 6774.0501. Time: 64.2639 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #955: GFLOPs: 6679.6820. Time: 65.1718 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #956: GFLOPs: 6891.4597. Time: 63.1691 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #957: GFLOPs: 2976.6469. Time: 146.2474 us. Best GFLOPs: 7036.0033
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #958: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 159, in _worker_func
    costs: List[float] = f_run_evaluator(
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 387, in default_run_evaluator
    return run_evaluator_common(rt_mod, device, evaluator_config, repeated_args)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 117, in run_evaluator_common
    profile_result = evaluator(*args)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/runtime/module.py", line 397, in evaluator
    blob = feval(*args)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  2: tvm::runtime::profiling::WrapTimeEvaluator(tvm::runtime::PackedFunc, DLDevice, int, int, int, int, int, int, int, tvm::runtime::PackedFunc)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) [clone .isra.0]
  1: tvm::runtime::CUDADeviceAPI::StreamSync(DLDevice, void*)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/runtime/cuda/cuda_device_api.cc", line 212
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(7), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(4) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(64) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(4))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1 < T.int64(98))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(5)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(4))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(512))
                                        v3 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(4) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(64) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(2) + ci_1 * T.int64(2) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(64), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(64) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 8, 64, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 7, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136 = sch.split(loop=l134, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l137, l138, l139, l140, l141 = sch.get_loops(block=b108)
l142, l143, l144 = sch.split(loop=l141, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l144)
sch.bind(loop=l143, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b149)
l179, l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-29 01:19:52 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #959: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  5: _ZN3tvm7runtime13PackedFun
  4: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  3: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  2: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(30) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(112), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(4) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(64)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(224))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(224) // T.int64(56))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(8) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56) // T.int64(7))
                                        v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(74)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(1024))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(1024) // T.int64(256))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(8) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(256) // T.int64(32))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(32))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1 < T.int64(4096))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(4) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(8) + ci_1 * T.int64(2) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(32) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 4, 2, 4, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 1, 7, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[64, 4, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144 = sch.split(loop=l142, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b149)
l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-29 01:34:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:34:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:34:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:34:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:34:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:34:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1603 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:34:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:35:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2409 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:35:03 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-04-29 01:35:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 166 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:35:36 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:35:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:36:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:36:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9907  0.9867  0.9858  0.9854  0.9851  0.9847  0.9847  0.9842  0.9841  0.9840  0.9839  0.9839  0.9828  0.9822  0.9822  0.9806
[17 : 32]:	0.9799  0.9796  0.9795  0.9794  0.9789  0.9783  0.9783  0.9770  0.9766  0.9766  0.9761  0.9760  0.9759  0.9759  0.9749  0.9749
[33 : 48]:	0.9746  0.9745  0.9744  0.9740  0.9736  0.9726  0.9723  0.9723  0.9722  0.9716  0.9712  0.9698  0.9697  0.9686  0.9686  0.9686
[49 : 64]:	0.9684  0.9684  0.9684  0.9682  0.9681  0.9680  0.9679  0.9678  0.9675  0.9671  0.9668  0.9668  0.9667  0.9667  0.9663  0.9663
2024-04-29 01:36:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:36:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #960: GFLOPs: 6961.4060. Time: 62.5343 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #961: GFLOPs: 6926.3263. Time: 62.8511 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #962: GFLOPs: 6903.9383. Time: 63.0549 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #963: GFLOPs: 6909.7863. Time: 63.0015 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #964: GFLOPs: 6863.2768. Time: 63.4284 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #965: GFLOPs: 6893.4661. Time: 63.1507 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #966: GFLOPs: 6864.4015. Time: 63.4181 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #967: GFLOPs: 6817.1510. Time: 63.8576 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #968: GFLOPs: 6848.4802. Time: 63.5655 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #969: GFLOPs: 6879.2008. Time: 63.2816 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #970: GFLOPs: 6882.1400. Time: 63.2546 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #971: GFLOPs: 6879.4310. Time: 63.2795 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #972: GFLOPs: 6844.6447. Time: 63.6011 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #973: GFLOPs: 6839.6152. Time: 63.6479 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #974: GFLOPs: 6878.3210. Time: 63.2897 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #975: GFLOPs: 6835.1943. Time: 63.6890 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #976: GFLOPs: 6839.1205. Time: 63.6525 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #977: GFLOPs: 6792.1432. Time: 64.0927 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #978: GFLOPs: 6847.2543. Time: 63.5769 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #979: GFLOPs: 6869.2210. Time: 63.3736 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #980: GFLOPs: 6909.9824. Time: 62.9997 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #981: GFLOPs: 6783.9790. Time: 64.1699 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #982: GFLOPs: 6784.1382. Time: 64.1684 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #983: GFLOPs: 6823.4206. Time: 63.7989 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #984: GFLOPs: 6860.1709. Time: 63.4572 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #985: GFLOPs: 6723.9223. Time: 64.7430 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #986: GFLOPs: 6801.7684. Time: 64.0020 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #987: GFLOPs: 6772.3844. Time: 64.2797 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #988: GFLOPs: 6808.4083. Time: 63.9396 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #989: GFLOPs: 6887.9803. Time: 63.2010 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #990: GFLOPs: 6750.1239. Time: 64.4917 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #991: GFLOPs: 6815.9956. Time: 63.8684 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #992: GFLOPs: 6792.1996. Time: 64.0922 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #993: GFLOPs: 6945.1112. Time: 62.6811 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #994: GFLOPs: 6910.3467. Time: 62.9964 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #995: GFLOPs: 6905.7223. Time: 63.0386 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #996: GFLOPs: 6808.7878. Time: 63.9360 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #997: GFLOPs: 6949.0588. Time: 62.6455 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #998: GFLOPs: 6860.1814. Time: 63.4571 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #999: GFLOPs: 6936.1966. Time: 62.7616 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1000: GFLOPs: 6904.0686. Time: 63.0537 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1001: GFLOPs: 6847.0799. Time: 63.5785 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1002: GFLOPs: 6778.2038. Time: 64.2245 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1003: GFLOPs: 6812.2818. Time: 63.9033 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1004: GFLOPs: 6873.1476. Time: 63.3374 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1005: GFLOPs: 6809.9097. Time: 63.9255 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1006: GFLOPs: 6809.6920. Time: 63.9276 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1007: GFLOPs: 6814.6515. Time: 63.8810 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1008: GFLOPs: 6796.2926. Time: 64.0536 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1009: GFLOPs: 6873.2784. Time: 63.3361 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1010: GFLOPs: 6859.4708. Time: 63.4636 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1011: GFLOPs: 6775.4624. Time: 64.2505 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1012: GFLOPs: 6733.7027. Time: 64.6490 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1013: GFLOPs: 6839.1288. Time: 63.6524 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1014: GFLOPs: 6870.4338. Time: 63.3624 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1015: GFLOPs: 6816.9478. Time: 63.8595 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1016: GFLOPs: 6852.7189. Time: 63.5262 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1017: GFLOPs: 6903.9974. Time: 63.0543 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1018: GFLOPs: 6680.1698. Time: 65.1671 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1019: GFLOPs: 6692.0771. Time: 65.0511 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1020: GFLOPs: 6839.6927. Time: 63.6472 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1021: GFLOPs: 727.5755. Time: 598.3255 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1022: GFLOPs: 121.6850. Time: 3577.4904 us. Best GFLOPs: 7036.0033
2024-04-29 01:37:40 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1023: GFLOPs: 50.3428. Time: 8647.2530 us. Best GFLOPs: 7036.0033
2024-04-29 01:52:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:52:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:52:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:52:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:52:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:52:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1614 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:52:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:52:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2424 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:53:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2828 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:53:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 3232 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:53:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 3632 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:53:11 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2024-04-29 01:53:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:53:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:54:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 158 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:54:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 01:54:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0269  1.0250  1.0209  1.0064  0.9849  0.9840  0.9837  0.9832  0.9825  0.9820  0.9805  0.9794  0.9794  0.9792  0.9792  0.9792
[17 : 32]:	0.9789  0.9786  0.9780  0.9773  0.9762  0.9760  0.9756  0.9756  0.9755  0.9754  0.9754  0.9754  0.9748  0.9745  0.9741  0.9739
[33 : 48]:	0.9739  0.9737  0.9733  0.9732  0.9729  0.9720  0.9719  0.9717  0.9710  0.9701  0.9695  0.9695  0.9686  0.9681  0.9678  0.9675
[49 : 64]:	0.9673  0.9671  0.9670  0.9670  0.9668  0.9667  0.9665  0.9653  0.9651  0.9651  0.9649  0.9649  0.9648  0.9648  0.9647  0.9647
2024-04-29 01:54:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:54:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1024: GFLOPs: 429.7032. Time: 1013.0876 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1025: GFLOPs: 79.3391. Time: 5486.9152 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1026: GFLOPs: 473.2960. Time: 919.7775 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1027: GFLOPs: 491.0609. Time: 886.5031 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1028: GFLOPs: 6807.9873. Time: 63.9436 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1029: GFLOPs: 6797.3719. Time: 64.0434 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1030: GFLOPs: 6871.2961. Time: 63.3544 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1031: GFLOPs: 6872.8912. Time: 63.3397 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1032: GFLOPs: 6872.7614. Time: 63.3409 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1033: GFLOPs: 6898.0262. Time: 63.1089 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1034: GFLOPs: 6889.2300. Time: 63.1895 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1035: GFLOPs: 6876.2920. Time: 63.3084 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1036: GFLOPs: 6865.4875. Time: 63.4080 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1037: GFLOPs: 6847.6242. Time: 63.5734 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1038: GFLOPs: 6868.9884. Time: 63.3757 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1039: GFLOPs: 6848.1733. Time: 63.5683 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1040: GFLOPs: 76.2501. Time: 5709.1984 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1041: GFLOPs: 6801.2797. Time: 64.0066 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1042: GFLOPs: 6877.1169. Time: 63.3008 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1043: GFLOPs: 6801.8115. Time: 64.0016 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1044: GFLOPs: 6785.2881. Time: 64.1575 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1045: GFLOPs: 6859.3130. Time: 63.4651 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1046: GFLOPs: 6832.0644. Time: 63.7182 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1047: GFLOPs: 6726.7045. Time: 64.7162 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1048: GFLOPs: 6946.4883. Time: 62.6686 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1049: GFLOPs: 6771.2687. Time: 64.2903 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1050: GFLOPs: 6924.9356. Time: 62.8637 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1051: GFLOPs: 6958.8427. Time: 62.5574 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1052: GFLOPs: 6941.3910. Time: 62.7147 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1053: GFLOPs: 6788.7619. Time: 64.1246 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1054: GFLOPs: 6833.4460. Time: 63.7053 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1055: GFLOPs: 6852.7840. Time: 63.5256 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1056: GFLOPs: 6908.3328. Time: 63.0148 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1057: GFLOPs: 6861.0729. Time: 63.4488 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1058: GFLOPs: 6930.2671. Time: 62.8153 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1059: GFLOPs: 6871.0030. Time: 63.3571 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1060: GFLOPs: 6757.4641. Time: 64.4216 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1061: GFLOPs: 6707.9817. Time: 64.8969 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1062: GFLOPs: 6820.4735. Time: 63.8265 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1063: GFLOPs: 6920.6672. Time: 62.9025 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1064: GFLOPs: 6921.5028. Time: 62.8949 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1065: GFLOPs: 6822.6322. Time: 63.8063 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1066: GFLOPs: 6949.7932. Time: 62.6388 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1067: GFLOPs: 6933.2364. Time: 62.7884 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1068: GFLOPs: 6843.2187. Time: 63.6144 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1069: GFLOPs: 6829.6620. Time: 63.7406 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1070: GFLOPs: 6839.8228. Time: 63.6459 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1071: GFLOPs: 6777.6779. Time: 64.2295 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1072: GFLOPs: 6796.1548. Time: 64.0549 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1073: GFLOPs: 6761.0635. Time: 64.3874 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1074: GFLOPs: 6851.2313. Time: 63.5400 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1075: GFLOPs: 6845.5582. Time: 63.5926 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1076: GFLOPs: 6752.6138. Time: 64.4679 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1077: GFLOPs: 6751.1282. Time: 64.4821 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1078: GFLOPs: 6797.5866. Time: 64.0414 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1079: GFLOPs: 6804.3924. Time: 63.9773 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1080: GFLOPs: 6770.3710. Time: 64.2988 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1081: GFLOPs: 6768.8117. Time: 64.3136 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1082: GFLOPs: 6708.2092. Time: 64.8947 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1083: GFLOPs: 6718.5808. Time: 64.7945 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1084: GFLOPs: 6711.3973. Time: 64.8638 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1085: GFLOPs: 693.9667. Time: 627.3024 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1086: GFLOPs: 2667.0807. Time: 163.2223 us. Best GFLOPs: 7036.0033
2024-04-29 01:55:43 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1087: GFLOPs: 408.1385. Time: 1066.6158 us. Best GFLOPs: 7036.0033
2024-04-29 02:14:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:14:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:14:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:14:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:14:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1214 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:14:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1617 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:15:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:15:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:15:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2825 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:15:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 3226 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:15:17 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 02:15:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 166 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:15:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:16:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:16:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:16:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2582  1.2049  1.1703  1.1607  1.1573  1.1563  1.1559  1.1529  1.1505  1.1502  1.1443  1.1347  1.1216  1.1120  1.1082  0.9923
[17 : 32]:	0.9922  0.9920  0.9885  0.9882  0.9866  0.9853  0.9847  0.9847  0.9844  0.9838  0.9835  0.9820  0.9811  0.9811  0.9811  0.9805
[33 : 48]:	0.9802  0.9792  0.9788  0.9783  0.9783  0.9781  0.9779  0.9778  0.9778  0.9765  0.9764  0.9761  0.9743  0.9738  0.9738  0.9738
[49 : 64]:	0.9728  0.9715  0.9710  0.9707  0.9705  0.9704  0.9702  0.9699  0.9697  0.9694  0.9693  0.9693  0.9692  0.9691  0.9690  0.9687
2024-04-29 02:16:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:16:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1088: GFLOPs: 3971.8943. Time: 109.6019 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1089: GFLOPs: 3636.4809. Time: 119.7111 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1090: GFLOPs: 3663.4500. Time: 118.8298 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1091: GFLOPs: 4839.3123. Time: 89.9564 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1092: GFLOPs: 3544.5830. Time: 122.8147 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1093: GFLOPs: 4851.2370. Time: 89.7353 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1094: GFLOPs: 4851.3484. Time: 89.7332 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1095: GFLOPs: 3204.6366. Time: 135.8429 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1096: GFLOPs: 4827.5631. Time: 90.1753 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1097: GFLOPs: 4828.0913. Time: 90.1654 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1098: GFLOPs: 3330.2436. Time: 130.7193 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1099: GFLOPs: 3385.6488. Time: 128.5801 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1100: GFLOPs: 4804.8468. Time: 90.6016 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1101: GFLOPs: 4804.4798. Time: 90.6086 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1102: GFLOPs: 4782.0470. Time: 91.0336 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1103: GFLOPs: 6953.1012. Time: 62.6090 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1104: GFLOPs: 6953.8957. Time: 62.6019 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1105: GFLOPs: 6945.6817. Time: 62.6759 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1106: GFLOPs: 6906.6452. Time: 63.0302 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1107: GFLOPs: 6943.8752. Time: 62.6922 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1108: GFLOPs: 7020.6041. Time: 62.0071 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1109: GFLOPs: 6949.2365. Time: 62.6439 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1110: GFLOPs: 6949.2204. Time: 62.6440 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1111: GFLOPs: 6963.4088. Time: 62.5164 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1112: GFLOPs: 6915.3943. Time: 62.9504 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1113: GFLOPs: 6998.8534. Time: 62.1998 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1114: GFLOPs: 6907.9384. Time: 63.0184 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1115: GFLOPs: 6912.5854. Time: 62.9760 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1116: GFLOPs: 6958.2684. Time: 62.5625 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1117: GFLOPs: 6938.9647. Time: 62.7366 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1118: GFLOPs: 6975.4057. Time: 62.4088 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1119: GFLOPs: 6946.4004. Time: 62.6694 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1120: GFLOPs: 6893.1653. Time: 63.1534 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1121: GFLOPs: 7017.5725. Time: 62.0338 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1122: GFLOPs: 6877.6219. Time: 63.2961 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1123: GFLOPs: 6949.3202. Time: 62.6431 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1124: GFLOPs: 6957.2242. Time: 62.5719 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1125: GFLOPs: 6924.9325. Time: 62.8637 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1126: GFLOPs: 6854.6701. Time: 63.5081 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1127: GFLOPs: 6930.2231. Time: 62.8157 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1128: GFLOPs: 6958.3236. Time: 62.5620 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1129: GFLOPs: 6921.4729. Time: 62.8951 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1130: GFLOPs: 6942.0865. Time: 62.7084 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1131: GFLOPs: 6928.7680. Time: 62.8289 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1132: GFLOPs: 6770.8517. Time: 64.2943 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1133: GFLOPs: 6825.8592. Time: 63.7761 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1134: GFLOPs: 6827.7819. Time: 63.7582 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1135: GFLOPs: 6842.1361. Time: 63.6244 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1136: GFLOPs: 6942.3099. Time: 62.7064 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1137: GFLOPs: 6786.0977. Time: 64.1498 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1138: GFLOPs: 6774.5165. Time: 64.2595 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1139: GFLOPs: 6864.6607. Time: 63.4157 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1140: GFLOPs: 6817.7008. Time: 63.8525 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1141: GFLOPs: 6762.8549. Time: 64.3703 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1142: GFLOPs: 6789.1488. Time: 64.1210 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1143: GFLOPs: 6779.9318. Time: 64.2082 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1144: GFLOPs: 6781.2906. Time: 64.1953 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1145: GFLOPs: 6814.4097. Time: 63.8833 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1146: GFLOPs: 6918.6979. Time: 62.9204 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1147: GFLOPs: 6945.9154. Time: 62.6738 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1148: GFLOPs: 6804.2287. Time: 63.9789 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1149: GFLOPs: 1444.9199. Time: 301.2810 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1150: GFLOPs: 2235.9276. Time: 194.6964 us. Best GFLOPs: 7036.0033
2024-04-29 02:17:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1151: GFLOPs: 1154.2096. Time: 377.1646 us. Best GFLOPs: 7036.0033
2024-04-29 02:36:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:37:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:37:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:37:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:37:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:37:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1602 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:37:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2006 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:37:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2408 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:37:34 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 02:37:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:38:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:38:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 190 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:38:44 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 167 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:38:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0614  1.0473  1.0340  1.0329  1.0320  1.0304  1.0300  1.0291  1.0286  1.0261  1.0225  1.0214  1.0207  1.0187  1.0160  1.0105
[17 : 32]:	1.0086  1.0081  1.0078  1.0050  0.9972  0.9972  0.9963  0.9935  0.9933  0.9916  0.9916  0.9901  0.9887  0.9886  0.9885  0.9883
[33 : 48]:	0.9868  0.9840  0.9839  0.9836  0.9836  0.9828  0.9827  0.9826  0.9825  0.9825  0.9823  0.9821  0.9819  0.9810  0.9807  0.9790
[49 : 64]:	0.9783  0.9778  0.9765  0.9764  0.9763  0.9759  0.9753  0.9749  0.9747  0.9747  0.9741  0.9723  0.9720  0.9717  0.9717  0.9716
2024-04-29 02:38:49 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:38:49 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1152: GFLOPs: 6868.1671. Time: 63.3833 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1153: GFLOPs: 6895.5614. Time: 63.1315 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1154: GFLOPs: 6848.9511. Time: 63.5611 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1155: GFLOPs: 6895.4216. Time: 63.1328 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1156: GFLOPs: 6930.5884. Time: 62.8124 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1157: GFLOPs: 6722.7370. Time: 64.7544 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1158: GFLOPs: 6795.2789. Time: 64.0632 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1159: GFLOPs: 6872.4576. Time: 63.3437 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1160: GFLOPs: 6868.1817. Time: 63.3831 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1161: GFLOPs: 6647.0452. Time: 65.4918 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1162: GFLOPs: 6833.1018. Time: 63.7085 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1163: GFLOPs: 6963.1774. Time: 62.5184 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1164: GFLOPs: 6790.0288. Time: 64.1127 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1165: GFLOPs: 6455.9433. Time: 67.4304 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1166: GFLOPs: 6845.9367. Time: 63.5891 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1167: GFLOPs: 6607.9103. Time: 65.8797 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1168: GFLOPs: 6722.1589. Time: 64.7600 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1169: GFLOPs: 6764.6393. Time: 64.3533 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1170: GFLOPs: 6632.0276. Time: 65.6401 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1171: GFLOPs: 6966.1097. Time: 62.4921 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1172: GFLOPs: 6641.8515. Time: 65.5430 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1173: GFLOPs: 6515.2694. Time: 66.8164 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1174: GFLOPs: 6573.5171. Time: 66.2244 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1175: GFLOPs: 6962.1151. Time: 62.5280 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1176: GFLOPs: 6806.8674. Time: 63.9541 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1177: GFLOPs: 6894.6886. Time: 63.1395 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1178: GFLOPs: 6894.3560. Time: 63.1425 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1179: GFLOPs: 6970.7623. Time: 62.4504 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1180: GFLOPs: 6943.0342. Time: 62.6998 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1181: GFLOPs: 6962.8233. Time: 62.5216 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1182: GFLOPs: 6787.5585. Time: 64.1360 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1183: GFLOPs: 6975.5469. Time: 62.4076 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1184: GFLOPs: 6953.0946. Time: 62.6091 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1185: GFLOPs: 6970.9668. Time: 62.4486 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1186: GFLOPs: 6933.1243. Time: 62.7894 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1187: GFLOPs: 6934.1333. Time: 62.7803 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1188: GFLOPs: 6935.2747. Time: 62.7700 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1189: GFLOPs: 6965.9924. Time: 62.4932 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1190: GFLOPs: 6932.7733. Time: 62.7926 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1191: GFLOPs: 6869.6087. Time: 63.3700 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1192: GFLOPs: 6994.7423. Time: 62.2363 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1193: GFLOPs: 6976.7463. Time: 62.3968 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1194: GFLOPs: 6963.6484. Time: 62.5142 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1195: GFLOPs: 6944.4138. Time: 62.6874 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1196: GFLOPs: 6960.6051. Time: 62.5415 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1197: GFLOPs: 6894.5311. Time: 63.1409 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1198: GFLOPs: 6961.9826. Time: 62.5292 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1199: GFLOPs: 6914.9013. Time: 62.9549 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1200: GFLOPs: 6930.3112. Time: 62.8149 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1201: GFLOPs: 6923.0912. Time: 62.8804 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1202: GFLOPs: 6882.3590. Time: 63.2526 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1203: GFLOPs: 6920.7550. Time: 62.9017 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1204: GFLOPs: 6931.8991. Time: 62.8005 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1205: GFLOPs: 6838.4419. Time: 63.6588 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1206: GFLOPs: 6944.4953. Time: 62.6866 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1207: GFLOPs: 6920.2754. Time: 62.9060 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1208: GFLOPs: 6602.5319. Time: 65.9333 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1209: GFLOPs: 6925.4638. Time: 62.8589 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1210: GFLOPs: 6904.9453. Time: 63.0457 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1211: GFLOPs: 6840.9467. Time: 63.6355 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1212: GFLOPs: 6831.6800. Time: 63.7218 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1213: GFLOPs: 221.5568. Time: 1964.8553 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1214: GFLOPs: 46.8931. Time: 9283.3980 us. Best GFLOPs: 7036.0033
2024-04-29 02:40:11 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1215: GFLOPs: 2299.3785. Time: 189.3238 us. Best GFLOPs: 7036.0033
2024-04-29 02:50:23 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:50:25 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:50:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:50:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:50:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1204 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:50:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:50:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2011 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:50:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:51:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:51:03 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 02:51:19 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:51:36 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 175 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:51:55 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:52:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 02:52:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9948  0.9920  0.9913  0.9912  0.9892  0.9880  0.9872  0.9867  0.9865  0.9862  0.9861  0.9860  0.9859  0.9853  0.9852  0.9850
[17 : 32]:	0.9844  0.9839  0.9837  0.9835  0.9834  0.9823  0.9811  0.9811  0.9806  0.9806  0.9803  0.9803  0.9802  0.9800  0.9799  0.9797
[33 : 48]:	0.9797  0.9795  0.9789  0.9784  0.9769  0.9769  0.9768  0.9768  0.9766  0.9760  0.9759  0.9755  0.9747  0.9747  0.9747  0.9740
[49 : 64]:	0.9734  0.9726  0.9723  0.9721  0.9718  0.9714  0.9713  0.9706  0.9702  0.9702  0.9701  0.9700  0.9700  0.9695  0.9690  0.9688
2024-04-29 02:52:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:52:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1216: GFLOPs: 6957.3255. Time: 62.5710 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1217: GFLOPs: 6812.1402. Time: 63.9046 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1218: GFLOPs: 6831.8498. Time: 63.7202 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1219: GFLOPs: 6812.1092. Time: 63.9049 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1220: GFLOPs: 6885.6268. Time: 63.2226 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1221: GFLOPs: 6923.5823. Time: 62.8760 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1222: GFLOPs: 6892.4212. Time: 63.1602 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1223: GFLOPs: 6936.5364. Time: 62.7586 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1224: GFLOPs: 6777.1692. Time: 64.2343 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1225: GFLOPs: 6886.7955. Time: 63.2118 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1226: GFLOPs: 6835.9237. Time: 63.6822 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1227: GFLOPs: 6864.4906. Time: 63.4172 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1228: GFLOPs: 6827.3535. Time: 63.7622 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1229: GFLOPs: 6910.2093. Time: 62.9977 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1230: GFLOPs: 6925.9059. Time: 62.8549 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1231: GFLOPs: 6931.1050. Time: 62.8077 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1232: GFLOPs: 6958.5779. Time: 62.5598 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1233: GFLOPs: 6886.1501. Time: 63.2178 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1234: GFLOPs: 6924.9766. Time: 62.8633 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1235: GFLOPs: 6950.4108. Time: 62.6333 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1236: GFLOPs: 6876.3076. Time: 63.3082 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1237: GFLOPs: 6931.0788. Time: 62.8080 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1238: GFLOPs: 6894.0951. Time: 63.1449 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1239: GFLOPs: 6927.7751. Time: 62.8379 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1240: GFLOPs: 6964.2863. Time: 62.5085 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1241: GFLOPs: 6934.2376. Time: 62.7794 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1242: GFLOPs: 6908.2446. Time: 63.0156 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1243: GFLOPs: 6922.6027. Time: 62.8849 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1244: GFLOPs: 6969.2010. Time: 62.4644 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1245: GFLOPs: 6929.8353. Time: 62.8192 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1246: GFLOPs: 6953.4103. Time: 62.6063 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1247: GFLOPs: 6924.7152. Time: 62.8657 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1248: GFLOPs: 6917.3207. Time: 62.9329 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1249: GFLOPs: 7018.5563. Time: 62.0251 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1250: GFLOPs: 6922.5588. Time: 62.8853 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1251: GFLOPs: 6935.1432. Time: 62.7712 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1252: GFLOPs: 6934.3089. Time: 62.7787 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1253: GFLOPs: 6920.8435. Time: 62.9009 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1254: GFLOPs: 6916.2251. Time: 62.9429 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1255: GFLOPs: 6906.8544. Time: 63.0283 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1256: GFLOPs: 6887.4946. Time: 63.2054 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1257: GFLOPs: 6927.1815. Time: 62.8433 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1258: GFLOPs: 6964.0625. Time: 62.5105 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1259: GFLOPs: 6892.1141. Time: 63.1631 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1260: GFLOPs: 6856.4913. Time: 63.4912 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1261: GFLOPs: 6945.4311. Time: 62.6782 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1262: GFLOPs: 6828.2521. Time: 63.7538 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1263: GFLOPs: 6845.3405. Time: 63.5946 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1264: GFLOPs: 6829.6994. Time: 63.7403 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1265: GFLOPs: 6849.8295. Time: 63.5530 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1266: GFLOPs: 6816.8530. Time: 63.8604 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1267: GFLOPs: 6933.4754. Time: 62.7863 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1268: GFLOPs: 6857.5762. Time: 63.4812 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1269: GFLOPs: 6809.0967. Time: 63.9331 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1270: GFLOPs: 6762.2712. Time: 64.3759 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1271: GFLOPs: 6859.7935. Time: 63.4607 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1272: GFLOPs: 6856.8388. Time: 63.4880 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1273: GFLOPs: 6822.4224. Time: 63.8083 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1274: GFLOPs: 6781.2917. Time: 64.1953 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1275: GFLOPs: 6876.6228. Time: 63.3053 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1276: GFLOPs: 6836.1046. Time: 63.6806 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1277: GFLOPs: 2809.9585. Time: 154.9229 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1278: GFLOPs: 806.2315. Time: 539.9528 us. Best GFLOPs: 7036.0033
2024-04-29 02:53:36 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1279: GFLOPs: 239.3912. Time: 1818.4751 us. Best GFLOPs: 7036.0033
2024-04-29 03:14:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:14:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:14:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:14:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:14:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:14:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1596 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:14:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2002 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:14:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:14:41 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 03:14:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:15:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 177 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:15:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 162 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:15:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 180 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:15:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0144  1.0092  0.9934  0.9930  0.9917  0.9910  0.9905  0.9905  0.9898  0.9893  0.9886  0.9886  0.9882  0.9881  0.9880  0.9880
[17 : 32]:	0.9877  0.9870  0.9868  0.9865  0.9858  0.9857  0.9852  0.9848  0.9847  0.9845  0.9845  0.9841  0.9829  0.9823  0.9822  0.9816
[33 : 48]:	0.9814  0.9812  0.9800  0.9788  0.9787  0.9786  0.9786  0.9784  0.9783  0.9782  0.9779  0.9778  0.9778  0.9777  0.9771  0.9771
[49 : 64]:	0.9770  0.9769  0.9765  0.9764  0.9758  0.9751  0.9751  0.9750  0.9748  0.9734  0.9725  0.9724  0.9723  0.9721  0.9718  0.9718
2024-04-29 03:15:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:15:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1280: GFLOPs: 6683.9278. Time: 65.1304 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1281: GFLOPs: 6927.5529. Time: 62.8399 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1282: GFLOPs: 6917.7538. Time: 62.9289 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1283: GFLOPs: 6889.2639. Time: 63.1892 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1284: GFLOPs: 6912.4101. Time: 62.9776 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1285: GFLOPs: 6907.2082. Time: 63.0250 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1286: GFLOPs: 6888.9605. Time: 63.1920 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1287: GFLOPs: 6856.7952. Time: 63.4884 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1288: GFLOPs: 6856.7952. Time: 63.4884 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1289: GFLOPs: 6838.9468. Time: 63.6541 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1290: GFLOPs: 6850.9676. Time: 63.5424 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1291: GFLOPs: 6929.5376. Time: 62.8219 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1292: GFLOPs: 7025.9460. Time: 61.9599 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1293: GFLOPs: 6971.5524. Time: 62.4433 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1294: GFLOPs: 6976.8288. Time: 62.3961 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1295: GFLOPs: 6963.8095. Time: 62.5128 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1296: GFLOPs: 6959.9828. Time: 62.5471 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1297: GFLOPs: 6960.0364. Time: 62.5467 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1298: GFLOPs: 722.2712. Time: 602.7195 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1299: GFLOPs: 6795.4366. Time: 64.0617 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1300: GFLOPs: 6807.5178. Time: 63.9480 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1301: GFLOPs: 6848.9516. Time: 63.5611 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1302: GFLOPs: 6906.2734. Time: 63.0336 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1303: GFLOPs: 6955.0436. Time: 62.5916 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1304: GFLOPs: 6974.3592. Time: 62.4182 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1305: GFLOPs: 6921.7669. Time: 62.8925 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1306: GFLOPs: 6948.0396. Time: 62.6546 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1307: GFLOPs: 6889.9780. Time: 63.1826 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1308: GFLOPs: 6910.1216. Time: 62.9985 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1309: GFLOPs: 6963.9880. Time: 62.5112 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1310: GFLOPs: 6943.3184. Time: 62.6973 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1311: GFLOPs: 6964.3888. Time: 62.5076 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1312: GFLOPs: 6888.9318. Time: 63.1922 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1313: GFLOPs: 6844.4512. Time: 63.6029 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1314: GFLOPs: 6766.3889. Time: 64.3367 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1315: GFLOPs: 6895.2121. Time: 63.1347 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1316: GFLOPs: 6768.2458. Time: 64.3190 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1317: GFLOPs: 6898.0862. Time: 63.1084 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1318: GFLOPs: 6881.2283. Time: 63.2630 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1319: GFLOPs: 6895.3580. Time: 63.1333 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1320: GFLOPs: 6857.0566. Time: 63.4860 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1321: GFLOPs: 6882.9705. Time: 63.2470 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1322: GFLOPs: 6353.0128. Time: 68.5229 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1323: GFLOPs: 6939.0968. Time: 62.7354 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1324: GFLOPs: 6967.6503. Time: 62.4783 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1325: GFLOPs: 6829.9324. Time: 63.7381 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1326: GFLOPs: 6871.8503. Time: 63.3493 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1327: GFLOPs: 6870.4898. Time: 63.3619 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1328: GFLOPs: 6950.5046. Time: 62.6324 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1329: GFLOPs: 6903.8877. Time: 63.0553 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1330: GFLOPs: 6870.6087. Time: 63.3608 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1331: GFLOPs: 6887.4326. Time: 63.2060 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1332: GFLOPs: 6806.8762. Time: 63.9540 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1333: GFLOPs: 6914.0775. Time: 62.9624 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1334: GFLOPs: 6790.9997. Time: 64.1035 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1335: GFLOPs: 6906.3171. Time: 63.0332 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1336: GFLOPs: 6839.7439. Time: 63.6467 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1337: GFLOPs: 6803.1190. Time: 63.9893 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1338: GFLOPs: 6778.0599. Time: 64.2259 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1339: GFLOPs: 6882.4455. Time: 63.2518 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1340: GFLOPs: 6828.1930. Time: 63.7543 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1341: GFLOPs: 1871.9374. Time: 232.5542 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1342: GFLOPs: 2598.5173. Time: 167.5290 us. Best GFLOPs: 7036.0033
2024-04-29 03:17:15 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1343: GFLOPs: 1855.4255. Time: 234.6238 us. Best GFLOPs: 7036.0033
2024-04-29 03:27:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:27:55 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:28:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 810 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1617 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2020 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 3222 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:28:38 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2024-04-29 03:28:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 176 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:29:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 161 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:29:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 156 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:29:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 186 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:29:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9918  0.9887  0.9887  0.9872  0.9871  0.9852  0.9849  0.9835  0.9823  0.9822  0.9819  0.9818  0.9812  0.9808  0.9806  0.9804
[17 : 32]:	0.9803  0.9800  0.9789  0.9776  0.9769  0.9762  0.9759  0.9753  0.9753  0.9752  0.9748  0.9748  0.9747  0.9740  0.9737  0.9736
[33 : 48]:	0.9732  0.9727  0.9725  0.9725  0.9724  0.9722  0.9722  0.9720  0.9720  0.9720  0.9720  0.9707  0.9699  0.9697  0.9697  0.9697
[49 : 64]:	0.9691  0.9683  0.9677  0.9677  0.9674  0.9673  0.9673  0.9668  0.9668  0.9667  0.9665  0.9663  0.9663  0.9661  0.9660  0.9659
2024-04-29 03:29:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:29:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1344: GFLOPs: 6920.4373. Time: 62.9045 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1345: GFLOPs: 6882.4561. Time: 63.2517 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1346: GFLOPs: 6840.1318. Time: 63.6431 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1347: GFLOPs: 6923.2210. Time: 62.8793 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1348: GFLOPs: 6888.7990. Time: 63.1934 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1349: GFLOPs: 6856.0232. Time: 63.4956 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1350: GFLOPs: 6872.9345. Time: 63.3393 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1351: GFLOPs: 6877.1121. Time: 63.3008 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1352: GFLOPs: 6895.0814. Time: 63.1359 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1353: GFLOPs: 6791.0503. Time: 64.1030 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1354: GFLOPs: 6811.0149. Time: 63.9151 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1355: GFLOPs: 6811.6406. Time: 63.9093 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1356: GFLOPs: 6865.3896. Time: 63.4089 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1357: GFLOPs: 6869.0483. Time: 63.3752 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1358: GFLOPs: 6848.4750. Time: 63.5655 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1359: GFLOPs: 6877.4576. Time: 63.2977 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1360: GFLOPs: 6868.6381. Time: 63.3789 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1361: GFLOPs: 6853.6025. Time: 63.5180 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1362: GFLOPs: 6741.5835. Time: 64.5734 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1363: GFLOPs: 6948.6030. Time: 62.6496 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1364: GFLOPs: 6959.8598. Time: 62.5482 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1365: GFLOPs: 6854.8866. Time: 63.5061 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1366: GFLOPs: 6829.6994. Time: 63.7403 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1367: GFLOPs: 6892.7772. Time: 63.1570 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1368: GFLOPs: 6894.2079. Time: 63.1439 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1369: GFLOPs: 6908.4224. Time: 63.0139 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1370: GFLOPs: 6852.5223. Time: 63.5280 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1371: GFLOPs: 6894.8193. Time: 63.1383 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1372: GFLOPs: 6928.7843. Time: 62.8288 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1373: GFLOPs: 6949.0437. Time: 62.6456 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1374: GFLOPs: 6893.9894. Time: 63.1459 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1375: GFLOPs: 6849.3046. Time: 63.5578 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1376: GFLOPs: 6840.8229. Time: 63.6366 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1377: GFLOPs: 6963.8243. Time: 62.5126 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1378: GFLOPs: 6779.9120. Time: 64.2084 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1379: GFLOPs: 6730.6272. Time: 64.6785 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1380: GFLOPs: 6911.2849. Time: 62.9879 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1381: GFLOPs: 6969.7313. Time: 62.4596 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1382: GFLOPs: 6844.9748. Time: 63.5980 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1383: GFLOPs: 6825.9569. Time: 63.7752 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1384: GFLOPs: 6818.4205. Time: 63.8457 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1385: GFLOPs: 6883.7576. Time: 63.2397 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1386: GFLOPs: 6837.6665. Time: 63.6660 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1387: GFLOPs: 6757.9100. Time: 64.4174 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1388: GFLOPs: 6786.7710. Time: 64.1435 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1389: GFLOPs: 6877.7085. Time: 63.2954 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1390: GFLOPs: 6878.1648. Time: 63.2912 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1391: GFLOPs: 6751.7590. Time: 64.4761 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1392: GFLOPs: 6737.8547. Time: 64.6091 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1393: GFLOPs: 6788.5446. Time: 64.1267 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1394: GFLOPs: 6973.2180. Time: 62.4284 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1395: GFLOPs: 6790.3576. Time: 64.1096 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1396: GFLOPs: 6879.2725. Time: 63.2810 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1397: GFLOPs: 6875.0794. Time: 63.3196 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1398: GFLOPs: 6972.4019. Time: 62.4357 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1399: GFLOPs: 6988.7540. Time: 62.2896 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1400: GFLOPs: 6970.2606. Time: 62.4549 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1401: GFLOPs: 6863.2224. Time: 63.4289 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1402: GFLOPs: 6948.8375. Time: 62.6475 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1403: GFLOPs: 6959.8015. Time: 62.5488 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1404: GFLOPs: 6968.4923. Time: 62.4708 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1405: GFLOPs: 468.8102. Time: 928.5783 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1406: GFLOPs: 57.5053. Time: 7570.2127 us. Best GFLOPs: 7036.0033
2024-04-29 03:31:13 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1407: GFLOPs: 1366.4405. Time: 318.5847 us. Best GFLOPs: 7036.0033
2024-04-29 03:41:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:41:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:41:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:41:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:41:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:41:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:41:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2008 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:41:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 2410 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:41:38 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-29 03:41:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 185 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:42:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:42:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:42:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f50068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7272118)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70a43e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f9908)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d84328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b24628)]: 156 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a4fe8)]: 0 failure(s)
2024-04-29 03:42:51 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9932  0.9931  0.9914  0.9911  0.9900  0.9896  0.9889  0.9889  0.9880  0.9879  0.9877  0.9874  0.9871  0.9871  0.9868  0.9868
[17 : 32]:	0.9863  0.9862  0.9857  0.9856  0.9845  0.9812  0.9812  0.9807  0.9801  0.9799  0.9793  0.9792  0.9791  0.9786  0.9786  0.9781
[33 : 48]:	0.9780  0.9778  0.9776  0.9772  0.9767  0.9763  0.9759  0.9757  0.9754  0.9754  0.9754  0.9752  0.9750  0.9747  0.9744  0.9743
[49 : 64]:	0.9740  0.9739  0.9735  0.9735  0.9732  0.9732  0.9730  0.9730  0.9724  0.9721  0.9719  0.9718  0.9716  0.9716  0.9715  0.9714
2024-04-29 03:42:51 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:42:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1408: GFLOPs: 6962.6011. Time: 62.5236 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1409: GFLOPs: 6923.8789. Time: 62.8733 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1410: GFLOPs: 6947.4352. Time: 62.6601 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1411: GFLOPs: 6858.5472. Time: 63.4722 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1412: GFLOPs: 6899.2304. Time: 63.0979 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1413: GFLOPs: 6901.8942. Time: 63.0736 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1414: GFLOPs: 6905.5621. Time: 63.0400 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1415: GFLOPs: 6913.3314. Time: 62.9692 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1416: GFLOPs: 6907.7115. Time: 63.0204 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1417: GFLOPs: 6942.9661. Time: 62.7004 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1418: GFLOPs: 6855.3208. Time: 63.5021 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1419: GFLOPs: 6903.9100. Time: 63.0551 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1420: GFLOPs: 6810.7694. Time: 63.9174 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1421: GFLOPs: 6858.4098. Time: 63.4735 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1422: GFLOPs: 6883.0578. Time: 63.2462 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1423: GFLOPs: 6883.1571. Time: 63.2452 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1424: GFLOPs: 6864.6175. Time: 63.4161 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1425: GFLOPs: 6884.4487. Time: 63.2334 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1426: GFLOPs: 6832.9276. Time: 63.7102 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1427: GFLOPs: 6884.5017. Time: 63.2329 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1428: GFLOPs: 6892.9863. Time: 63.1551 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1429: GFLOPs: 6890.8252. Time: 63.1749 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1430: GFLOPs: 6888.3251. Time: 63.1978 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1431: GFLOPs: 6952.6131. Time: 62.6134 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1432: GFLOPs: 6953.5425. Time: 62.6051 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1433: GFLOPs: 6883.5334. Time: 63.2418 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1434: GFLOPs: 6898.7890. Time: 63.1019 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1435: GFLOPs: 6976.2669. Time: 62.4011 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1436: GFLOPs: 6843.6462. Time: 63.6104 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1437: GFLOPs: 6961.4961. Time: 62.5335 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1438: GFLOPs: 6964.3973. Time: 62.5075 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1439: GFLOPs: 6821.0583. Time: 63.8210 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1440: GFLOPs: 6811.1119. Time: 63.9142 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1441: GFLOPs: 6967.9844. Time: 62.4753 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1442: GFLOPs: 6864.7477. Time: 63.4149 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1443: GFLOPs: 6838.7939. Time: 63.6555 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1444: GFLOPs: 6815.7838. Time: 63.8704 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1445: GFLOPs: 6798.4637. Time: 64.0331 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1446: GFLOPs: 6759.6146. Time: 64.4012 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1447: GFLOPs: 6931.0169. Time: 62.8085 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1448: GFLOPs: 6964.6611. Time: 62.5051 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1449: GFLOPs: 6845.2032. Time: 63.5959 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1450: GFLOPs: 6856.1407. Time: 63.4945 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1451: GFLOPs: 6786.6130. Time: 64.1450 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1452: GFLOPs: 6976.3168. Time: 62.4007 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1453: GFLOPs: 6908.7709. Time: 63.0108 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1454: GFLOPs: 6841.0332. Time: 63.6347 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1455: GFLOPs: 6890.9047. Time: 63.1741 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1456: GFLOPs: 6816.6768. Time: 63.8621 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1457: GFLOPs: 6885.0632. Time: 63.2277 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1458: GFLOPs: 6792.2165. Time: 64.0920 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1459: GFLOPs: 6756.5917. Time: 64.4300 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1460: GFLOPs: 6903.6389. Time: 63.0576 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1461: GFLOPs: 6823.6692. Time: 63.7966 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1462: GFLOPs: 6842.8100. Time: 63.6182 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1463: GFLOPs: 6876.9390. Time: 63.3024 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1464: GFLOPs: 6842.5430. Time: 63.6206 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1465: GFLOPs: 6830.6715. Time: 63.7312 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1466: GFLOPs: 6857.8968. Time: 63.4782 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1467: GFLOPs: 6708.1239. Time: 64.8955 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1468: GFLOPs: 6900.1704. Time: 63.0893 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1469: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(8) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) * T.int64(8) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(98) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(98) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(98) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98) // T.int64(49))
                                        v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(98) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(49))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(11)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(512))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128) // T.int64(64))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(49) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(2048))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(8), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(8) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) * T.int64(8) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(2) + ci_1 * T.int64(2) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(8), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(8) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused * T.int64(64) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) * T.int64(8) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[8, 8, 1, 8, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 1, 49, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 49, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 49, 4], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1470: GFLOPs: 1997.2692. Time: 217.9611 us. Best GFLOPs: 7036.0033
2024-04-29 03:44:38 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_6] Trial #1471: GFLOPs: 1136.1172. Time: 383.1708 us. Best GFLOPs: 7036.0033
