2024-04-28 19:50:01 [INFO] [task_scheduler.cc:160] Initializing Task #7: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4"
2024-04-28 19:50:01 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(30), T.int64(30)))
        input_tile = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(256), T.int64(30), T.int64(30)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(256), T.int64(196), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps, v_p % T.int64(14) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps, v_p % T.int64(14) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(256), T.int64(196), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(196), T.int64(256)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(512), T.int64(196), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-28 19:50:01 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 19:50:01 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax0)
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax2)
                            v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(28), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1792)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(448) // T.int64(112))
                                    v2 = T.axis.spatial(T.int64(256), ci_0 * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(112) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(8192))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(8192) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(256), ci_0 * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(256))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + ax0_ax1_ax2_ax3_fused % T.int64(256))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(16), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(32) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                    v_ci = T.axis.reduce(T.int64(256), ci_0 * T.int64(8) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(32), T.int64(7)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                            v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                            v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 4, 2, 16, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[14, 2, 1, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[32, 1, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-04-28 19:50:01 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax0)
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax2)
                            v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(28), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1792)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(448) // T.int64(112))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(112) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(8192))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(8192) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(256))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + ax0_ax1_ax2_ax3_fused % T.int64(256))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(16), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(32) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                    v_ci = T.axis.reduce(T.int64(256), ci_0_fused * T.int64(8) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(32), T.int64(7)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                            v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                            v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 4, 2, 16, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[14, 2, 1, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[32, 1, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-28 19:50:01 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax0)
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax2)
                            v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(28), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1792)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(448) // T.int64(112))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(112) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(8192))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(8192) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(256))
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + ax0_ax1_ax2_ax3_fused % T.int64(256))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(16), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(32) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                    v_ci = T.axis.reduce(T.int64(256), ci_0_fused * T.int64(8) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(32), T.int64(7)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(14) * T.int64(14) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                            v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                            v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 4, 2, 16, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[14, 2, 1, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[32, 1, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-28 20:06:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:06:50 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:06:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 502 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:07:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1006 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:07:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1510 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:07:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2005 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:07:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2504 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:07:26 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 20:07:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 157 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:07:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:08:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:08:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 131 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:08:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9991  0.9969  0.9967  0.9964  0.9958  0.9956  0.9955  0.9950  0.9942  0.9941  0.9937  0.9935  0.9935  0.9931  0.9923
[17 : 32]:	0.9921  0.9906  0.9905  0.9887  0.9887  0.9883  0.9882  0.9874  0.9874  0.9870  0.9867  0.9865  0.9863  0.9849  0.9841  0.9836
[33 : 48]:	0.9834  0.9833  0.9825  0.9823  0.9816  0.9806  0.9804  0.9802  0.9801  0.9788  0.9785  0.9781  0.9767  0.9765  0.9751  0.9746
[49 : 64]:	0.9743  0.9739  0.9736  0.9736  0.9721  0.9721  0.9719  0.9715  0.9706  0.9706  0.9702  0.9698  0.9694  0.9694  0.9684  0.9684
2024-04-28 20:08:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:08:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1: GFLOPs: 7243.7318. Time: 121.5795 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #2: GFLOPs: 2030.0947. Time: 433.8168 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #3: GFLOPs: 98.2360. Time: 8965.0344 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #4: GFLOPs: 97.3805. Time: 9043.7972 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #5: GFLOPs: 4345.0588. Time: 202.6875 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #6: GFLOPs: 5808.0137. Time: 151.6334 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #7: GFLOPs: 782.8740. Time: 1124.9436 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #8: GFLOPs: 2898.7364. Time: 303.8183 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #9: GFLOPs: 21.5394. Time: 40887.2960 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #10: GFLOPs: 4353.2139. Time: 202.3078 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #11: GFLOPs: 65.2039. Time: 13506.6880 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #12: GFLOPs: 60.4658. Time: 14565.0830 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #13: GFLOPs: 51.5081. Time: 17098.0695 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #14: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(112), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(56) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused % T.int64(56) // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(8) + co_3_init * T.int64(2) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(2) + p_3_init * T.int64(2) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(256), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(196))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(5)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(256))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(56) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused % T.int64(56) // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(8) + co_3 * T.int64(2) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(2) + p_3 * T.int64(2) + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(8), T.int64(2)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(56) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused % T.int64(56) // T.int64(7) * T.int64(16) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(8) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(2) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 2, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[4, 8, 2, 4, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 7, 7, 1, 2])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137, l138 = sch.split(loop=l135, factors=[None, 56, 2], preserve_unit_iters=True)
sch.vectorize(loop=l138)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l139, l140, l141, l142, l143 = sch.get_loops(block=b108)
l144, l145, l146 = sch.split(loop=l143, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l146)
sch.bind(loop=l145, thread_axis="threadIdx.x")
b147 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b147, ann_key="meta_schedule.unroll_explicit")
b148, b149, b150, b151, b152, b153, b154, b155, b156 = sch.get_child_blocks(b147)
l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b148)
l163, l164, l165, l166, l167, l168 = sch.get_loops(block=b149)
sch.annotate(block_or_loop=l163, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l163, ann_key="pragma_unroll_explicit", ann_val=1)
l169, l170, l171, l172, l173, l174 = sch.get_loops(block=b150)
l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b151)
l182, l183, l184, l185, l186, l187, l188 = sch.get_loops(block=b152)
l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l189, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l189, ann_key="pragma_unroll_explicit", ann_val=1)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b154)
l210, l211, l212, l213, l214, l215, l216, l217 = sch.get_loops(block=b155)
sch.annotate(block_or_loop=l210, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l210, ann_key="pragma_unroll_explicit", ann_val=1)
l218, l219, l220, l221 = sch.get_loops(block=b156)
b222 = sch.get_block(name="data_pack", func_name="main")
l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b222)
b229 = sch.decompose_reduction(block=b222, loop=l227)
b230 = sch.get_block(name="bgemm", func_name="main")
l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243, l244 = sch.get_loops(block=b230)
b245 = sch.decompose_reduction(block=b230, loop=l234)
b246 = sch.get_block(name="inverse", func_name="main")
l247, l248, l249, l250, l251, l252, l253, l254 = sch.get_loops(block=b246)
b255 = sch.decompose_reduction(block=b246, loop=l253)
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #15: GFLOPs: 169.5177. Time: 5195.2642 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #16: GFLOPs: 877.0898. Time: 1004.1037 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #17: GFLOPs: 277.5300. Time: 3173.3119 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #18: GFLOPs: 389.2520. Time: 2262.5166 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #19: GFLOPs: 29.3637. Time: 29992.4487 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #20: GFLOPs: 268.8273. Time: 3276.0403 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #21: GFLOPs: 163.6218. Time: 5382.4672 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #22: GFLOPs: 1843.6632. Time: 477.6844 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #23: GFLOPs: 426.0951. Time: 2066.8842 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #24: GFLOPs: 1754.5865. Time: 501.9354 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #25: GFLOPs: 3066.1928. Time: 287.2256 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #26: GFLOPs: 116.4160. Time: 7565.0193 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #27: GFLOPs: 79.5457. Time: 11071.4881 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #28: GFLOPs: 2000.3793. Time: 440.2611 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #29: GFLOPs: 3595.8209. Time: 244.9202 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #30: GFLOPs: 497.6220. Time: 1769.7953 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #31: GFLOPs: 77.1213. Time: 11419.5344 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #32: GFLOPs: 3362.4032. Time: 261.9225 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #33: GFLOPs: 322.6804. Time: 2729.2922 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #34: GFLOPs: 151.7509. Time: 5803.5202 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #35: GFLOPs: 158.3186. Time: 5562.7662 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #36: GFLOPs: 96.5833. Time: 9118.4407 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #37: GFLOPs: 119.0390. Time: 7398.3269 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #38: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(64), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(32) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(256), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(196))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2))
                                        v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(784))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(256))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(32) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(49)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(32) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 8, 32, 1, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137, l138 = sch.split(loop=l135, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l138)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l139, l140, l141, l142, l143 = sch.get_loops(block=b108)
l144, l145 = sch.split(loop=l143, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l145, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #39: GFLOPs: 1472.6196. Time: 598.0425 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #40: GFLOPs: 452.7714. Time: 1945.1077 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #41: GFLOPs: 249.7561. Time: 3526.1970 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #42: GFLOPs: 65.9698. Time: 13349.8877 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #43: GFLOPs: 60.4542. Time: 14567.8623 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #44: GFLOPs: 3532.8547. Time: 249.2854 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #45: GFLOPs: 27.1802. Time: 32401.9203 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #46: GFLOPs: 767.8065. Time: 1147.0196 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #47: GFLOPs: 46.6197. Time: 18890.9225 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #48: GFLOPs: 1625.2307. Time: 541.8856 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #49: GFLOPs: 648.1542. Time: 1358.7649 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #50: GFLOPs: 21.3387. Time: 41271.9777 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #51: GFLOPs: 205.3805. Time: 4288.0853 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #52: GFLOPs: 4924.0349. Time: 178.8552 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #53: GFLOPs: 339.5834. Time: 2593.4396 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #54: GFLOPs: 1596.5087. Time: 551.6344 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #55: GFLOPs: 294.9946. Time: 2985.4420 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #56: GFLOPs: 114.7332. Time: 7675.9769 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #57: GFLOPs: 80.5130. Time: 10938.4704 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #58: GFLOPs: 28.8498. Time: 30526.7200 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #59: GFLOPs: 676.4975. Time: 1301.8365 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #60: GFLOPs: 4605.0810. Time: 191.2429 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #61: GFLOPs: 60.2287. Time: 14622.4277 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #62: GFLOPs: 176.1728. Time: 4999.0082 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #63: GFLOPs: 237.2861. Time: 3711.5069 us. Best GFLOPs: 7243.7318
2024-04-28 20:24:06 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #64: GFLOPs: 235.0881. Time: 3746.2093 us. Best GFLOPs: 7243.7318
2024-04-28 20:43:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:43:32 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-28 20:43:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 446 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:43:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 884 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:43:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1327 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:43:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1766 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:44:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:44:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2638 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:44:09 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-04-28 20:44:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:44:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:45:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:45:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 20:45:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9911  0.9892  0.9885  0.9765  0.9765  0.9747  0.9747  0.9620  0.9610  0.9544  0.9525  0.9485  0.9483  0.9464  0.9403  0.9315
[17 : 32]:	0.9262  0.9219  0.9187  0.9157  0.9114  0.9090  0.9044  0.9038  0.9036  0.8991  0.8991  0.8970  0.8959  0.8945  0.8871  0.8857
[33 : 48]:	0.8849  0.8845  0.8843  0.8819  0.8816  0.8796  0.8796  0.8796  0.8796  0.8795  0.8787  0.8787  0.8787  0.8785  0.8785  0.8785
[49 : 64]:	0.8785  0.8785  0.8756  0.8729  0.8722  0.8722  0.8721  0.8720  0.8713  0.8708  0.8707  0.8681  0.8669  0.8667  0.8657  0.8656
2024-04-28 20:45:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:45:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #65: GFLOPs: 7229.8129. Time: 121.8135 us. Best GFLOPs: 7243.7318
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #66: GFLOPs: 7248.2566. Time: 121.5036 us. Best GFLOPs: 7248.2566
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #67: GFLOPs: 6998.7812. Time: 125.8346 us. Best GFLOPs: 7248.2566
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #68: GFLOPs: 7221.3319. Time: 121.9566 us. Best GFLOPs: 7248.2566
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #69: GFLOPs: 7227.5717. Time: 121.8513 us. Best GFLOPs: 7248.2566
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #70: GFLOPs: 7245.7311. Time: 121.5459 us. Best GFLOPs: 7248.2566
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #71: GFLOPs: 7280.2542. Time: 120.9696 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #72: GFLOPs: 4998.4012. Time: 176.1942 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #73: GFLOPs: 7191.2036. Time: 122.4676 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #74: GFLOPs: 7213.1354. Time: 122.0952 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #75: GFLOPs: 6419.1338. Time: 137.1975 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #76: GFLOPs: 7269.3291. Time: 121.1514 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #77: GFLOPs: 7065.2624. Time: 124.6506 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #78: GFLOPs: 7160.1308. Time: 122.9990 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #79: GFLOPs: 7226.2632. Time: 121.8734 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #80: GFLOPs: 7244.8146. Time: 121.5613 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #81: GFLOPs: 5272.8627. Time: 167.0230 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #82: GFLOPs: 7266.9177. Time: 121.1916 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #83: GFLOPs: 5041.6665. Time: 174.6822 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #84: GFLOPs: 5624.0343. Time: 156.5938 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #85: GFLOPs: 6022.1675. Time: 146.2412 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #86: GFLOPs: 5187.4207. Time: 169.7740 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #87: GFLOPs: 4668.3669. Time: 188.6504 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #88: GFLOPs: 5441.0415. Time: 161.8604 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #89: GFLOPs: 6333.0755. Time: 139.0618 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #90: GFLOPs: 4182.2351. Time: 210.5786 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #91: GFLOPs: 4190.3095. Time: 210.1728 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #92: GFLOPs: 5370.2893. Time: 163.9929 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #93: GFLOPs: 6537.4247. Time: 134.7150 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #94: GFLOPs: 4948.9476. Time: 177.9548 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #95: GFLOPs: 6549.6463. Time: 134.4636 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #96: GFLOPs: 4912.6341. Time: 179.2703 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #97: GFLOPs: 4716.7781. Time: 186.7141 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #98: GFLOPs: 5251.5899. Time: 167.6995 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #99: GFLOPs: 4865.5577. Time: 181.0048 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #100: GFLOPs: 6580.2152. Time: 133.8390 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #101: GFLOPs: 4942.3233. Time: 178.1934 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #102: GFLOPs: 4697.5690. Time: 187.4776 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #103: GFLOPs: 4728.5053. Time: 186.2511 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #104: GFLOPs: 4696.5190. Time: 187.5196 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #105: GFLOPs: 4912.2233. Time: 179.2852 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #106: GFLOPs: 5420.4472. Time: 162.4754 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #107: GFLOPs: 4869.6429. Time: 180.8529 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #108: GFLOPs: 4701.5842. Time: 187.3175 us. Best GFLOPs: 7280.2542
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #109: GFLOPs: 7613.1633. Time: 115.6798 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #110: GFLOPs: 4719.3418. Time: 186.6127 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #111: GFLOPs: 4717.9936. Time: 186.6660 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #112: GFLOPs: 4687.7656. Time: 187.8697 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #113: GFLOPs: 4837.5452. Time: 182.0529 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #114: GFLOPs: 4859.3083. Time: 181.2376 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #115: GFLOPs: 5913.2952. Time: 148.9337 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #116: GFLOPs: 4977.7047. Time: 176.9268 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #117: GFLOPs: 4754.1595. Time: 185.2460 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #118: GFLOPs: 4786.3599. Time: 183.9998 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #119: GFLOPs: 4627.9728. Time: 190.2970 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #120: GFLOPs: 4823.6611. Time: 182.5769 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #121: GFLOPs: 6602.3327. Time: 133.3906 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #122: GFLOPs: 5506.8987. Time: 159.9247 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #123: GFLOPs: 4525.9025. Time: 194.5886 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #124: GFLOPs: 4797.6454. Time: 183.5670 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #125: GFLOPs: 6511.4773. Time: 135.2518 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #126: GFLOPs: 4902.1625. Time: 179.6532 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #127: GFLOPs: 2360.1575. Time: 373.1485 us. Best GFLOPs: 7613.1633
2024-04-28 20:46:37 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #128: GFLOPs: 2931.4980. Time: 300.4229 us. Best GFLOPs: 7613.1633
2024-04-28 21:12:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:12:20 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:12:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:12:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:12:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:12:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:12:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1998 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:12:48 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-28 21:13:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:13:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:13:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:13:58 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:14:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2796  0.9853  0.9570  0.9568  0.9566  0.9556  0.9552  0.9545  0.9535  0.9530  0.9523  0.9513  0.9510  0.9506  0.9505  0.9502
[17 : 32]:	0.9490  0.9490  0.9462  0.9456  0.9454  0.9449  0.9419  0.9418  0.9415  0.9408  0.9392  0.9355  0.9321  0.9316  0.9280  0.9230
[33 : 48]:	0.9227  0.9216  0.9204  0.9198  0.9187  0.9179  0.9170  0.9163  0.9146  0.9145  0.9125  0.9112  0.9083  0.9080  0.9067  0.9063
[49 : 64]:	0.9051  0.9003  0.9001  0.9001  0.8998  0.8980  0.8980  0.8975  0.8965  0.8954  0.8943  0.8943  0.8938  0.8930  0.8915  0.8912
2024-04-28 21:14:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:14:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #129: GFLOPs: 2803.2578. Time: 314.1663 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #130: GFLOPs: 5120.4135. Time: 171.9957 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #131: GFLOPs: 7223.3930. Time: 121.9218 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #132: GFLOPs: 7189.8917. Time: 122.4899 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #133: GFLOPs: 7559.7213. Time: 116.4976 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #134: GFLOPs: 7259.0861. Time: 121.3223 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #135: GFLOPs: 7224.2490. Time: 121.9074 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #136: GFLOPs: 7178.3952. Time: 122.6861 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #137: GFLOPs: 7107.6974. Time: 123.9064 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #138: GFLOPs: 7223.5320. Time: 121.9195 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #139: GFLOPs: 7177.3852. Time: 122.7033 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #140: GFLOPs: 7223.0212. Time: 121.9281 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #141: GFLOPs: 2802.9515. Time: 314.2006 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #142: GFLOPs: 7204.6308. Time: 122.2393 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #143: GFLOPs: 7316.5099. Time: 120.3701 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #144: GFLOPs: 7073.9881. Time: 124.4968 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #145: GFLOPs: 7259.1109. Time: 121.3219 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #146: GFLOPs: 7153.5896. Time: 123.1115 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #147: GFLOPs: 7302.6905. Time: 120.5979 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #148: GFLOPs: 7072.5182. Time: 124.5227 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #149: GFLOPs: 6977.7989. Time: 126.2130 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #150: GFLOPs: 7272.1427. Time: 121.1045 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #151: GFLOPs: 7088.5812. Time: 124.2405 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #152: GFLOPs: 7201.3654. Time: 122.2947 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #153: GFLOPs: 7286.2639. Time: 120.8698 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #154: GFLOPs: 7244.6160. Time: 121.5646 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #155: GFLOPs: 7260.3144. Time: 121.3018 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #156: GFLOPs: 7149.3134. Time: 123.1851 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #157: GFLOPs: 7105.9769. Time: 123.9364 us. Best GFLOPs: 7613.1633
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #158: GFLOPs: 8227.2344. Time: 107.0456 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #159: GFLOPs: 6600.3390. Time: 133.4309 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #160: GFLOPs: 6644.4354. Time: 132.5454 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #161: GFLOPs: 7235.0263. Time: 121.7258 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #162: GFLOPs: 6225.2185. Time: 141.4712 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #163: GFLOPs: 6558.9516. Time: 134.2729 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #164: GFLOPs: 4036.0362. Time: 218.2065 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #165: GFLOPs: 7079.0617. Time: 124.4076 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #166: GFLOPs: 5520.2608. Time: 159.5376 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #167: GFLOPs: 7013.0299. Time: 125.5790 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #168: GFLOPs: 6500.3913. Time: 135.4825 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #169: GFLOPs: 8118.0709. Time: 108.4850 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #170: GFLOPs: 7068.8404. Time: 124.5875 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #171: GFLOPs: 6514.5401. Time: 135.1882 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #172: GFLOPs: 8173.5103. Time: 107.7492 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #173: GFLOPs: 7113.8872. Time: 123.7986 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #174: GFLOPs: 8208.9629. Time: 107.2839 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #175: GFLOPs: 8146.9552. Time: 108.1004 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #176: GFLOPs: 7181.1983. Time: 122.6382 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #177: GFLOPs: 7205.8897. Time: 122.2180 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #178: GFLOPs: 6955.7342. Time: 126.6134 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #179: GFLOPs: 7228.2675. Time: 121.8396 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #180: GFLOPs: 7414.1594. Time: 118.7848 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #181: GFLOPs: 7239.3422. Time: 121.6532 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #182: GFLOPs: 6792.1788. Time: 129.6622 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #183: GFLOPs: 6791.2352. Time: 129.6803 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #184: GFLOPs: 8008.0672. Time: 109.9752 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #185: GFLOPs: 7229.4872. Time: 121.8190 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #186: GFLOPs: 7141.1584. Time: 123.3258 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #187: GFLOPs: 8171.2969. Time: 107.7784 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #188: GFLOPs: 8045.7011. Time: 109.4608 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #189: GFLOPs: 7333.6563. Time: 120.0887 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #190: GFLOPs: 32.9757. Time: 26707.1990 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #191: GFLOPs: 475.2362. Time: 1853.1608 us. Best GFLOPs: 8227.2344
2024-04-28 21:15:41 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #192: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(44) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(44) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(8), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(8) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(14) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(256), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(196))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(392))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(10)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(256) // T.int64(128))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(128))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1 < T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(8), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(8) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(14) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(8), T.int64(14)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused * T.int64(64) + eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(8) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[4, 2, 8, 8, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 1, 7, 2, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137, l138 = sch.split(loop=l135, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l138)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l139, l140, l141, l142, l143 = sch.get_loops(block=b108)
l144, l145 = sch.split(loop=l143, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l145, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-28 21:41:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:41:13 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:41:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1209 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2014 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2418 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 3224 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:41:57 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 21:42:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:42:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:42:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:43:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 21:43:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0766  1.0084  1.0060  1.0017  1.0009  0.9977  0.9964  0.9959  0.9918  0.9909  0.9875  0.9872  0.9869  0.9816  0.9760  0.9713
[17 : 32]:	0.9707  0.9707  0.9691  0.9691  0.9679  0.9668  0.9577  0.9506  0.9502  0.9424  0.9423  0.9391  0.9386  0.9373  0.9366  0.9364
[33 : 48]:	0.9354  0.9334  0.9330  0.9329  0.9307  0.9306  0.9278  0.9272  0.9267  0.9214  0.9211  0.9199  0.9182  0.9112  0.9110  0.9106
[49 : 64]:	0.9096  0.9076  0.9055  0.9051  0.9050  0.9048  0.9046  0.9032  0.9030  0.9021  0.9021  0.9014  0.9005  0.8989  0.8987  0.8980
2024-04-28 21:43:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:43:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #193: GFLOPs: 25.7481. Time: 34203.9893 us. Best GFLOPs: 8227.2344
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #194: GFLOPs: 8031.4025. Time: 109.6557 us. Best GFLOPs: 8227.2344
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #195: GFLOPs: 8027.8848. Time: 109.7038 us. Best GFLOPs: 8227.2344
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #196: GFLOPs: 8234.3192. Time: 106.9535 us. Best GFLOPs: 8234.3192
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #197: GFLOPs: 8167.8727. Time: 107.8236 us. Best GFLOPs: 8234.3192
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #198: GFLOPs: 7071.0637. Time: 124.5483 us. Best GFLOPs: 8234.3192
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #199: GFLOPs: 8012.2647. Time: 109.9176 us. Best GFLOPs: 8234.3192
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #200: GFLOPs: 8234.3851. Time: 106.9526 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #201: GFLOPs: 6212.6529. Time: 141.7573 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #202: GFLOPs: 8123.6429. Time: 108.4106 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #203: GFLOPs: 7935.6365. Time: 110.9790 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #204: GFLOPs: 7265.7883. Time: 121.2104 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #205: GFLOPs: 7164.0034. Time: 122.9325 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #206: GFLOPs: 8038.7108. Time: 109.5560 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #207: GFLOPs: 7749.3998. Time: 113.6461 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #208: GFLOPs: 8216.6652. Time: 107.1833 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #209: GFLOPs: 8021.8737. Time: 109.7860 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #210: GFLOPs: 6681.0707. Time: 131.8186 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #211: GFLOPs: 6105.6145. Time: 144.2425 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #212: GFLOPs: 6050.0889. Time: 145.5663 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #213: GFLOPs: 7887.5594. Time: 111.6555 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #214: GFLOPs: 7846.2495. Time: 112.2433 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #215: GFLOPs: 8020.7206. Time: 109.8017 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #216: GFLOPs: 7974.3608. Time: 110.4401 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #217: GFLOPs: 8132.7811. Time: 108.2888 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #218: GFLOPs: 4043.8415. Time: 217.7853 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #219: GFLOPs: 7702.9549. Time: 114.3313 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #220: GFLOPs: 8141.4405. Time: 108.1736 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #221: GFLOPs: 8145.6257. Time: 108.1180 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #222: GFLOPs: 8123.2094. Time: 108.4164 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #223: GFLOPs: 8109.0799. Time: 108.6053 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #224: GFLOPs: 7259.7999. Time: 121.3104 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #225: GFLOPs: 7986.9518. Time: 110.2660 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #226: GFLOPs: 5332.3211. Time: 165.1606 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #227: GFLOPs: 6980.7067. Time: 126.1605 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #228: GFLOPs: 5525.5582. Time: 159.3846 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #229: GFLOPs: 5399.4670. Time: 163.1067 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #230: GFLOPs: 8143.3444. Time: 108.1483 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #231: GFLOPs: 4655.6506. Time: 189.1656 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #232: GFLOPs: 7296.0633. Time: 120.7074 us. Best GFLOPs: 8234.3851
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #233: GFLOPs: 8241.3208. Time: 106.8626 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #234: GFLOPs: 8228.3161. Time: 107.0315 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #235: GFLOPs: 8151.8322. Time: 108.0357 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #236: GFLOPs: 5237.6374. Time: 168.1463 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #237: GFLOPs: 7332.3782. Time: 120.1096 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #238: GFLOPs: 7829.2203. Time: 112.4875 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #239: GFLOPs: 7239.2096. Time: 121.6554 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #240: GFLOPs: 8189.0118. Time: 107.5452 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #241: GFLOPs: 7319.8562. Time: 120.3151 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #242: GFLOPs: 7799.5284. Time: 112.9157 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #243: GFLOPs: 7090.6832. Time: 124.2037 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #244: GFLOPs: 7209.7911. Time: 122.1518 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #245: GFLOPs: 6963.8650. Time: 126.4656 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #246: GFLOPs: 7207.6178. Time: 122.1887 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #247: GFLOPs: 7482.0243. Time: 117.7073 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #248: GFLOPs: 7295.9526. Time: 120.7093 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #249: GFLOPs: 8147.0671. Time: 108.0989 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #250: GFLOPs: 5940.5496. Time: 148.2505 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #251: GFLOPs: 7583.1118. Time: 116.1382 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #252: GFLOPs: 7264.0766. Time: 121.2390 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #253: GFLOPs: 5485.3941. Time: 160.5517 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #254: GFLOPs: 355.3252. Time: 2478.5440 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #255: GFLOPs: 1828.5866. Time: 481.6229 us. Best GFLOPs: 8241.3208
2024-04-28 21:44:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #256: GFLOPs: 217.9279. Time: 4041.1954 us. Best GFLOPs: 8241.3208
2024-04-28 22:03:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:03:20 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:03:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:03:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:03:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1210 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:03:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:03:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:03:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:03:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2826 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:04:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 3230 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:04:05 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-28 22:04:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:04:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:04:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:05:08 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:05:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0319  1.0074  0.9937  0.9935  0.9908  0.9907  0.9905  0.9887  0.9887  0.9887  0.9887  0.9880  0.9872  0.9872  0.9870  0.9870
[17 : 32]:	0.9868  0.9868  0.9860  0.9860  0.9856  0.9854  0.9853  0.9850  0.9843  0.9837  0.9834  0.9833  0.9831  0.9831  0.9825  0.9825
[33 : 48]:	0.9820  0.9819  0.9818  0.9814  0.9805  0.9803  0.9802  0.9800  0.9794  0.9789  0.9787  0.9786  0.9783  0.9777  0.9776  0.9771
[49 : 64]:	0.9762  0.9761  0.9744  0.9744  0.9742  0.9724  0.9717  0.9711  0.9696  0.9690  0.9689  0.9687  0.9682  0.9679  0.9679  0.9665
2024-04-28 22:05:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:05:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #257: GFLOPs: 6621.4134. Time: 133.0062 us. Best GFLOPs: 8241.3208
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #258: GFLOPs: 8207.8523. Time: 107.2984 us. Best GFLOPs: 8241.3208
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #259: GFLOPs: 6724.4052. Time: 130.9691 us. Best GFLOPs: 8241.3208
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #260: GFLOPs: 6015.7743. Time: 146.3966 us. Best GFLOPs: 8241.3208
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #261: GFLOPs: 8225.2811. Time: 107.0710 us. Best GFLOPs: 8241.3208
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #262: GFLOPs: 8181.1167. Time: 107.6490 us. Best GFLOPs: 8241.3208
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #263: GFLOPs: 8377.5378. Time: 105.1251 us. Best GFLOPs: 8377.5378
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #264: GFLOPs: 8325.2501. Time: 105.7853 us. Best GFLOPs: 8377.5378
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #265: GFLOPs: 8249.9228. Time: 106.7512 us. Best GFLOPs: 8377.5378
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #266: GFLOPs: 8402.1134. Time: 104.8176 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #267: GFLOPs: 8384.6650. Time: 105.0357 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #268: GFLOPs: 8337.7462. Time: 105.6268 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #269: GFLOPs: 8262.0282. Time: 106.5948 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #270: GFLOPs: 8381.3673. Time: 105.0770 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #271: GFLOPs: 8188.6752. Time: 107.5496 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #272: GFLOPs: 8121.0177. Time: 108.4457 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #273: GFLOPs: 8299.2030. Time: 106.1173 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #274: GFLOPs: 8400.4413. Time: 104.8384 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #275: GFLOPs: 8184.4422. Time: 107.6053 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #276: GFLOPs: 8168.9751. Time: 107.8090 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #277: GFLOPs: 8384.4330. Time: 105.0386 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #278: GFLOPs: 8328.7664. Time: 105.7406 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #279: GFLOPs: 8126.7497. Time: 108.3692 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #280: GFLOPs: 8196.1811. Time: 107.4512 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #281: GFLOPs: 8084.1149. Time: 108.9407 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #282: GFLOPs: 6007.8717. Time: 146.5892 us. Best GFLOPs: 8402.1134
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #283: GFLOPs: 8433.3508. Time: 104.4293 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #284: GFLOPs: 7563.4285. Time: 116.4405 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #285: GFLOPs: 8085.3679. Time: 108.9238 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #286: GFLOPs: 8067.9440. Time: 109.1591 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #287: GFLOPs: 8191.7528. Time: 107.5092 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #288: GFLOPs: 8158.2745. Time: 107.9504 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #289: GFLOPs: 8094.3489. Time: 108.8030 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #290: GFLOPs: 8202.6307. Time: 107.3667 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #291: GFLOPs: 7675.6100. Time: 114.7387 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #292: GFLOPs: 8026.5716. Time: 109.7217 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #293: GFLOPs: 8401.5766. Time: 104.8243 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #294: GFLOPs: 8165.5978. Time: 107.8536 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #295: GFLOPs: 8075.7253. Time: 109.0539 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #296: GFLOPs: 8242.3094. Time: 106.8498 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #297: GFLOPs: 8205.1788. Time: 107.3333 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #298: GFLOPs: 7930.7528. Time: 111.0474 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #299: GFLOPs: 8222.7668. Time: 107.1037 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #300: GFLOPs: 8424.8047. Time: 104.5353 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #301: GFLOPs: 8052.8235. Time: 109.3640 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #302: GFLOPs: 8249.4259. Time: 106.7576 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #303: GFLOPs: 7988.7525. Time: 110.2411 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #304: GFLOPs: 7485.3143. Time: 117.6556 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #305: GFLOPs: 8133.0645. Time: 108.2850 us. Best GFLOPs: 8433.3508
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #306: GFLOPs: 8566.6329. Time: 102.8046 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #307: GFLOPs: 8246.5066. Time: 106.7954 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #308: GFLOPs: 8194.2020. Time: 107.4771 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #309: GFLOPs: 8121.1112. Time: 108.4444 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #310: GFLOPs: 8401.3157. Time: 104.8275 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #311: GFLOPs: 8291.1942. Time: 106.2198 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #312: GFLOPs: 8002.5190. Time: 110.0515 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #313: GFLOPs: 8136.3170. Time: 108.2417 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #314: GFLOPs: 8129.5454. Time: 108.3319 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #315: GFLOPs: 8088.4333. Time: 108.8825 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #316: GFLOPs: 8243.2168. Time: 106.8380 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #317: GFLOPs: 7349.8669. Time: 119.8238 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #318: GFLOPs: 415.6697. Time: 2118.7234 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #319: GFLOPs: 3001.2436. Time: 293.4414 us. Best GFLOPs: 8566.6329
2024-04-28 22:06:18 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #320: GFLOPs: 13.1061. Time: 67196.9297 us. Best GFLOPs: 8566.6329
2024-04-28 22:26:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:26:10 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:26:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:26:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 797 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:26:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1198 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:26:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1602 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:26:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2005 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:26:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:26:42 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-28 22:26:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:27:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:27:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 66 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:27:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:27:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1342  0.9826  0.9792  0.9784  0.9746  0.9730  0.9725  0.9723  0.9713  0.9711  0.9710  0.9694  0.9682  0.9678  0.9677  0.9673
[17 : 32]:	0.9670  0.9660  0.9657  0.9654  0.9654  0.9652  0.9646  0.9645  0.9644  0.9639  0.9623  0.9620  0.9617  0.9612  0.9610  0.9604
[33 : 48]:	0.9602  0.9599  0.9599  0.9599  0.9591  0.9591  0.9584  0.9582  0.9581  0.9576  0.9569  0.9567  0.9560  0.9560  0.9552  0.9552
[49 : 64]:	0.9547  0.9542  0.9542  0.9538  0.9537  0.9536  0.9529  0.9513  0.9506  0.9503  0.9501  0.9498  0.9497  0.9497  0.9496  0.9496
2024-04-28 22:27:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:27:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #321: GFLOPs: 5360.6588. Time: 164.2875 us. Best GFLOPs: 8566.6329
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #322: GFLOPs: 8537.1347. Time: 103.1598 us. Best GFLOPs: 8566.6329
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #323: GFLOPs: 8313.9691. Time: 105.9288 us. Best GFLOPs: 8566.6329
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #324: GFLOPs: 8250.9002. Time: 106.7386 us. Best GFLOPs: 8566.6329
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #325: GFLOPs: 8608.5452. Time: 102.3041 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #326: GFLOPs: 8181.8681. Time: 107.6391 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #327: GFLOPs: 8235.8242. Time: 106.9339 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #328: GFLOPs: 8203.8185. Time: 107.3511 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #329: GFLOPs: 8232.5761. Time: 106.9761 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #330: GFLOPs: 8080.3556. Time: 108.9914 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #331: GFLOPs: 8306.2642. Time: 106.0271 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #332: GFLOPs: 8353.7046. Time: 105.4250 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #333: GFLOPs: 8403.9632. Time: 104.7945 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #334: GFLOPs: 8137.9341. Time: 108.2202 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #335: GFLOPs: 8362.4458. Time: 105.3148 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #336: GFLOPs: 8140.2803. Time: 108.1890 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #337: GFLOPs: 8146.6098. Time: 108.1050 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #338: GFLOPs: 8107.7892. Time: 108.6226 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #339: GFLOPs: 7784.4623. Time: 113.1342 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #340: GFLOPs: 8161.4116. Time: 107.9089 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #341: GFLOPs: 7937.0362. Time: 110.9594 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #342: GFLOPs: 8249.7580. Time: 106.7533 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #343: GFLOPs: 8169.9787. Time: 107.7958 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #344: GFLOPs: 8332.2333. Time: 105.6967 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #345: GFLOPs: 8242.6351. Time: 106.8456 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #346: GFLOPs: 8227.5855. Time: 107.0410 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #347: GFLOPs: 8296.7213. Time: 106.1491 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #348: GFLOPs: 8169.0873. Time: 107.8075 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #349: GFLOPs: 8061.5742. Time: 109.2453 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #350: GFLOPs: 7999.5814. Time: 110.0919 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #351: GFLOPs: 8156.3090. Time: 107.9764 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #352: GFLOPs: 8114.2215. Time: 108.5365 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #353: GFLOPs: 8152.8355. Time: 108.0224 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #354: GFLOPs: 8174.1124. Time: 107.7413 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #355: GFLOPs: 8024.7053. Time: 109.7472 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #356: GFLOPs: 8270.5112. Time: 106.4855 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #357: GFLOPs: 8034.9040. Time: 109.6079 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #358: GFLOPs: 8234.4027. Time: 106.9524 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #359: GFLOPs: 8215.7529. Time: 107.1952 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #360: GFLOPs: 8296.1467. Time: 106.1564 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #361: GFLOPs: 8097.3488. Time: 108.7627 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #362: GFLOPs: 8124.3684. Time: 108.4009 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #363: GFLOPs: 8000.8681. Time: 110.0742 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #364: GFLOPs: 8036.2234. Time: 109.5899 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #365: GFLOPs: 8239.1338. Time: 106.8910 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #366: GFLOPs: 8228.3628. Time: 107.0309 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #367: GFLOPs: 7980.4721. Time: 110.3555 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #368: GFLOPs: 8065.8996. Time: 109.1867 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #369: GFLOPs: 8055.6485. Time: 109.3257 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #370: GFLOPs: 7338.3028. Time: 120.0126 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #371: GFLOPs: 8160.6246. Time: 107.9193 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #372: GFLOPs: 8173.5171. Time: 107.7491 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #373: GFLOPs: 8104.8342. Time: 108.6622 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #374: GFLOPs: 8204.0646. Time: 107.3479 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #375: GFLOPs: 8018.0617. Time: 109.8382 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #376: GFLOPs: 8110.2372. Time: 108.5898 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #377: GFLOPs: 8006.4328. Time: 109.9977 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #378: GFLOPs: 8301.0784. Time: 106.0933 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #379: GFLOPs: 8221.3785. Time: 107.1218 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #380: GFLOPs: 7976.3799. Time: 110.4121 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #381: GFLOPs: 7921.2242. Time: 111.1809 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #382: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(784), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(196) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(196) // T.int64(98) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused * T.int64(4) + co_3_init * T.int64(4) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(98) * T.int64(2) + p_3_init * T.int64(2) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(49)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(784))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(784) // T.int64(196))
                                    v2 = T.axis.spatial(T.int64(256), ci_0)
                                    v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(256))
                                        v2 = T.axis.spatial(T.int64(256), ci_0)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(196) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(196) // T.int64(98) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused * T.int64(4) + co_3 * T.int64(4) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(98) * T.int64(2) + p_3 * T.int64(2) + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(1), T.int64(4), T.int64(2)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(196) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(196) // T.int64(98) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(98) * T.int64(2) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 4, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 2, 32, 1, 4])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 98, 1, 1, 2])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136 = sch.split(loop=l134, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l137, l138, l139, l140, l141 = sch.get_loops(block=b108)
l142, l143, l144 = sch.split(loop=l141, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l144)
sch.bind(loop=l143, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b149)
l179, l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #383: GFLOPs: 3081.8216. Time: 285.7690 us. Best GFLOPs: 8608.5452
2024-04-28 22:29:15 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #384: GFLOPs: 19.6168. Time: 44894.5513 us. Best GFLOPs: 8608.5452
2024-04-28 22:59:35 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:59:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:59:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:59:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 22:59:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1206 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2820 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:16 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-28 23:00:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 40 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:00:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 42 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:01:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 58 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:01:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9756  0.9729  0.9720  0.9689  0.9684  0.9680  0.9662  0.9660  0.9651  0.9647  0.9645  0.9644  0.9642  0.9640  0.9637  0.9636
[17 : 32]:	0.9634  0.9629  0.9629  0.9627  0.9614  0.9608  0.9602  0.9601  0.9599  0.9593  0.9583  0.9571  0.9557  0.9551  0.9549  0.9548
[33 : 48]:	0.9545  0.9540  0.9536  0.9527  0.9523  0.9523  0.9521  0.9521  0.9517  0.9511  0.9511  0.9510  0.9498  0.9497  0.9494  0.9489
[49 : 64]:	0.9486  0.9485  0.9484  0.9484  0.9484  0.9483  0.9480  0.9479  0.9478  0.9478  0.9476  0.9471  0.9471  0.9468  0.9466  0.9463
2024-04-28 23:01:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:01:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #385: GFLOPs: 8356.1734. Time: 105.3938 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #386: GFLOPs: 8425.3792. Time: 104.5281 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #387: GFLOPs: 8328.0213. Time: 105.7501 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #388: GFLOPs: 8533.4194. Time: 103.2047 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #389: GFLOPs: 8258.0324. Time: 106.6464 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #390: GFLOPs: 7266.8971. Time: 121.1919 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #391: GFLOPs: 8174.6992. Time: 107.7335 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #392: GFLOPs: 8305.9874. Time: 106.0306 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #393: GFLOPs: 8459.5727. Time: 104.1056 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #394: GFLOPs: 8043.0800. Time: 109.4965 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #395: GFLOPs: 8291.0393. Time: 106.2218 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #396: GFLOPs: 8102.3553. Time: 108.6954 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #397: GFLOPs: 8067.8963. Time: 109.1597 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #398: GFLOPs: 8291.1214. Time: 106.2208 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #399: GFLOPs: 8291.2191. Time: 106.2195 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #400: GFLOPs: 8079.3948. Time: 109.0043 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #401: GFLOPs: 8464.7410. Time: 104.0421 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #402: GFLOPs: 7502.0136. Time: 117.3937 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #403: GFLOPs: 8339.1746. Time: 105.6087 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #404: GFLOPs: 8117.3581. Time: 108.4946 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #405: GFLOPs: 7926.4629. Time: 111.1075 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #406: GFLOPs: 8127.5502. Time: 108.3585 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #407: GFLOPs: 7418.2730. Time: 118.7189 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #408: GFLOPs: 7488.5714. Time: 117.6044 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #409: GFLOPs: 8222.5148. Time: 107.1070 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #410: GFLOPs: 8468.6151. Time: 103.9945 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #411: GFLOPs: 8284.6994. Time: 106.3031 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #412: GFLOPs: 7226.7564. Time: 121.8651 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #413: GFLOPs: 8386.2368. Time: 105.0160 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #414: GFLOPs: 8388.3763. Time: 104.9892 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #415: GFLOPs: 8087.8722. Time: 108.8901 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #416: GFLOPs: 8150.7205. Time: 108.0505 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #417: GFLOPs: 8183.1067. Time: 107.6228 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #418: GFLOPs: 8114.4749. Time: 108.5331 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #419: GFLOPs: 7281.6455. Time: 120.9464 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #420: GFLOPs: 8098.8433. Time: 108.7426 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #421: GFLOPs: 8080.7746. Time: 108.9857 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #422: GFLOPs: 8081.5158. Time: 108.9757 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #423: GFLOPs: 8105.9414. Time: 108.6474 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #424: GFLOPs: 8038.6284. Time: 109.5571 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #425: GFLOPs: 8264.3006. Time: 106.5655 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #426: GFLOPs: 7542.5882. Time: 116.7622 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #427: GFLOPs: 7335.7811. Time: 120.0539 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #428: GFLOPs: 8340.5171. Time: 105.5917 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #429: GFLOPs: 8284.9519. Time: 106.2999 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #430: GFLOPs: 8213.5119. Time: 107.2244 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #431: GFLOPs: 8245.9060. Time: 106.8032 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #432: GFLOPs: 8175.8964. Time: 107.7177 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #433: GFLOPs: 7993.8325. Time: 110.1711 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #434: GFLOPs: 8171.9882. Time: 107.7693 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #435: GFLOPs: 8423.5004. Time: 104.5514 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #436: GFLOPs: 7868.0887. Time: 111.9318 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #437: GFLOPs: 7969.6526. Time: 110.5053 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #438: GFLOPs: 8296.1710. Time: 106.1561 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #439: GFLOPs: 8281.9953. Time: 106.3378 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #440: GFLOPs: 8354.3106. Time: 105.4173 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #441: GFLOPs: 8158.0657. Time: 107.9532 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #442: GFLOPs: 8315.8292. Time: 105.9052 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #443: GFLOPs: 8338.5944. Time: 105.6160 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #444: GFLOPs: 8219.0209. Time: 107.1526 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #445: GFLOPs: 8125.6446. Time: 108.3839 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #446: GFLOPs: 4930.4178. Time: 178.6236 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #447: GFLOPs: 38.4764. Time: 22889.0624 us. Best GFLOPs: 8608.5452
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #448: GFLOPs: 393.1948. Time: 2239.8293 us. Best GFLOPs: 8608.5452
2024-04-28 23:30:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:30:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:30:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:30:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:30:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1209 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:30:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:30:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2017 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:31:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2418 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:31:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:31:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 3219 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:31:16 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-04-28 23:31:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 43 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:31:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:32:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:32:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 54 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:32:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9762  0.9711  0.9696  0.9685  0.9681  0.9680  0.9670  0.9654  0.9642  0.9632  0.9631  0.9627  0.9614  0.9611  0.9611  0.9607
[17 : 32]:	0.9603  0.9600  0.9599  0.9599  0.9595  0.9594  0.9592  0.9586  0.9585  0.9583  0.9582  0.9582  0.9579  0.9578  0.9575  0.9575
[33 : 48]:	0.9575  0.9573  0.9569  0.9567  0.9566  0.9566  0.9566  0.9564  0.9562  0.9557  0.9555  0.9554  0.9549  0.9546  0.9543  0.9541
[49 : 64]:	0.9534  0.9533  0.9529  0.9527  0.9526  0.9523  0.9522  0.9518  0.9518  0.9518  0.9518  0.9517  0.9516  0.9507  0.9505  0.9498
2024-04-28 23:32:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:32:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #449: GFLOPs: 7118.4655. Time: 123.7190 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #450: GFLOPs: 8287.9120. Time: 106.2619 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #451: GFLOPs: 8360.2915. Time: 105.3419 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #452: GFLOPs: 8275.4273. Time: 106.4222 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #453: GFLOPs: 8334.3277. Time: 105.6701 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #454: GFLOPs: 7018.3108. Time: 125.4845 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #455: GFLOPs: 8293.7657. Time: 106.1869 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #456: GFLOPs: 7918.2829. Time: 111.2222 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #457: GFLOPs: 7409.6124. Time: 118.8577 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #458: GFLOPs: 8467.5045. Time: 104.0081 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #459: GFLOPs: 8279.1731. Time: 106.3740 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #460: GFLOPs: 8238.9573. Time: 106.8933 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #461: GFLOPs: 8228.6179. Time: 107.0276 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #462: GFLOPs: 8188.5388. Time: 107.5514 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #463: GFLOPs: 7733.8723. Time: 113.8743 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #464: GFLOPs: 8313.7122. Time: 105.9321 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #465: GFLOPs: 8183.1905. Time: 107.6217 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #466: GFLOPs: 8222.7727. Time: 107.1037 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #467: GFLOPs: 7997.3103. Time: 110.1232 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #468: GFLOPs: 7769.3574. Time: 113.3542 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #469: GFLOPs: 8250.5772. Time: 106.7427 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #470: GFLOPs: 8164.3866. Time: 107.8696 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #471: GFLOPs: 8292.9329. Time: 106.1975 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #472: GFLOPs: 7929.9964. Time: 111.0580 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #473: GFLOPs: 8205.2147. Time: 107.3329 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #474: GFLOPs: 8214.6361. Time: 107.2098 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #475: GFLOPs: 8213.9893. Time: 107.2182 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #476: GFLOPs: 8162.4751. Time: 107.8949 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #477: GFLOPs: 6285.4310. Time: 140.1160 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #478: GFLOPs: 8124.9958. Time: 108.3926 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #479: GFLOPs: 8128.0076. Time: 108.3524 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #480: GFLOPs: 8128.0076. Time: 108.3524 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #481: GFLOPs: 7903.4564. Time: 111.4309 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #482: GFLOPs: 8221.3919. Time: 107.1217 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #483: GFLOPs: 8206.7106. Time: 107.3133 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #484: GFLOPs: 8374.8829. Time: 105.1584 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #485: GFLOPs: 8221.7994. Time: 107.1164 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #486: GFLOPs: 8090.2229. Time: 108.8585 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #487: GFLOPs: 8174.1763. Time: 107.7404 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #488: GFLOPs: 8486.1714. Time: 103.7793 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #489: GFLOPs: 8299.6502. Time: 106.1116 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #490: GFLOPs: 8263.7207. Time: 106.5730 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #491: GFLOPs: 8155.9082. Time: 107.9817 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #492: GFLOPs: 8325.6568. Time: 105.7801 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #493: GFLOPs: 8270.0035. Time: 106.4920 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #494: GFLOPs: 8163.2434. Time: 107.8847 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #495: GFLOPs: 7954.2803. Time: 110.7189 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #496: GFLOPs: 8442.2630. Time: 104.3191 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #497: GFLOPs: 8195.0410. Time: 107.4661 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #498: GFLOPs: 7467.2591. Time: 117.9401 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #499: GFLOPs: 8150.7617. Time: 108.0499 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #500: GFLOPs: 8318.8977. Time: 105.8661 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #501: GFLOPs: 7467.5572. Time: 117.9354 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #502: GFLOPs: 8204.9694. Time: 107.3361 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #503: GFLOPs: 7902.5223. Time: 111.4441 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #504: GFLOPs: 8194.6924. Time: 107.4707 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #505: GFLOPs: 8027.4507. Time: 109.7097 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #506: GFLOPs: 8228.3628. Time: 107.0309 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #507: GFLOPs: 8177.9793. Time: 107.6903 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #508: GFLOPs: 8374.6062. Time: 105.1619 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #509: GFLOPs: 8312.6931. Time: 105.9451 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #510: GFLOPs: 15.2434. Time: 57775.1057 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #511: GFLOPs: 142.4725. Time: 6181.4665 us. Best GFLOPs: 8608.5452
2024-04-28 23:33:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #512: GFLOPs: 38.4905. Time: 22880.6654 us. Best GFLOPs: 8608.5452
2024-04-28 23:59:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:59:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:59:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-28 23:59:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:00:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:00:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:00:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2008 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:00:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2410 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:00:18 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-29 00:00:30 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 48 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:00:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 41 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:01:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 59 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:01:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 47 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:01:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6403  1.5328  1.5273  1.4727  1.3683  1.2097  1.1602  0.9822  0.9787  0.9691  0.9666  0.9647  0.9618  0.9617  0.9606  0.9598
[17 : 32]:	0.9593  0.9585  0.9584  0.9575  0.9571  0.9564  0.9557  0.9556  0.9555  0.9552  0.9547  0.9545  0.9535  0.9529  0.9526  0.9523
[33 : 48]:	0.9520  0.9513  0.9512  0.9509  0.9501  0.9500  0.9499  0.9497  0.9490  0.9490  0.9489  0.9489  0.9489  0.9487  0.9485  0.9485
[49 : 64]:	0.9484  0.9483  0.9482  0.9478  0.9478  0.9477  0.9472  0.9471  0.9470  0.9470  0.9465  0.9461  0.9457  0.9451  0.9450  0.9449
2024-04-29 00:01:21 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:01:21 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #513: GFLOPs: 3263.8666. Time: 269.8300 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #514: GFLOPs: 3158.0307. Time: 278.8729 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #515: GFLOPs: 3155.2750. Time: 279.1164 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #516: GFLOPs: 2847.1341. Time: 309.3248 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #517: GFLOPs: 2749.3639. Time: 320.3247 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #518: GFLOPs: 2683.3463. Time: 328.2055 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #519: GFLOPs: 2629.9488. Time: 334.8693 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #520: GFLOPs: 677.5080. Time: 1299.8948 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #521: GFLOPs: 6667.6795. Time: 132.0833 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #522: GFLOPs: 8587.8207. Time: 102.5509 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #523: GFLOPs: 8237.9759. Time: 106.9060 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #524: GFLOPs: 8421.7244. Time: 104.5735 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #525: GFLOPs: 8206.8701. Time: 107.3112 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #526: GFLOPs: 8441.5403. Time: 104.3280 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #527: GFLOPs: 8314.3926. Time: 105.9235 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #528: GFLOPs: 10.0183. Time: 87908.3557 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #529: GFLOPs: 8268.5410. Time: 106.5108 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #530: GFLOPs: 8426.1689. Time: 104.5183 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #531: GFLOPs: 8224.9808. Time: 107.0749 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #532: GFLOPs: 8303.1572. Time: 106.0668 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #533: GFLOPs: 8396.5994. Time: 104.8864 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #534: GFLOPs: 8440.4558. Time: 104.3414 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #535: GFLOPs: 8486.3008. Time: 103.7777 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #536: GFLOPs: 8098.7968. Time: 108.7432 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #537: GFLOPs: 8480.7667. Time: 103.8455 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #538: GFLOPs: 8397.3569. Time: 104.8769 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #539: GFLOPs: 8409.2431. Time: 104.7287 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #540: GFLOPs: 7927.5972. Time: 111.0916 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #541: GFLOPs: 8256.7525. Time: 106.6629 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #542: GFLOPs: 8349.9807. Time: 105.4720 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #543: GFLOPs: 7201.9553. Time: 122.2847 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #544: GFLOPs: 8268.0429. Time: 106.5172 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #545: GFLOPs: 8193.1468. Time: 107.4910 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #546: GFLOPs: 7268.4707. Time: 121.1657 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #547: GFLOPs: 8283.8602. Time: 106.3139 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #548: GFLOPs: 8152.5785. Time: 108.0258 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #549: GFLOPs: 5605.5648. Time: 157.1098 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #550: GFLOPs: 8218.8149. Time: 107.1552 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #551: GFLOPs: 8377.7544. Time: 105.1223 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #552: GFLOPs: 8238.7257. Time: 106.8963 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #553: GFLOPs: 8380.9624. Time: 105.0821 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #554: GFLOPs: 7964.2842. Time: 110.5798 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #555: GFLOPs: 8221.7477. Time: 107.1170 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #556: GFLOPs: 8306.1530. Time: 106.0285 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #557: GFLOPs: 8247.7132. Time: 106.7798 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #558: GFLOPs: 8249.1204. Time: 106.7616 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #559: GFLOPs: 7901.8337. Time: 111.4538 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #560: GFLOPs: 8026.6317. Time: 109.7209 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #561: GFLOPs: 8208.8308. Time: 107.2856 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #562: GFLOPs: 8141.2491. Time: 108.1762 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #563: GFLOPs: 8125.5627. Time: 108.3850 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #564: GFLOPs: 8173.2422. Time: 107.7527 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #565: GFLOPs: 8258.3602. Time: 106.6421 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #566: GFLOPs: 8069.2408. Time: 109.1415 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #567: GFLOPs: 8454.7756. Time: 104.1647 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #568: GFLOPs: 8413.3818. Time: 104.6772 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #569: GFLOPs: 8178.9498. Time: 107.6775 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #570: GFLOPs: 8282.8284. Time: 106.3271 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #571: GFLOPs: 8333.7464. Time: 105.6775 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #572: GFLOPs: 8127.5571. Time: 108.3584 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #573: GFLOPs: 8318.5495. Time: 105.8705 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #574: GFLOPs: 61.8477. Time: 14239.6504 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #575: GFLOPs: 958.6676. Time: 918.6595 us. Best GFLOPs: 8608.5452
2024-04-29 00:02:29 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #576: GFLOPs: 131.4576. Time: 6699.4176 us. Best GFLOPs: 8608.5452
2024-04-29 00:20:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:20:10 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:20:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1215 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1613 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2815 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:20:50 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 00:21:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:21:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 47 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:21:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 55 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:21:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 42 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:21:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0282  0.9758  0.9721  0.9713  0.9701  0.9686  0.9679  0.9662  0.9643  0.9634  0.9631  0.9626  0.9619  0.9614  0.9612  0.9612
[17 : 32]:	0.9612  0.9602  0.9601  0.9601  0.9598  0.9587  0.9584  0.9577  0.9576  0.9576  0.9573  0.9571  0.9569  0.9566  0.9561  0.9558
[33 : 48]:	0.9557  0.9552  0.9546  0.9545  0.9541  0.9541  0.9540  0.9539  0.9533  0.9532  0.9525  0.9519  0.9518  0.9517  0.9515  0.9513
[49 : 64]:	0.9511  0.9509  0.9507  0.9507  0.9507  0.9506  0.9506  0.9505  0.9502  0.9502  0.9502  0.9501  0.9501  0.9500  0.9500  0.9495
2024-04-29 00:21:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:21:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #577: GFLOPs: 3486.8283. Time: 252.5760 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #578: GFLOPs: 6707.2141. Time: 131.3048 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #579: GFLOPs: 6616.3490. Time: 133.1080 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #580: GFLOPs: 8380.6554. Time: 105.0860 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #581: GFLOPs: 8383.1360. Time: 105.0549 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #582: GFLOPs: 8248.2350. Time: 106.7730 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #583: GFLOPs: 8511.2425. Time: 103.4736 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #584: GFLOPs: 8382.9827. Time: 105.0568 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #585: GFLOPs: 8313.3537. Time: 105.9367 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #586: GFLOPs: 8242.3917. Time: 106.8487 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #587: GFLOPs: 8291.8075. Time: 106.2120 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #588: GFLOPs: 8378.7876. Time: 105.1094 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #589: GFLOPs: 8470.9344. Time: 103.9660 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #590: GFLOPs: 8113.0114. Time: 108.5527 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #591: GFLOPs: 8186.8081. Time: 107.5742 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #592: GFLOPs: 8334.0460. Time: 105.6737 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #593: GFLOPs: 8225.5462. Time: 107.0676 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #594: GFLOPs: 8338.1336. Time: 105.6219 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #595: GFLOPs: 8412.0522. Time: 104.6937 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #596: GFLOPs: 8405.1085. Time: 104.7802 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #597: GFLOPs: 8520.0130. Time: 103.3671 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #598: GFLOPs: 8359.9998. Time: 105.3456 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #599: GFLOPs: 8359.9246. Time: 105.3465 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #600: GFLOPs: 8337.0063. Time: 105.6361 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #601: GFLOPs: 8225.0832. Time: 107.0736 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #602: GFLOPs: 8548.3643. Time: 103.0243 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #603: GFLOPs: 8273.4631. Time: 106.4475 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #604: GFLOPs: 8305.4602. Time: 106.0374 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #605: GFLOPs: 8341.7254. Time: 105.5764 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #606: GFLOPs: 8353.3733. Time: 105.4292 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #607: GFLOPs: 8396.0362. Time: 104.8934 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #608: GFLOPs: 8427.5511. Time: 104.5012 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #609: GFLOPs: 8361.1395. Time: 105.3312 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #610: GFLOPs: 8015.3029. Time: 109.8760 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #611: GFLOPs: 8292.5811. Time: 106.2021 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #612: GFLOPs: 8228.8464. Time: 107.0246 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #613: GFLOPs: 8239.5861. Time: 106.8851 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #614: GFLOPs: 8352.3507. Time: 105.4421 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #615: GFLOPs: 8369.4424. Time: 105.2267 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #616: GFLOPs: 8302.7439. Time: 106.0721 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #617: GFLOPs: 8188.8918. Time: 107.5468 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #618: GFLOPs: 8425.0436. Time: 104.5323 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #619: GFLOPs: 8352.8203. Time: 105.4361 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #620: GFLOPs: 8144.9502. Time: 108.1270 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #621: GFLOPs: 8334.8343. Time: 105.6637 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #622: GFLOPs: 8404.1010. Time: 104.7928 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #623: GFLOPs: 8200.1792. Time: 107.3988 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #624: GFLOPs: 8438.2585. Time: 104.3686 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #625: GFLOPs: 8226.1927. Time: 107.0591 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #626: GFLOPs: 8187.1026. Time: 107.5703 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #627: GFLOPs: 8236.1525. Time: 106.9297 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #628: GFLOPs: 8413.4382. Time: 104.6765 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #629: GFLOPs: 8428.6522. Time: 104.4875 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #630: GFLOPs: 8212.1084. Time: 107.2428 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #631: GFLOPs: 8215.5218. Time: 107.1982 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #632: GFLOPs: 8348.3015. Time: 105.4932 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #633: GFLOPs: 8225.3912. Time: 107.0696 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #634: GFLOPs: 7812.8297. Time: 112.7235 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #635: GFLOPs: 8251.6636. Time: 106.7287 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #636: GFLOPs: 8148.3025. Time: 108.0825 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #637: GFLOPs: 8101.2997. Time: 108.7096 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #638: GFLOPs: 4157.8662. Time: 211.8128 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #639: GFLOPs: 1926.6111. Time: 457.1183 us. Best GFLOPs: 8608.5452
2024-04-29 00:23:01 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #640: GFLOPs: 64.8909. Time: 13571.8402 us. Best GFLOPs: 8608.5452
2024-04-29 00:40:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:40:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:40:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1202 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2814 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:40:57 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 00:41:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 42 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:41:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:41:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:42:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 60 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 00:42:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9771  0.9731  0.9716  0.9685  0.9678  0.9675  0.9667  0.9666  0.9663  0.9646  0.9639  0.9638  0.9637  0.9636  0.9630  0.9627
[17 : 32]:	0.9626  0.9626  0.9621  0.9621  0.9614  0.9611  0.9609  0.9599  0.9590  0.9588  0.9583  0.9583  0.9579  0.9576  0.9576  0.9566
[33 : 48]:	0.9565  0.9565  0.9561  0.9560  0.9560  0.9560  0.9558  0.9556  0.9556  0.9554  0.9554  0.9553  0.9552  0.9549  0.9549  0.9548
[49 : 64]:	0.9546  0.9545  0.9539  0.9539  0.9538  0.9536  0.9535  0.9533  0.9533  0.9532  0.9531  0.9527  0.9527  0.9524  0.9520  0.9517
2024-04-29 00:42:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:42:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #641: GFLOPs: 8173.9760. Time: 107.7431 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #642: GFLOPs: 8534.0850. Time: 103.1967 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #643: GFLOPs: 8379.0402. Time: 105.1062 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #644: GFLOPs: 8204.3567. Time: 107.3441 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #645: GFLOPs: 8259.7582. Time: 106.6241 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #646: GFLOPs: 8290.3348. Time: 106.2308 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #647: GFLOPs: 8523.3998. Time: 103.3260 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #648: GFLOPs: 8514.5736. Time: 103.4331 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #649: GFLOPs: 8287.9637. Time: 106.2612 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #650: GFLOPs: 8249.8196. Time: 106.7525 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #651: GFLOPs: 8285.3005. Time: 106.2954 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #652: GFLOPs: 7418.1992. Time: 118.7201 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #653: GFLOPs: 8197.9073. Time: 107.4285 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #654: GFLOPs: 8168.1159. Time: 107.8204 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #655: GFLOPs: 8297.3789. Time: 106.1406 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #656: GFLOPs: 8265.5704. Time: 106.5491 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #657: GFLOPs: 8193.0226. Time: 107.4926 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #658: GFLOPs: 8313.9968. Time: 105.9285 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #659: GFLOPs: 8200.0681. Time: 107.4002 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #660: GFLOPs: 8218.2958. Time: 107.1620 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #661: GFLOPs: 8462.0186. Time: 104.0755 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #662: GFLOPs: 8138.9657. Time: 108.2065 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #663: GFLOPs: 8167.8180. Time: 107.8243 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #664: GFLOPs: 8210.1797. Time: 107.2680 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #665: GFLOPs: 8164.8782. Time: 107.8631 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #666: GFLOPs: 8391.4564. Time: 104.9507 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #667: GFLOPs: 8132.2398. Time: 108.2960 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #668: GFLOPs: 8001.8370. Time: 110.0609 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #669: GFLOPs: 8230.1649. Time: 107.0075 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #670: GFLOPs: 8271.7550. Time: 106.4694 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #671: GFLOPs: 8270.5902. Time: 106.4844 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #672: GFLOPs: 8263.2978. Time: 106.5784 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #673: GFLOPs: 8005.1449. Time: 110.0154 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #674: GFLOPs: 8292.8760. Time: 106.1983 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #675: GFLOPs: 8272.6234. Time: 106.4583 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #676: GFLOPs: 7316.0339. Time: 120.3779 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #677: GFLOPs: 7831.2924. Time: 112.4577 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #678: GFLOPs: 8093.2005. Time: 108.8184 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #679: GFLOPs: 8294.9439. Time: 106.1718 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #680: GFLOPs: 8246.2412. Time: 106.7989 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #681: GFLOPs: 8145.3249. Time: 108.1220 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #682: GFLOPs: 8075.8073. Time: 109.0528 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #683: GFLOPs: 8056.7574. Time: 109.3106 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #684: GFLOPs: 7890.0531. Time: 111.6202 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #685: GFLOPs: 8403.8290. Time: 104.7962 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #686: GFLOPs: 8095.9313. Time: 108.7817 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #687: GFLOPs: 8007.4712. Time: 109.9834 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #688: GFLOPs: 8121.9993. Time: 108.4326 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #689: GFLOPs: 8144.9682. Time: 108.1268 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #690: GFLOPs: 8235.9732. Time: 106.9320 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #691: GFLOPs: 8152.4736. Time: 108.0272 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #692: GFLOPs: 8104.3018. Time: 108.6693 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #693: GFLOPs: 8222.6286. Time: 107.1055 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #694: GFLOPs: 8119.3812. Time: 108.4675 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #695: GFLOPs: 8144.8611. Time: 108.1282 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #696: GFLOPs: 7192.6041. Time: 122.4437 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #697: GFLOPs: 7191.9687. Time: 122.4545 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #698: GFLOPs: 8193.6572. Time: 107.4843 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #699: GFLOPs: 8242.7563. Time: 106.8440 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #700: GFLOPs: 8190.4543. Time: 107.5263 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #701: GFLOPs: 8137.2318. Time: 108.2296 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #702: GFLOPs: 62.1708. Time: 14165.6321 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #703: GFLOPs: 1617.4533. Time: 544.4912 us. Best GFLOPs: 8608.5452
2024-04-29 00:43:08 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #704: GFLOPs: 79.0485. Time: 11141.1200 us. Best GFLOPs: 8608.5452
2024-04-29 01:02:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:02:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:02:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 804 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1608 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2014 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2821 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 3223 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:02:51 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-29 01:03:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 45 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:03:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 48 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:03:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 54 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:03:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 44 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:03:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9804  0.9761  0.9760  0.9713  0.9707  0.9689  0.9670  0.9643  0.9639  0.9637  0.9637  0.9636  0.9633  0.9632  0.9620  0.9619
[17 : 32]:	0.9614  0.9613  0.9605  0.9602  0.9585  0.9575  0.9568  0.9566  0.9564  0.9563  0.9562  0.9562  0.9561  0.9560  0.9560  0.9560
[33 : 48]:	0.9558  0.9556  0.9555  0.9554  0.9554  0.9550  0.9550  0.9549  0.9549  0.9548  0.9537  0.9537  0.9535  0.9535  0.9535  0.9534
[49 : 64]:	0.9534  0.9533  0.9530  0.9524  0.9522  0.9520  0.9518  0.9516  0.9515  0.9515  0.9511  0.9510  0.9509  0.9508  0.9508  0.9507
2024-04-29 01:03:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:03:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #705: GFLOPs: 7417.1261. Time: 118.7372 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #706: GFLOPs: 8086.7850. Time: 108.9047 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #707: GFLOPs: 8310.4411. Time: 105.9738 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #708: GFLOPs: 8376.5935. Time: 105.1369 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #709: GFLOPs: 8174.6983. Time: 107.7335 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #710: GFLOPs: 8390.7939. Time: 104.9590 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #711: GFLOPs: 8403.7969. Time: 104.7966 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #712: GFLOPs: 8282.2366. Time: 106.3347 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #713: GFLOPs: 8463.2899. Time: 104.0599 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #714: GFLOPs: 7881.7499. Time: 111.7378 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #715: GFLOPs: 8274.8097. Time: 106.4301 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #716: GFLOPs: 8255.1413. Time: 106.6837 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #717: GFLOPs: 8307.9407. Time: 106.0057 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #718: GFLOPs: 8198.1192. Time: 107.4258 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #719: GFLOPs: 8293.5081. Time: 106.1902 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #720: GFLOPs: 7284.0248. Time: 120.9069 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #721: GFLOPs: 8332.0138. Time: 105.6994 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #722: GFLOPs: 8162.2721. Time: 107.8975 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #723: GFLOPs: 8274.9206. Time: 106.4287 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #724: GFLOPs: 8308.2272. Time: 106.0021 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #725: GFLOPs: 8381.7312. Time: 105.0725 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #726: GFLOPs: 8185.1532. Time: 107.5959 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #727: GFLOPs: 7275.9882. Time: 121.0405 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #728: GFLOPs: 8094.0791. Time: 108.8066 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #729: GFLOPs: 8263.3656. Time: 106.5775 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #730: GFLOPs: 8057.3257. Time: 109.3029 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #731: GFLOPs: 8185.5543. Time: 107.5907 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #732: GFLOPs: 7974.2659. Time: 110.4414 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #733: GFLOPs: 8237.0160. Time: 106.9185 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #734: GFLOPs: 8160.4725. Time: 107.9213 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #735: GFLOPs: 8186.2426. Time: 107.5816 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #736: GFLOPs: 8202.4118. Time: 107.3695 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #737: GFLOPs: 8248.2861. Time: 106.7724 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #738: GFLOPs: 8464.4862. Time: 104.0452 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #739: GFLOPs: 8162.8487. Time: 107.8899 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #740: GFLOPs: 7284.4942. Time: 120.8991 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #741: GFLOPs: 8230.6908. Time: 107.0006 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #742: GFLOPs: 8308.3695. Time: 106.0002 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #743: GFLOPs: 7243.4708. Time: 121.5839 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #744: GFLOPs: 7809.8405. Time: 112.7666 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #745: GFLOPs: 8237.2363. Time: 106.9156 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #746: GFLOPs: 8177.6208. Time: 107.6950 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #747: GFLOPs: 8358.9459. Time: 105.3589 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #748: GFLOPs: 8287.0779. Time: 106.2726 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #749: GFLOPs: 8129.4432. Time: 108.3333 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #750: GFLOPs: 8193.1028. Time: 107.4915 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #751: GFLOPs: 7904.6636. Time: 111.4139 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #752: GFLOPs: 8358.7292. Time: 105.3616 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #753: GFLOPs: 8228.2651. Time: 107.0322 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #754: GFLOPs: 8251.7446. Time: 106.7276 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #755: GFLOPs: 8278.1094. Time: 106.3877 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #756: GFLOPs: 7214.1176. Time: 122.0786 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #757: GFLOPs: 8345.3077. Time: 105.5311 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #758: GFLOPs: 8310.6216. Time: 105.9715 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #759: GFLOPs: 7818.4633. Time: 112.6422 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #760: GFLOPs: 8426.0857. Time: 104.5194 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #761: GFLOPs: 8234.0641. Time: 106.9568 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #762: GFLOPs: 8297.1864. Time: 106.1431 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #763: GFLOPs: 8195.7266. Time: 107.4571 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #764: GFLOPs: 8062.8999. Time: 109.2273 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #765: GFLOPs: 8215.5267. Time: 107.1981 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #766: GFLOPs: 50.5990. Time: 17405.2695 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #767: GFLOPs: 183.1040. Time: 4809.7767 us. Best GFLOPs: 8608.5452
2024-04-29 01:05:26 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #768: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(64), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_3_init * T.int64(2) + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(2) * T.int64(64) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(2) + co_3_init * T.int64(2) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(49)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(392))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(392) // T.int64(98))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(98))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(256))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16))
                                        v2 = T.axis.spatial(T.int64(256), ci_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(64))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(2) * T.int64(64) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_3 * T.int64(2) + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(2) * T.int64(64) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(2) + co_3 * T.int64(2) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0_fused * T.int64(4) + ci_1 * T.int64(2) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(1), T.int64(2), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(2) * T.int64(64) + eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[8, 2, 16, 1, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 7, 2, 7, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[64, 2, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137 = sch.split(loop=l135, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b150)
l180, l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-29 01:24:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:24:52 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:24:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1202 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1600 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2003 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2408 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:25 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 01:25:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 56 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:25:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 48 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:26:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 51 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:26:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 51 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:26:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9773  0.9764  0.9752  0.9713  0.9709  0.9704  0.9698  0.9689  0.9686  0.9680  0.9658  0.9654  0.9643  0.9640  0.9639  0.9633
[17 : 32]:	0.9630  0.9629  0.9624  0.9616  0.9612  0.9604  0.9603  0.9600  0.9600  0.9600  0.9599  0.9597  0.9596  0.9596  0.9595  0.9593
[33 : 48]:	0.9590  0.9590  0.9590  0.9589  0.9586  0.9580  0.9579  0.9577  0.9576  0.9575  0.9575  0.9571  0.9569  0.9569  0.9569  0.9563
[49 : 64]:	0.9558  0.9557  0.9553  0.9550  0.9549  0.9549  0.9549  0.9547  0.9546  0.9544  0.9542  0.9537  0.9536  0.9534  0.9534  0.9534
2024-04-29 01:26:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:26:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #769: GFLOPs: 8327.8421. Time: 105.7524 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #770: GFLOPs: 8300.1697. Time: 106.1050 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #771: GFLOPs: 8442.8293. Time: 104.3121 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #772: GFLOPs: 8461.5903. Time: 104.0808 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #773: GFLOPs: 7396.8076. Time: 119.0634 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #774: GFLOPs: 8150.7588. Time: 108.0500 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #775: GFLOPs: 8409.1031. Time: 104.7305 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #776: GFLOPs: 8333.1187. Time: 105.6854 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #777: GFLOPs: 8234.8103. Time: 106.9471 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #778: GFLOPs: 7770.9082. Time: 113.3316 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #779: GFLOPs: 8201.4355. Time: 107.3823 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #780: GFLOPs: 8334.7410. Time: 105.6648 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #781: GFLOPs: 8178.5751. Time: 107.6825 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #782: GFLOPs: 8286.8852. Time: 106.2751 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #783: GFLOPs: 8275.0672. Time: 106.4268 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #784: GFLOPs: 8181.8652. Time: 107.6392 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #785: GFLOPs: 8490.8662. Time: 103.7219 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #786: GFLOPs: 8294.7519. Time: 106.1743 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #787: GFLOPs: 8283.0352. Time: 106.3244 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #788: GFLOPs: 8367.6345. Time: 105.2495 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #789: GFLOPs: 8109.0944. Time: 108.6051 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #790: GFLOPs: 8344.7243. Time: 105.5384 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #791: GFLOPs: 8270.9492. Time: 106.4798 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #792: GFLOPs: 8428.8502. Time: 104.4851 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #793: GFLOPs: 8260.8573. Time: 106.6099 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #794: GFLOPs: 8258.1143. Time: 106.6453 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #795: GFLOPs: 8235.2745. Time: 106.9411 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #796: GFLOPs: 8287.1718. Time: 106.2714 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #797: GFLOPs: 8355.7451. Time: 105.3992 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #798: GFLOPs: 8368.9973. Time: 105.2323 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #799: GFLOPs: 8185.4108. Time: 107.5925 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #800: GFLOPs: 8098.2378. Time: 108.7507 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #801: GFLOPs: 8022.1891. Time: 109.7816 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #802: GFLOPs: 8479.6204. Time: 103.8595 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #803: GFLOPs: 8199.1615. Time: 107.4121 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #804: GFLOPs: 8430.0719. Time: 104.4699 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #805: GFLOPs: 7425.5144. Time: 118.6031 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #806: GFLOPs: 8233.6833. Time: 106.9617 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #807: GFLOPs: 8125.5832. Time: 108.3847 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #808: GFLOPs: 8180.5666. Time: 107.6563 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #809: GFLOPs: 7932.3777. Time: 111.0246 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #810: GFLOPs: 7410.1451. Time: 118.8491 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #811: GFLOPs: 8016.7180. Time: 109.8566 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #812: GFLOPs: 8121.0177. Time: 108.4457 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #813: GFLOPs: 8210.3597. Time: 107.2656 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #814: GFLOPs: 8236.4574. Time: 106.9257 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #815: GFLOPs: 8160.6058. Time: 107.9196 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #816: GFLOPs: 8112.3981. Time: 108.5609 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #817: GFLOPs: 8275.9834. Time: 106.4150 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #818: GFLOPs: 8295.1669. Time: 106.1689 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #819: GFLOPs: 6884.1714. Time: 127.9296 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #820: GFLOPs: 8146.4265. Time: 108.1074 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #821: GFLOPs: 8067.7701. Time: 109.1614 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #822: GFLOPs: 8289.2501. Time: 106.2447 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #823: GFLOPs: 8150.8235. Time: 108.0491 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #824: GFLOPs: 8136.0742. Time: 108.2450 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #825: GFLOPs: 8137.8622. Time: 108.2212 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #826: GFLOPs: 7854.5145. Time: 112.1252 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #827: GFLOPs: 8078.6073. Time: 109.0150 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #828: GFLOPs: 7319.0445. Time: 120.3284 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #829: GFLOPs: 8215.6840. Time: 107.1961 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #830: GFLOPs: 86.5257. Time: 10178.3554 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #831: GFLOPs: 28.7572. Time: 30625.0248 us. Best GFLOPs: 8608.5452
2024-04-29 01:27:32 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #832: GFLOPs: 3107.5772. Time: 283.4006 us. Best GFLOPs: 8608.5452
2024-04-29 01:49:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:49:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:49:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:49:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 800 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:49:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:49:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:49:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2000 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:49:44 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-29 01:49:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 51 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:50:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 38 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:50:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 50 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:50:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 55 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 01:50:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4736  0.9746  0.9716  0.9713  0.9711  0.9704  0.9685  0.9685  0.9681  0.9674  0.9670  0.9659  0.9654  0.9654  0.9652  0.9649
[17 : 32]:	0.9648  0.9644  0.9639  0.9634  0.9633  0.9632  0.9630  0.9620  0.9618  0.9615  0.9614  0.9611  0.9608  0.9606  0.9602  0.9599
[33 : 48]:	0.9598  0.9593  0.9591  0.9588  0.9583  0.9581  0.9577  0.9575  0.9574  0.9572  0.9572  0.9572  0.9571  0.9571  0.9567  0.9563
[49 : 64]:	0.9558  0.9558  0.9557  0.9557  0.9548  0.9546  0.9542  0.9536  0.9536  0.9531  0.9529  0.9528  0.9527  0.9526  0.9524  0.9524
2024-04-29 01:50:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:50:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #833: GFLOPs: 3415.0514. Time: 257.8846 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #834: GFLOPs: 8460.5077. Time: 104.0941 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #835: GFLOPs: 8453.8062. Time: 104.1766 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #836: GFLOPs: 8348.2783. Time: 105.4935 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #837: GFLOPs: 8473.4208. Time: 103.9355 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #838: GFLOPs: 8445.7696. Time: 104.2758 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #839: GFLOPs: 8366.9420. Time: 105.2582 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #840: GFLOPs: 8469.4339. Time: 103.9844 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #841: GFLOPs: 8595.7002. Time: 102.4569 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #842: GFLOPs: 8272.2240. Time: 106.4634 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #843: GFLOPs: 8204.4525. Time: 107.3428 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #844: GFLOPs: 8517.3428. Time: 103.3995 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #845: GFLOPs: 8378.3678. Time: 105.1146 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #846: GFLOPs: 8416.7943. Time: 104.6347 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #847: GFLOPs: 8275.6748. Time: 106.4190 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #848: GFLOPs: 8439.2727. Time: 104.3560 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #849: GFLOPs: 8465.8810. Time: 104.0281 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #850: GFLOPs: 8037.5093. Time: 109.5724 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #851: GFLOPs: 8276.7921. Time: 106.4046 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #852: GFLOPs: 8344.8550. Time: 105.5368 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #853: GFLOPs: 8263.1191. Time: 106.5807 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #854: GFLOPs: 8194.0097. Time: 107.4796 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #855: GFLOPs: 8371.9963. Time: 105.1946 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #856: GFLOPs: 8387.7364. Time: 104.9972 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #857: GFLOPs: 8388.0447. Time: 104.9934 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #858: GFLOPs: 8446.9000. Time: 104.2618 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #859: GFLOPs: 7935.7322. Time: 110.9777 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #860: GFLOPs: 8442.2100. Time: 104.3197 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #861: GFLOPs: 8185.4742. Time: 107.5917 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #862: GFLOPs: 7100.8842. Time: 124.0253 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #863: GFLOPs: 8268.0764. Time: 106.5168 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #864: GFLOPs: 8298.4470. Time: 106.1270 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #865: GFLOPs: 8303.8308. Time: 106.0582 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #866: GFLOPs: 8238.6152. Time: 106.8977 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #867: GFLOPs: 8416.6387. Time: 104.6367 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #868: GFLOPs: 8285.7077. Time: 106.2902 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #869: GFLOPs: 8402.3048. Time: 104.8152 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #870: GFLOPs: 8407.1244. Time: 104.7551 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #871: GFLOPs: 8358.0371. Time: 105.3703 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #872: GFLOPs: 8191.8291. Time: 107.5082 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #873: GFLOPs: 8279.4188. Time: 106.3709 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #874: GFLOPs: 8139.2289. Time: 108.2030 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #875: GFLOPs: 8391.0027. Time: 104.9564 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #876: GFLOPs: 8242.5120. Time: 106.8472 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #877: GFLOPs: 8195.3868. Time: 107.4616 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #878: GFLOPs: 8328.7615. Time: 105.7407 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #879: GFLOPs: 8280.6802. Time: 106.3547 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #880: GFLOPs: 8412.9833. Time: 104.6821 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #881: GFLOPs: 8157.8301. Time: 107.9563 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #882: GFLOPs: 8370.1313. Time: 105.2181 us. Best GFLOPs: 8608.5452
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #883: GFLOPs: 9540.4267. Time: 92.3113 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #884: GFLOPs: 8351.9011. Time: 105.4477 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #885: GFLOPs: 8298.4143. Time: 106.1274 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #886: GFLOPs: 8447.9360. Time: 104.2490 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #887: GFLOPs: 8289.6613. Time: 106.2395 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #888: GFLOPs: 8523.2781. Time: 103.3275 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #889: GFLOPs: 8291.2931. Time: 106.2186 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #890: GFLOPs: 8522.2026. Time: 103.3406 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #891: GFLOPs: 8617.6297. Time: 102.1962 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #892: GFLOPs: 8246.7790. Time: 106.7919 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #893: GFLOPs: 8322.4883. Time: 105.8204 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #894: GFLOPs: 282.2733. Time: 3119.9873 us. Best GFLOPs: 9540.4267
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #895: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(224), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(112) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused % T.int64(112) // T.int64(7) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused // T.int64(28) * T.int64(2) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(28) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(256), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(14)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) // T.int64(784))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) % T.int64(784) // T.int64(196))
                                    v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                    v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(5)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(512))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(256), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(112) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused % T.int64(112) // T.int64(7) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused // T.int64(28) * T.int64(2) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(28) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(2), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(4) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(112) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused % T.int64(112) // T.int64(7) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused // T.int64(28) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(28) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[4, 16, 4, 2, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 28, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137 = sch.split(loop=l135, factors=[None, 112], preserve_unit_iters=True)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b150)
l180, l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-29 01:52:22 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #896: GFLOPs: 237.2716. Time: 3711.7346 us. Best GFLOPs: 9540.4267
2024-04-29 02:04:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:04:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:04:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:04:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:04:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1201 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:05:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:05:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1998 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:05:09 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 02:05:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 54 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:05:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 53 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:05:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 55 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:06:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 49 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:06:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9858  0.9723  0.9721  0.9593  0.9559  0.8890  0.8842  0.8837  0.8795  0.8781  0.8773  0.8767  0.8765  0.8758  0.8753  0.8752
[17 : 32]:	0.8745  0.8742  0.8733  0.8733  0.8728  0.8720  0.8718  0.8718  0.8712  0.8704  0.8704  0.8699  0.8699  0.8698  0.8693  0.8690
[33 : 48]:	0.8690  0.8688  0.8688  0.8684  0.8683  0.8681  0.8679  0.8677  0.8675  0.8674  0.8673  0.8672  0.8669  0.8669  0.8660  0.8660
[49 : 64]:	0.8660  0.8658  0.8653  0.8648  0.8645  0.8641  0.8640  0.8639  0.8639  0.8637  0.8637  0.8632  0.8632  0.8631  0.8631  0.8630
2024-04-29 02:06:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:06:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #897: GFLOPs: 9592.3046. Time: 91.8121 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #898: GFLOPs: 9540.8895. Time: 92.3068 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #899: GFLOPs: 9315.5899. Time: 94.5393 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #900: GFLOPs: 9540.6305. Time: 92.3093 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #901: GFLOPs: 9541.3275. Time: 92.3026 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #902: GFLOPs: 8460.8379. Time: 104.0901 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #903: GFLOPs: 8666.2270. Time: 101.6231 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #904: GFLOPs: 8707.2675. Time: 101.1441 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #905: GFLOPs: 8637.8191. Time: 101.9574 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #906: GFLOPs: 8677.2571. Time: 101.4940 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #907: GFLOPs: 8639.5330. Time: 101.9371 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #908: GFLOPs: 8713.5674. Time: 101.0710 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #909: GFLOPs: 8541.0235. Time: 103.1128 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #910: GFLOPs: 7934.5622. Time: 110.9940 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #911: GFLOPs: 8229.5526. Time: 107.0154 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #912: GFLOPs: 8327.9976. Time: 105.7504 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #913: GFLOPs: 7882.8146. Time: 111.7227 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #914: GFLOPs: 8291.4931. Time: 106.2160 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #915: GFLOPs: 8496.8866. Time: 103.6485 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #916: GFLOPs: 8476.5523. Time: 103.8971 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #917: GFLOPs: 8346.5095. Time: 105.5159 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #918: GFLOPs: 8282.3730. Time: 106.3330 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #919: GFLOPs: 8521.7384. Time: 103.3462 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #920: GFLOPs: 8244.2886. Time: 106.8242 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #921: GFLOPs: 8554.9514. Time: 102.9450 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #922: GFLOPs: 8324.5433. Time: 105.7943 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #923: GFLOPs: 8425.2520. Time: 104.5297 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #924: GFLOPs: 8318.7441. Time: 105.8680 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #925: GFLOPs: 8061.2126. Time: 109.2502 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #926: GFLOPs: 8677.5175. Time: 101.4909 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #927: GFLOPs: 8232.7070. Time: 106.9744 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #928: GFLOPs: 8515.8395. Time: 103.4178 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #929: GFLOPs: 8127.9259. Time: 108.3535 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #930: GFLOPs: 8395.1396. Time: 104.9046 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #931: GFLOPs: 8388.4785. Time: 104.9879 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #932: GFLOPs: 8422.7150. Time: 104.5612 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #933: GFLOPs: 7661.3777. Time: 114.9518 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #934: GFLOPs: 8520.7888. Time: 103.3577 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #935: GFLOPs: 8565.3812. Time: 102.8196 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #936: GFLOPs: 8093.4668. Time: 108.8148 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #937: GFLOPs: 8391.4289. Time: 104.9510 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #938: GFLOPs: 8311.3919. Time: 105.9617 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #939: GFLOPs: 8319.6709. Time: 105.8562 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #940: GFLOPs: 8179.7682. Time: 107.6668 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #941: GFLOPs: 8275.2027. Time: 106.4251 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #942: GFLOPs: 8349.8249. Time: 105.4740 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #943: GFLOPs: 8506.4836. Time: 103.5315 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #944: GFLOPs: 8358.2310. Time: 105.3679 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #945: GFLOPs: 8481.1969. Time: 103.8402 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #946: GFLOPs: 8518.0935. Time: 103.3904 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #947: GFLOPs: 8404.0977. Time: 104.7928 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #948: GFLOPs: 8392.1351. Time: 104.9422 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #949: GFLOPs: 8478.6031. Time: 103.8720 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #950: GFLOPs: 8232.3789. Time: 106.9787 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #951: GFLOPs: 8383.7302. Time: 105.0474 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #952: GFLOPs: 8279.4982. Time: 106.3699 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #953: GFLOPs: 8236.5839. Time: 106.9241 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #954: GFLOPs: 8283.3247. Time: 106.3207 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #955: GFLOPs: 8415.5769. Time: 104.6499 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #956: GFLOPs: 8380.8790. Time: 105.0831 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #957: GFLOPs: 8450.1479. Time: 104.2217 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #958: GFLOPs: 2909.6525. Time: 302.6785 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #959: GFLOPs: 5717.0947. Time: 154.0449 us. Best GFLOPs: 9592.3046
2024-04-29 02:07:21 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #960: GFLOPs: 157.0960. Time: 5606.0587 us. Best GFLOPs: 9592.3046
2024-04-29 02:32:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:32:43 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:32:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:32:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:33:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:33:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:33:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2008 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:33:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:33:16 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 02:33:30 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 51 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:33:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 48 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:34:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 50 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:34:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 45 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:34:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0388  1.0382  0.9918  0.9892  0.9890  0.9884  0.9868  0.9818  0.9711  0.9650  0.9550  0.9463  0.9109  0.9067  0.9060  0.9040
[17 : 32]:	0.9040  0.8951  0.8926  0.8911  0.8895  0.8873  0.8869  0.8862  0.8858  0.8833  0.8811  0.8806  0.8806  0.8805  0.8798  0.8795
[33 : 48]:	0.8787  0.8782  0.8777  0.8776  0.8773  0.8766  0.8761  0.8760  0.8758  0.8755  0.8755  0.8740  0.8735  0.8729  0.8726  0.8722
[49 : 64]:	0.8719  0.8718  0.8715  0.8715  0.8714  0.8713  0.8711  0.8710  0.8708  0.8704  0.8703  0.8700  0.8699  0.8699  0.8697  0.8692
2024-04-29 02:34:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:34:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #961: GFLOPs: 5367.4809. Time: 164.0787 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #962: GFLOPs: 7974.9026. Time: 110.4326 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #963: GFLOPs: 9532.9244. Time: 92.3839 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #964: GFLOPs: 9456.3577. Time: 93.1320 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #965: GFLOPs: 9494.1540. Time: 92.7612 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #966: GFLOPs: 9355.7502. Time: 94.1335 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #967: GFLOPs: 9275.7153. Time: 94.9457 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #968: GFLOPs: 9461.3563. Time: 93.0828 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #969: GFLOPs: 9322.5451. Time: 94.4687 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #970: GFLOPs: 8106.9042. Time: 108.6345 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #971: GFLOPs: 9293.2999. Time: 94.7660 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #972: GFLOPs: 5995.6872. Time: 146.8871 us. Best GFLOPs: 9592.3046
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #973: GFLOPs: 9601.4696. Time: 91.7244 us. Best GFLOPs: 9601.4696
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #974: GFLOPs: 9672.1045. Time: 91.0546 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #975: GFLOPs: 9114.2553. Time: 96.6277 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #976: GFLOPs: 9539.7400. Time: 92.3179 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #977: GFLOPs: 9217.1705. Time: 95.5488 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #978: GFLOPs: 8551.3100. Time: 102.9888 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #979: GFLOPs: 9159.9363. Time: 96.1458 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #980: GFLOPs: 9619.5643. Time: 91.5519 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #981: GFLOPs: 8370.1135. Time: 105.2183 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #982: GFLOPs: 8315.8938. Time: 105.9043 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #983: GFLOPs: 8311.1337. Time: 105.9650 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #984: GFLOPs: 8649.5307. Time: 101.8193 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #985: GFLOPs: 8605.1940. Time: 102.3439 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #986: GFLOPs: 8447.6468. Time: 104.2526 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #987: GFLOPs: 8282.8533. Time: 106.3268 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #988: GFLOPs: 8557.6071. Time: 102.9130 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #989: GFLOPs: 8521.7189. Time: 103.3464 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #990: GFLOPs: 8366.7814. Time: 105.2602 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #991: GFLOPs: 8555.8555. Time: 102.9341 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #992: GFLOPs: 8490.2867. Time: 103.7290 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #993: GFLOPs: 8196.2801. Time: 107.4499 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #994: GFLOPs: 4283.5535. Time: 205.5978 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #995: GFLOPs: 6854.3680. Time: 128.4858 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #996: GFLOPs: 8198.5133. Time: 107.4206 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #997: GFLOPs: 8497.2862. Time: 103.6436 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #998: GFLOPs: 8345.1208. Time: 105.5334 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #999: GFLOPs: 8350.3437. Time: 105.4674 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1000: GFLOPs: 6267.9421. Time: 140.5069 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1001: GFLOPs: 8354.4048. Time: 105.4161 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1002: GFLOPs: 8531.5091. Time: 103.2278 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1003: GFLOPs: 4959.5898. Time: 177.5730 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1004: GFLOPs: 8496.8033. Time: 103.6495 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1005: GFLOPs: 8259.1974. Time: 106.6313 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1006: GFLOPs: 8355.4605. Time: 105.4028 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1007: GFLOPs: 8379.3816. Time: 105.1019 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1008: GFLOPs: 8470.2933. Time: 103.9739 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1009: GFLOPs: 8264.6637. Time: 106.5608 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1010: GFLOPs: 8278.5004. Time: 106.3827 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1011: GFLOPs: 8567.0540. Time: 102.7995 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1012: GFLOPs: 8359.0448. Time: 105.3576 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1013: GFLOPs: 4581.3411. Time: 192.2339 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1014: GFLOPs: 8578.3839. Time: 102.6638 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1015: GFLOPs: 8412.3738. Time: 104.6897 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1016: GFLOPs: 8444.8417. Time: 104.2872 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1017: GFLOPs: 8406.0423. Time: 104.7686 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1018: GFLOPs: 8350.4798. Time: 105.4657 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1019: GFLOPs: 8559.1866. Time: 102.8940 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1020: GFLOPs: 8260.2999. Time: 106.6171 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1021: GFLOPs: 4340.7337. Time: 202.8895 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1022: GFLOPs: 1147.4147. Time: 767.5422 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1023: GFLOPs: 77.2506. Time: 11400.4194 us. Best GFLOPs: 9672.1045
2024-04-29 02:35:28 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1024: GFLOPs: 4157.8263. Time: 211.8148 us. Best GFLOPs: 9672.1045
2024-04-29 02:47:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:47:27 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:47:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:47:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:47:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:47:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:47:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:48:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:48:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2814 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:48:06 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 02:48:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:48:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:48:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:49:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 02:49:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9979  0.9962  0.9949  0.9944  0.9906  0.9894  0.9887  0.9863  0.9852  0.9846  0.9844  0.9843  0.9833  0.9833  0.9829  0.9829
[17 : 32]:	0.9815  0.9815  0.9814  0.9812  0.9809  0.9809  0.9790  0.9786  0.9785  0.9784  0.9783  0.9782  0.9772  0.9767  0.9765  0.9763
[33 : 48]:	0.9760  0.9753  0.9752  0.9750  0.9741  0.9741  0.9738  0.9735  0.9731  0.9727  0.9724  0.9685  0.9667  0.9617  0.9607  0.9601
[49 : 64]:	0.9596  0.9596  0.9592  0.9586  0.9583  0.9575  0.9571  0.9570  0.9560  0.9560  0.9553  0.9552  0.9546  0.9528  0.9524  0.9523
2024-04-29 02:49:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:49:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1025: GFLOPs: 9439.6142. Time: 93.2972 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1026: GFLOPs: 9450.0440. Time: 93.1942 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1027: GFLOPs: 9553.2431. Time: 92.1875 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1028: GFLOPs: 9554.7610. Time: 92.1728 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1029: GFLOPs: 9130.3534. Time: 96.4573 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1030: GFLOPs: 9402.3436. Time: 93.6670 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1031: GFLOPs: 9431.9389. Time: 93.3731 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1032: GFLOPs: 9526.7173. Time: 92.4441 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1033: GFLOPs: 9519.1312. Time: 92.5178 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1034: GFLOPs: 9600.5119. Time: 91.7336 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1035: GFLOPs: 9574.4376. Time: 91.9834 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1036: GFLOPs: 9592.1578. Time: 91.8135 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1037: GFLOPs: 9573.4673. Time: 91.9927 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1038: GFLOPs: 9451.4511. Time: 93.1803 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1039: GFLOPs: 9562.4505. Time: 92.0987 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1040: GFLOPs: 9246.1555. Time: 95.2492 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1041: GFLOPs: 9442.1082. Time: 93.2725 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1042: GFLOPs: 9628.5036. Time: 91.4669 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1043: GFLOPs: 9568.5858. Time: 92.0396 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1044: GFLOPs: 9458.8491. Time: 93.1074 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1045: GFLOPs: 9574.7781. Time: 91.9801 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1046: GFLOPs: 9641.6771. Time: 91.3419 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1047: GFLOPs: 9461.0040. Time: 93.0862 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1048: GFLOPs: 9574.0468. Time: 91.9871 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1049: GFLOPs: 9442.3509. Time: 93.2701 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1050: GFLOPs: 9458.3000. Time: 93.1128 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1051: GFLOPs: 9431.6362. Time: 93.3761 us. Best GFLOPs: 9672.1045
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1052: GFLOPs: 9763.1369. Time: 90.2056 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1053: GFLOPs: 9575.0599. Time: 91.9774 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1054: GFLOPs: 9575.9187. Time: 91.9692 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1055: GFLOPs: 9519.7824. Time: 92.5115 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1056: GFLOPs: 9224.7558. Time: 95.4702 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1057: GFLOPs: 9462.0249. Time: 93.0762 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1058: GFLOPs: 9520.3884. Time: 92.5056 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1059: GFLOPs: 9439.7755. Time: 93.2956 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1060: GFLOPs: 9663.4606. Time: 91.1360 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1061: GFLOPs: 9576.6102. Time: 91.9625 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1062: GFLOPs: 9308.4911. Time: 94.6114 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1063: GFLOPs: 9188.9928. Time: 95.8418 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1064: GFLOPs: 9519.2328. Time: 92.5168 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1065: GFLOPs: 9457.8298. Time: 93.1175 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1066: GFLOPs: 9507.3743. Time: 92.6322 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1067: GFLOPs: 9220.8824. Time: 95.5103 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1068: GFLOPs: 9472.0259. Time: 92.9779 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1069: GFLOPs: 9540.8685. Time: 92.3070 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1070: GFLOPs: 9445.2977. Time: 93.2410 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1071: GFLOPs: 9120.3212. Time: 96.5634 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1072: GFLOPs: 9230.9016. Time: 95.4066 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1073: GFLOPs: 6740.1010. Time: 130.6641 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1074: GFLOPs: 7517.9979. Time: 117.1441 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1075: GFLOPs: 9149.9035. Time: 96.2512 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1076: GFLOPs: 9294.6638. Time: 94.7521 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1077: GFLOPs: 9544.4699. Time: 92.2722 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1078: GFLOPs: 9240.1941. Time: 95.3107 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1079: GFLOPs: 9425.8945. Time: 93.4330 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1080: GFLOPs: 9426.3151. Time: 93.4288 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1081: GFLOPs: 9236.3369. Time: 95.3505 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1082: GFLOPs: 6768.6045. Time: 130.1138 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1083: GFLOPs: 9339.9273. Time: 94.2929 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1084: GFLOPs: 9531.8540. Time: 92.3943 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1085: GFLOPs: 9243.3504. Time: 95.2781 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1086: GFLOPs: 3112.8538. Time: 282.9202 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1087: GFLOPs: 4080.7297. Time: 215.8166 us. Best GFLOPs: 9763.1369
2024-04-29 02:50:23 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1088: GFLOPs: 84.8693. Time: 10377.0111 us. Best GFLOPs: 9763.1369
2024-04-29 04:00:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:00:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 04:00:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 804 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2011 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 2814 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:01:30 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 04:01:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:02:01 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:02:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:02:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x44678f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3b80878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x70964b8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5919e58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x47e53c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b76328)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7788)]: 0 failure(s)
2024-04-29 04:02:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0454  1.0312  1.0171  1.0088  1.0046  0.9914  0.9882  0.9843  0.9841  0.9841  0.9835  0.9835  0.9833  0.9832  0.9832  0.9832
[17 : 32]:	0.9822  0.9816  0.9816  0.9815  0.9810  0.9810  0.9788  0.9788  0.9785  0.9785  0.9784  0.9782  0.9779  0.9779  0.9776  0.9775
[33 : 48]:	0.9774  0.9774  0.9772  0.9772  0.9769  0.9766  0.9764  0.9762  0.9762  0.9756  0.9755  0.9755  0.9747  0.9747  0.9744  0.9741
[49 : 64]:	0.9737  0.9732  0.9730  0.9730  0.9728  0.9728  0.9728  0.9725  0.9720  0.9718  0.9715  0.9710  0.9710  0.9710  0.9710  0.9710
2024-04-29 04:02:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:02:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1089: GFLOPs: 5293.0119. Time: 166.3871 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1090: GFLOPs: 5367.3766. Time: 164.0819 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1091: GFLOPs: 5312.1158. Time: 165.7888 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1092: GFLOPs: 5311.7583. Time: 165.7999 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1093: GFLOPs: 5247.7730. Time: 167.8215 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1094: GFLOPs: 9243.6334. Time: 95.2752 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1095: GFLOPs: 9170.3911. Time: 96.0362 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1096: GFLOPs: 9066.9912. Time: 97.1314 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1097: GFLOPs: 9486.5780. Time: 92.8353 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1098: GFLOPs: 9496.9590. Time: 92.7338 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1099: GFLOPs: 9552.8380. Time: 92.1914 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1100: GFLOPs: 9516.3078. Time: 92.5453 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1101: GFLOPs: 5361.2920. Time: 164.2681 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1102: GFLOPs: 9443.2523. Time: 93.2612 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1103: GFLOPs: 9430.1827. Time: 93.3905 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1104: GFLOPs: 9441.3795. Time: 93.2797 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1105: GFLOPs: 9429.4346. Time: 93.3979 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1106: GFLOPs: 9420.3593. Time: 93.4879 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1107: GFLOPs: 9399.4319. Time: 93.6960 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1108: GFLOPs: 9418.3687. Time: 93.5076 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1109: GFLOPs: 9219.3713. Time: 95.5259 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1110: GFLOPs: 9150.1749. Time: 96.2483 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1111: GFLOPs: 9425.3241. Time: 93.4386 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1112: GFLOPs: 9411.0051. Time: 93.5808 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1113: GFLOPs: 9383.1556. Time: 93.8585 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1114: GFLOPs: 9414.9688. Time: 93.5414 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1115: GFLOPs: 9408.5158. Time: 93.6055 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1116: GFLOPs: 9516.3658. Time: 92.5447 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1117: GFLOPs: 9448.2606. Time: 93.2118 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1118: GFLOPs: 9392.1402. Time: 93.7687 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1119: GFLOPs: 9499.6810. Time: 92.7072 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1120: GFLOPs: 9392.5881. Time: 93.7643 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1121: GFLOPs: 9468.7442. Time: 93.0101 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1122: GFLOPs: 9645.1250. Time: 91.3093 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1123: GFLOPs: 9199.9209. Time: 95.7279 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1124: GFLOPs: 9752.8106. Time: 90.3011 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1125: GFLOPs: 9530.7873. Time: 92.4047 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1126: GFLOPs: 9597.9149. Time: 91.7584 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1127: GFLOPs: 9658.1267. Time: 91.1863 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1128: GFLOPs: 9521.0276. Time: 92.4994 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1129: GFLOPs: 9521.7630. Time: 92.4922 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1130: GFLOPs: 9608.6076. Time: 91.6563 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1131: GFLOPs: 9553.4102. Time: 92.1858 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1132: GFLOPs: 9555.4335. Time: 92.1663 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1133: GFLOPs: 9540.6371. Time: 92.3093 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1134: GFLOPs: 9726.8729. Time: 90.5419 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1135: GFLOPs: 9740.8443. Time: 90.4120 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1136: GFLOPs: 9646.0109. Time: 91.3009 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1137: GFLOPs: 9520.2085. Time: 92.5073 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1138: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(256), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(256), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(44) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(256), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(44) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(196), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused // T.int64(49) * T.int64(32) + co_3_init * T.int64(8) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(49) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(196), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(392) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(392) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(256), ci_0)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(392) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(42)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(196), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1) // T.int64(2048))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1) % T.int64(2048) // T.int64(512))
                                    v2 = T.axis.spatial(T.int64(256), ci_0)
                                    v3 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1) % T.int64(512))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 < T.int64(8192))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused // T.int64(49) * T.int64(32) + co_3 * T.int64(8) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(49) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(256), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(32), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(16) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused // T.int64(49) * T.int64(32) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(49) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 4, 4, 4, 8])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 49, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 196, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144 = sch.split(loop=l142, factors=[None, 196], preserve_unit_iters=True)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b149)
l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1139: GFLOPs: 9612.8067. Time: 91.6162 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1140: GFLOPs: 9612.1975. Time: 91.6220 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1141: GFLOPs: 9427.8752. Time: 93.4133 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1142: GFLOPs: 9540.3707. Time: 92.3118 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1143: GFLOPs: 9533.1037. Time: 92.3822 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1144: GFLOPs: 9502.4978. Time: 92.6798 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1145: GFLOPs: 9539.5622. Time: 92.3197 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1146: GFLOPs: 9539.3534. Time: 92.3217 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1147: GFLOPs: 9502.7338. Time: 92.6775 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1148: GFLOPs: 9649.0208. Time: 91.2724 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1149: GFLOPs: 9633.4371. Time: 91.4200 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1150: GFLOPs: 2807.1539. Time: 313.7303 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1151: GFLOPs: 2496.4473. Time: 352.7770 us. Best GFLOPs: 9763.1369
2024-04-29 04:04:16 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_4] Trial #1152: GFLOPs: 4490.4833. Time: 196.1235 us. Best GFLOPs: 9763.1369
