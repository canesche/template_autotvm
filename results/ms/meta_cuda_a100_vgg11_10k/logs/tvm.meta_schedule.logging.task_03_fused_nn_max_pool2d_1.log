2024-04-28 19:49:59 [INFO] [task_scheduler.cc:160] Initializing Task #3: "fused_nn_max_pool2d_1"
2024-04-28 19:49:59 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56), T.int64(2), T.int64(2)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
2024-04-28 19:49:59 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2024-04-28 19:49:59 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_2 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0_ax1_ax2_ax3_fused_0, rv0, rv1 in T.grid(T.int64(2), T.int64(2), T.int64(2)):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) // T.int64(3136))
                            v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) % T.int64(3136) // T.int64(56))
                            v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2 < T.int64(401408))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
l10, l11, l12 = sch.split(loop=l9, factors=[None, 256, 1024], preserve_unit_iters=True)
sch.reorder(l11, l12, l10)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l12, thread_axis="threadIdx.x")
2024-04-28 19:49:59 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            for ax0_ax1_ax2_ax3_fused in T.thread_binding(T.int64(401408), thread="blockIdx.x"):
                for rv0_rv1_fused_0 in range(T.int64(1)):
                    for rv0_rv1_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(3136))
                            v_ax2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(56))
                            v_ax3 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(56))
                            v_rv0 = T.axis.reduce(T.int64(2), (rv0_rv1_fused_0 * T.int64(128) + rv0_rv1_fused_1) // T.int64(2))
                            v_rv1 = T.axis.reduce(T.int64(2), (rv0_rv1_fused_0 * T.int64(128) + rv0_rv1_fused_1) % T.int64(2))
                            T.where(rv0_rv1_fused_0 * T.int64(128) + rv0_rv1_fused_1 < T.int64(4))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=5)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l7, l8, preserve_unit_iters=True)
l10, l11 = sch.split(loop=l9, factors=[None, v2], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="threadIdx.x")
v12 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v12)
l13, l14, l15, l16, l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l13, l14, l15, l16, preserve_unit_iters=True)
sch.bind(loop=l19, thread_axis="blockIdx.x")
2024-04-28 19:57:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 19:57:38 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 19:57:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f76708)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ab2c68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6f96c18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f45a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4574e78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3ab3878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7338)]: 0 failure(s)
2024-04-28 19:57:38 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f76708)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ab2c68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6f96c18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f45a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4574e78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3ab3878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7338)]: 0 failure(s)
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f76708)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ab2c68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6f96c18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f45a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4574e78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3ab3878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7338)]: 0 failure(s)
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f76708)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ab2c68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6f96c18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f45a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4574e78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3ab3878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7338)]: 0 failure(s)
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x4f76708)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ab2c68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6f96c18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x76f45a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4574e78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3ab3878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x70a7338)]: 0 failure(s)
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:649] Scores of the best 45 candidates:
[1 : 16]:	0.9943  0.9745  0.9686  0.9584  0.9349  0.9147  0.8403  0.8279  0.8052  0.7969  0.7884  0.7620  0.7293  0.7282  0.7144  0.6860
[17 : 32]:	0.6801  0.6330  0.6292  0.6192  0.5937  0.5907  0.5727  0.5508  0.5083  0.4785  0.4432  0.4207  0.4005  0.3820  0.3435  0.3024
[33 : 45]:	0.2705  0.2419  0.2346  0.2255  0.2074  0.2067  0.2018  0.1819  0.1664  0.0547  0.0429  0.0176  0.0035
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:727] Got 45 candidate(s) with evolutionary search
2024-04-28 19:57:39 [INFO] [evolutionary_search.cc:730] Sending 45 candidates(s) for measurement
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #1: GFLOPs: 5.3429. Time: 300.5164 us. Best GFLOPs: 5.3429
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #2: GFLOPs: 2.0790. Time: 772.3087 us. Best GFLOPs: 5.3429
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #3: GFLOPs: 2.0788. Time: 772.3717 us. Best GFLOPs: 5.3429
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #4: GFLOPs: 5.3425. Time: 300.5373 us. Best GFLOPs: 5.3429
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #5: GFLOPs: 331.6536. Time: 4.8413 us. Best GFLOPs: 331.6536
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #6: GFLOPs: 5.3426. Time: 300.5354 us. Best GFLOPs: 331.6536
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #7: GFLOPs: 5.3462. Time: 300.3287 us. Best GFLOPs: 331.6536
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #8: GFLOPs: 287.5714. Time: 5.5834 us. Best GFLOPs: 331.6536
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #9: GFLOPs: 2.0790. Time: 772.3008 us. Best GFLOPs: 331.6536
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #10: GFLOPs: 331.9068. Time: 4.8376 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #11: GFLOPs: 5.3428. Time: 300.5240 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #12: GFLOPs: 5.3509. Time: 300.0663 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #13: GFLOPs: 5.3472. Time: 300.2761 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #14: GFLOPs: 5.3470. Time: 300.2889 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #15: GFLOPs: 5.3512. Time: 300.0530 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #16: GFLOPs: 2.0791. Time: 772.2634 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #17: GFLOPs: 5.3425. Time: 300.5392 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #18: GFLOPs: 5.3509. Time: 300.0701 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #19: GFLOPs: 4.2247. Time: 380.0565 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #20: GFLOPs: 2.0790. Time: 772.3008 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #21: GFLOPs: 5.3462. Time: 300.3306 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #22: GFLOPs: 5.3430. Time: 300.5087 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #23: GFLOPs: 5.3471. Time: 300.2799 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #24: GFLOPs: 5.3464. Time: 300.3218 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #25: GFLOPs: 5.3427. Time: 300.5259 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #26: GFLOPs: 5.3430. Time: 300.5087 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #27: GFLOPs: 5.3430. Time: 300.5086 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #28: GFLOPs: 5.3473. Time: 300.2684 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #29: GFLOPs: 5.3430. Time: 300.5125 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #30: GFLOPs: 4.2250. Time: 380.0275 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #31: GFLOPs: 5.3427. Time: 300.5259 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #32: GFLOPs: 5.3428. Time: 300.5202 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #33: GFLOPs: 5.3512. Time: 300.0492 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #34: GFLOPs: 331.6749. Time: 4.8410 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #35: GFLOPs: 5.3507. Time: 300.0778 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #36: GFLOPs: 4.2249. Time: 380.0389 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #37: GFLOPs: 5.3461. Time: 300.3390 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #38: GFLOPs: 5.3428. Time: 300.5202 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #39: GFLOPs: 4.2251. Time: 380.0202 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #40: GFLOPs: 4.2249. Time: 380.0395 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #41: GFLOPs: 5.3429. Time: 300.5144 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #42: GFLOPs: 5.3470. Time: 300.2856 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #43: GFLOPs: 5.3463. Time: 300.3237 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #44: GFLOPs: 5.3431. Time: 300.5030 us. Best GFLOPs: 331.9068
2024-04-28 20:24:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_max_pool2d_1] Trial #45: GFLOPs: 331.8908. Time: 4.8378 us. Best GFLOPs: 331.9068
