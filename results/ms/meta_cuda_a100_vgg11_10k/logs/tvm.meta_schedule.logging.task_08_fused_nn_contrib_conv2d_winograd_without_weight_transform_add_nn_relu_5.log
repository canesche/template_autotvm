2024-04-28 19:50:02 [INFO] [task_scheduler.cc:160] Initializing Task #8: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5"
2024-04-28 19:50:02 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(30), T.int64(30)))
        input_tile = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(512), T.int64(30), T.int64(30)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(512), T.int64(196), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps, v_p % T.int64(14) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps, v_p % T.int64(14) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(196), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(196), T.int64(512)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(512), T.int64(196), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-28 19:50:02 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 19:50:02 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax0)
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196))
                                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax2)
                            v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(128)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(6272)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(1568))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(1568) // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(98))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + ax0_ax1_ax2_ax3_fused % T.int64(98))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(8192))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(8192) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(512))
                                    v3 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(49)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) // T.int64(2) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused * T.int64(32) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(49) + p_3 * T.int64(49) + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(4) + ci_1 * T.int64(2) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(32), T.int64(49)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                            v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                            v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 16, 1, 16, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 49])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 2, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-04-28 19:50:02 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax0)
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196))
                                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax2)
                            v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(128), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(6272)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(1568))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(1568) // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(98))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + ax0_ax1_ax2_ax3_fused % T.int64(98))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(8192))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(8192) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(512))
                                    v3 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(49)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) // T.int64(2) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused * T.int64(32) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(49) + p_3 * T.int64(49) + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(4) + ci_1 * T.int64(2) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(32), T.int64(49)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                            v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                            v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 16, 1, 16, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 49])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 2, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-28 19:50:02 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax0)
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196))
                                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(196) + ax2)
                            v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(196) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(128), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(6272)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(1568))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(1568) // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(98))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + ax0_ax1_ax2_ax3_fused % T.int64(98))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(8192))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(8192) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(512))
                                    v3 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(49)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) // T.int64(2) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused * T.int64(32) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(49) + p_3 * T.int64(49) + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(4) + ci_1 * T.int64(2) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(32), T.int64(49)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused * T.int64(98) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                            v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                            v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 16, 1, 16, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 49])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 2, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-28 20:09:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:09:50 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:09:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 497 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:10:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 996 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:10:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1500 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:10:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2001 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:10:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2507 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:10:26 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-28 20:10:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:10:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 145 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:11:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:11:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:11:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9998  0.9997  0.9986  0.9985  0.9978  0.9974  0.9970  0.9967  0.9959  0.9953  0.9950  0.9949  0.9948  0.9946  0.9936  0.9924
[17 : 32]:	0.9922  0.9921  0.9920  0.9909  0.9899  0.9894  0.9883  0.9869  0.9851  0.9847  0.9845  0.9840  0.9837  0.9836  0.9834  0.9828
[33 : 48]:	0.9820  0.9816  0.9814  0.9799  0.9796  0.9788  0.9788  0.9785  0.9784  0.9780  0.9776  0.9768  0.9746  0.9742  0.9735  0.9729
[49 : 64]:	0.9710  0.9710  0.9696  0.9671  0.9656  0.9649  0.9649  0.9646  0.9646  0.9639  0.9637  0.9635  0.9634  0.9634  0.9628  0.9611
2024-04-28 20:11:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:11:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1: GFLOPs: 4.4678. Time: 389747.7213 us. Best GFLOPs: 4.4678
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2: GFLOPs: 1748.5196. Time: 995.8755 us. Best GFLOPs: 1748.5196
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #3: GFLOPs: 922.1307. Time: 1888.3526 us. Best GFLOPs: 1748.5196
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #4: GFLOPs: 37.3672. Time: 46599.8483 us. Best GFLOPs: 1748.5196
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #5: GFLOPs: 3146.1697. Time: 553.4692 us. Best GFLOPs: 3146.1697
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #6: GFLOPs: 1142.8181. Time: 1523.6964 us. Best GFLOPs: 3146.1697
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #7: GFLOPs: 441.4535. Time: 3944.4873 us. Best GFLOPs: 3146.1697
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #8: GFLOPs: 341.8942. Time: 5093.1198 us. Best GFLOPs: 3146.1697
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #9: GFLOPs: 4141.5406. Time: 420.4493 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #10: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(1), T.int64(4), T.int64(49), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(64) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(64) * T.int64(4) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(512)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(784))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784) // T.int64(196))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1568))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) // T.int64(2048))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(2048) // T.int64(512))
                                    v2 = T.axis.spatial(T.int64(512), ci_0)
                                    v3 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(49), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(64) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(64) * T.int64(4) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(4), T.int64(49)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(64) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(64) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 2, 64, 4, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 4, 1, 49, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 128, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144 = sch.split(loop=l142, factors=[None, 128], preserve_unit_iters=True)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b149)
l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #11: GFLOPs: 2302.7171. Time: 756.1971 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #12: GFLOPs: 551.8739. Time: 3155.2639 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #13: GFLOPs: 448.7936. Time: 3879.9752 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #14: GFLOPs: 388.7041. Time: 4479.7774 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #15: GFLOPs: 659.9282. Time: 2638.6323 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #16: GFLOPs: 129.5012. Time: 13446.2719 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #17: GFLOPs: 1153.9529. Time: 1508.9939 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #18: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(4), T.int64(49), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused * T.int64(4) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(25)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1568))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1568) // T.int64(392))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(196))
                                        v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(3136))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(4096))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4096) // T.int64(1024))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(512))
                                        v3 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(2), T.int64(2), T.int64(4), T.int64(49), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused * T.int64(4) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(2) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(4), T.int64(4), T.int64(49)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_1_nu_1_co_1_p_1_fused // T.int64(4) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 2, 64, 4, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 4, 1, 49, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 2, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 64, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 64, 4], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #19: GFLOPs: 34.7897. Time: 50052.4393 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #20: GFLOPs: 588.6765. Time: 2958.0046 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #21: GFLOPs: 1067.8803. Time: 1630.6209 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #22: GFLOPs: 558.9836. Time: 3115.1322 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #23: GFLOPs: 1264.7344. Time: 1376.8170 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #24: GFLOPs: 347.3271. Time: 5013.4529 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #25: GFLOPs: 1449.7905. Time: 1201.0755 us. Best GFLOPs: 4141.5406
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #26: GFLOPs: 4758.9715. Time: 365.9001 us. Best GFLOPs: 4758.9715
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #27: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + eps_3_init * T.int64(2) + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(28) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(28) // T.int64(7) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3_init * T.int64(2) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(49) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(7) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(256), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(13)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(196))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196) // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(98) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(49) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1 < T.int64(392))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(512))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(256))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(28) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(28) // T.int64(7) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3 * T.int64(2) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(49) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(2) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(1), T.int64(2), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(16) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(16) // T.int64(8) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(28) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(28) // T.int64(7) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(49) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 2, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 4, 32, 1, 2])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[4, 7, 1, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 2, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137 = sch.split(loop=l135, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b150)
l180, l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #28: GFLOPs: 793.0131. Time: 2195.8122 us. Best GFLOPs: 4758.9715
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #29: GFLOPs: 3083.7926. Time: 564.6644 us. Best GFLOPs: 4758.9715
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #30: GFLOPs: 5678.6677. Time: 306.6402 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #31: GFLOPs: 4261.7049. Time: 408.5942 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #32: GFLOPs: 4.4536. Time: 390985.7177 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #33: GFLOPs: 919.2714. Time: 1894.2261 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #34: GFLOPs: 5172.3170. Time: 336.6592 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #35: GFLOPs: 4301.4779. Time: 404.8162 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #36: GFLOPs: 616.9165. Time: 2822.5992 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #37: GFLOPs: 2707.2100. Time: 643.2112 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #38: GFLOPs: 4531.7593. Time: 384.2455 us. Best GFLOPs: 5678.6677
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #39: GFLOPs: 5715.0467. Time: 304.6883 us. Best GFLOPs: 5715.0467
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #40: GFLOPs: 722.3419. Time: 2410.6423 us. Best GFLOPs: 5715.0467
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #41: GFLOPs: 5262.7570. Time: 330.8737 us. Best GFLOPs: 5715.0467
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #42: GFLOPs: 5876.0686. Time: 296.3389 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #43: GFLOPs: 4961.9059. Time: 350.9353 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #44: GFLOPs: 5.7974. Time: 300360.0260 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #45: GFLOPs: 5325.0989. Time: 327.0001 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #46: GFLOPs: 5853.6870. Time: 297.4720 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #47: GFLOPs: 1632.4239. Time: 1066.7008 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #48: GFLOPs: 1393.0968. Time: 1249.9547 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #49: GFLOPs: 1450.1687. Time: 1200.7623 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #50: GFLOPs: 4838.6048. Time: 359.8781 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #51: GFLOPs: 4825.2631. Time: 360.8732 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #52: GFLOPs: 370.3684. Time: 4701.5565 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #53: GFLOPs: 5255.5391. Time: 331.3281 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #54: GFLOPs: 695.5136. Time: 2503.6287 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #55: GFLOPs: 335.0995. Time: 5196.3905 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #56: GFLOPs: 21.2032. Time: 82124.8013 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #57: GFLOPs: 492.9319. Time: 3532.5528 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #58: GFLOPs: 63.8228. Time: 27283.4567 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #59: GFLOPs: 102.3019. Time: 17021.2693 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #60: GFLOPs: 3009.3271. Time: 578.6370 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #61: GFLOPs: 219.2665. Time: 7941.5136 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #62: GFLOPs: 4871.1045. Time: 357.4770 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #63: GFLOPs: 22.8137. Time: 76327.2550 us. Best GFLOPs: 5876.0686
2024-04-28 20:24:08 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #64: GFLOPs: 73.5808. Time: 23665.2542 us. Best GFLOPs: 5876.0686
2024-04-28 20:27:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:27:34 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-28 20:27:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 443 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:27:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 886 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:27:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1325 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:27:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1772 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:28:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:28:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2660 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:28:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:28:16 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-28 20:28:30 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:28:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:29:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:29:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:29:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3865  1.2189  1.0782  1.0648  1.0540  1.0524  1.0519  1.0464  1.0430  1.0412  1.0389  1.0357  1.0353  1.0352  1.0280  1.0186
[17 : 32]:	1.0142  1.0133  1.0132  1.0076  1.0059  1.0052  1.0046  0.9995  0.9972  0.9963  0.9962  0.9962  0.9933  0.9933  0.9906  0.9903
[33 : 48]:	0.9873  0.9863  0.9855  0.9852  0.9839  0.9832  0.9829  0.9826  0.9820  0.9820  0.9806  0.9802  0.9802  0.9759  0.9708  0.9704
[49 : 64]:	0.9680  0.9677  0.9642  0.9642  0.9621  0.9620  0.9593  0.9589  0.9589  0.9574  0.9573  0.9573  0.9555  0.9550  0.9550  0.9550
2024-04-28 20:29:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:29:28 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #65: GFLOPs: 2164.1915. Time: 804.5997 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #66: GFLOPs: 2582.8623. Time: 674.1776 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #67: GFLOPs: 1067.9885. Time: 1630.4557 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #68: GFLOPs: 5669.4213. Time: 307.1403 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #69: GFLOPs: 5657.9509. Time: 307.7630 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #70: GFLOPs: 5817.1433. Time: 299.3407 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #71: GFLOPs: 2626.6223. Time: 662.9457 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #72: GFLOPs: 5823.1136. Time: 299.0338 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #73: GFLOPs: 5849.4887. Time: 297.6855 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #74: GFLOPs: 5829.0403. Time: 298.7298 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #75: GFLOPs: 377.0197. Time: 4618.6125 us. Best GFLOPs: 5876.0686
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #76: GFLOPs: 6418.8698. Time: 271.2795 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #77: GFLOPs: 5824.2274. Time: 298.9766 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #78: GFLOPs: 5705.6314. Time: 305.1911 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #79: GFLOPs: 5927.8997. Time: 293.7479 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #80: GFLOPs: 5507.6292. Time: 316.1629 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #81: GFLOPs: 6034.1471. Time: 288.5756 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #82: GFLOPs: 5720.3327. Time: 304.4068 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #83: GFLOPs: 6254.9956. Time: 278.3868 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #84: GFLOPs: 6226.0949. Time: 279.6790 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #85: GFLOPs: 6146.9731. Time: 283.2789 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #86: GFLOPs: 6029.5419. Time: 288.7961 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #87: GFLOPs: 6113.0471. Time: 284.8511 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #88: GFLOPs: 3594.1612. Time: 484.4824 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #89: GFLOPs: 5024.6457. Time: 346.5534 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #90: GFLOPs: 6239.8098. Time: 279.0643 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #91: GFLOPs: 6107.0426. Time: 285.1311 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #92: GFLOPs: 69.8769. Time: 24919.6548 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #93: GFLOPs: 5701.2980. Time: 305.4231 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #94: GFLOPs: 5705.6928. Time: 305.1878 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #95: GFLOPs: 5853.9300. Time: 297.4596 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #96: GFLOPs: 5686.3068. Time: 306.2283 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #97: GFLOPs: 5736.3001. Time: 303.5594 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #98: GFLOPs: 5841.1811. Time: 298.1089 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #99: GFLOPs: 5843.4038. Time: 297.9955 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #100: GFLOPs: 5929.1452. Time: 293.6862 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #101: GFLOPs: 5502.3438. Time: 316.4666 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #102: GFLOPs: 6235.9146. Time: 279.2386 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #103: GFLOPs: 5620.8314. Time: 309.7954 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #104: GFLOPs: 5875.6014. Time: 296.3625 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #105: GFLOPs: 5879.0547. Time: 296.1884 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #106: GFLOPs: 5882.4547. Time: 296.0172 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #107: GFLOPs: 6065.9659. Time: 287.0619 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #108: GFLOPs: 6112.4713. Time: 284.8779 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #109: GFLOPs: 6107.7077. Time: 285.1001 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #110: GFLOPs: 5880.8771. Time: 296.0966 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #111: GFLOPs: 4043.3719. Time: 430.6574 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #112: GFLOPs: 3745.2760. Time: 464.9345 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #113: GFLOPs: 3800.6426. Time: 458.1614 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #114: GFLOPs: 6006.0567. Time: 289.9253 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #115: GFLOPs: 3549.2605. Time: 490.6115 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #116: GFLOPs: 5631.8572. Time: 309.1889 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #117: GFLOPs: 5492.9319. Time: 317.0088 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #118: GFLOPs: 5748.3269. Time: 302.9243 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #119: GFLOPs: 5768.2462. Time: 301.8782 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #120: GFLOPs: 5778.7902. Time: 301.3274 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #121: GFLOPs: 5779.0268. Time: 301.3151 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #122: GFLOPs: 5655.3709. Time: 307.9034 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #123: GFLOPs: 5823.6906. Time: 299.0042 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #124: GFLOPs: 5821.4723. Time: 299.1181 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #125: GFLOPs: 5061.2570. Time: 344.0465 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #126: GFLOPs: 4030.0642. Time: 432.0794 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #127: GFLOPs: 86.9161. Time: 20034.3550 us. Best GFLOPs: 6418.8698
2024-04-28 20:30:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #128: GFLOPs: 5920.2802. Time: 294.1259 us. Best GFLOPs: 6418.8698
2024-04-28 20:38:37 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:38:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 20:38:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:38:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 804 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:38:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1209 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:39:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1613 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:39:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:39:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2419 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:39:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2820 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:39:18 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-28 20:39:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:39:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:40:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:40:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:40:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1303  1.1147  1.1012  1.0500  1.0247  1.0212  0.9854  0.9747  0.9743  0.9717  0.9716  0.9713  0.9691  0.9646  0.9646  0.9633
[17 : 32]:	0.9614  0.9610  0.9610  0.9588  0.9580  0.9580  0.9570  0.9558  0.9550  0.9548  0.9546  0.9538  0.9532  0.9521  0.9502  0.9490
[33 : 48]:	0.9480  0.9480  0.9477  0.9477  0.9472  0.9457  0.9447  0.9436  0.9430  0.9411  0.9406  0.9403  0.9403  0.9398  0.9379  0.9379
[49 : 64]:	0.9377  0.9375  0.9371  0.9370  0.9359  0.9356  0.9355  0.9354  0.9353  0.9351  0.9351  0.9336  0.9326  0.9325  0.9316  0.9306
2024-04-28 20:40:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:40:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #129: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + co_3_init * T.int64(16) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(512)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1568))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(19)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(256))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4096))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + co_3 * T.int64(16) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(32), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 4, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 1, 8, 2, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 7, 14, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 112, 4], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #130: GFLOPs: 45.7590. Time: 38053.8887 us. Best GFLOPs: 6418.8698
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #131: GFLOPs: 48.5907. Time: 35836.2450 us. Best GFLOPs: 6418.8698
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #132: GFLOPs: 6551.9087. Time: 265.7711 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #133: GFLOPs: 3841.4559. Time: 453.2937 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #134: GFLOPs: 4212.8321. Time: 413.3343 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #135: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + co_3_init * T.int64(16) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(512)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(19)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(256))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4096))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + co_3 * T.int64(16) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(32), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 4, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 1, 8, 2, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 7, 14, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #136: GFLOPs: 5884.0692. Time: 295.9360 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #137: GFLOPs: 5380.1543. Time: 323.6539 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #138: GFLOPs: 3908.3174. Time: 445.5390 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #139: GFLOPs: 5676.8062. Time: 306.7408 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #140: GFLOPs: 3939.6840. Time: 441.9918 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #141: GFLOPs: 5662.9987. Time: 307.4887 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #142: GFLOPs: 5820.3978. Time: 299.1733 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #143: GFLOPs: 5861.6216. Time: 297.0693 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #144: GFLOPs: 6102.4174. Time: 285.3472 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #145: GFLOPs: 3862.2697. Time: 450.8509 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #146: GFLOPs: 6303.2189. Time: 276.2569 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #147: GFLOPs: 6309.4187. Time: 275.9855 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #148: GFLOPs: 4140.9768. Time: 420.5066 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #149: GFLOPs: 6230.9651. Time: 279.4604 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #150: GFLOPs: 6240.1111. Time: 279.0508 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #151: GFLOPs: 3982.3754. Time: 437.2536 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #152: GFLOPs: 5664.1764. Time: 307.4247 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #153: GFLOPs: 6109.0187. Time: 285.0389 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #154: GFLOPs: 5951.3867. Time: 292.5886 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #155: GFLOPs: 6157.8677. Time: 282.7777 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #156: GFLOPs: 5721.1663. Time: 304.3624 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #157: GFLOPs: 6318.2876. Time: 275.5981 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #158: GFLOPs: 5137.7144. Time: 338.9266 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #159: GFLOPs: 6256.5324. Time: 278.3184 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #160: GFLOPs: 5978.9441. Time: 291.2400 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #161: GFLOPs: 6153.1702. Time: 282.9936 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #162: GFLOPs: 6148.1036. Time: 283.2268 us. Best GFLOPs: 6551.9087
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #163: GFLOPs: 6851.4633. Time: 254.1512 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #164: GFLOPs: 6123.8795. Time: 284.3472 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #165: GFLOPs: 5683.8831. Time: 306.3589 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #166: GFLOPs: 3164.5545. Time: 550.2537 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #167: GFLOPs: 6109.2510. Time: 285.0281 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #168: GFLOPs: 5879.1177. Time: 296.1852 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #169: GFLOPs: 6146.7472. Time: 283.2893 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #170: GFLOPs: 5606.2583. Time: 310.6007 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #171: GFLOPs: 5932.2515. Time: 293.5324 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #172: GFLOPs: 6602.2733. Time: 263.7437 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #173: GFLOPs: 6229.3432. Time: 279.5331 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #174: GFLOPs: 5694.0022. Time: 305.8144 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #175: GFLOPs: 6235.3543. Time: 279.2637 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #176: GFLOPs: 6232.1673. Time: 279.4065 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #177: GFLOPs: 6027.3980. Time: 288.8988 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #178: GFLOPs: 6027.8626. Time: 288.8765 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #179: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(16), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) * T.int64(2) + eps_3_init * T.int64(2) + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + co_3_init * T.int64(16) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(512)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(19)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(256))
                                        v2 = T.axis.spatial(T.int64(512), ci_0)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4096))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(16), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + co_3 * T.int64(16) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(32), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(14) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(32) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 1, 8, 2, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 7, 14, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #180: GFLOPs: 3.3426. Time: 520946.3297 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #181: GFLOPs: 5653.7180. Time: 307.9934 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #182: GFLOPs: 6042.7187. Time: 288.1663 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #183: GFLOPs: 6175.4341. Time: 281.9734 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #184: GFLOPs: 5329.7539. Time: 326.7145 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #185: GFLOPs: 6303.9394. Time: 276.2254 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #186: GFLOPs: 6134.7134. Time: 283.8450 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #187: GFLOPs: 6141.9113. Time: 283.5124 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #188: GFLOPs: 5373.8957. Time: 324.0308 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #189: GFLOPs: 5698.8598. Time: 305.5537 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #190: GFLOPs: 4105.9944. Time: 424.0892 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #191: GFLOPs: 3715.6644. Time: 468.6397 us. Best GFLOPs: 6851.4633
2024-04-28 20:42:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #192: GFLOPs: 3899.7615. Time: 446.5165 us. Best GFLOPs: 6851.4633
2024-04-28 20:53:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:54:00 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 20:54:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2817 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:54:39 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-28 20:54:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:55:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:55:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:55:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 20:55:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9918  0.9908  0.9884  0.9564  0.9556  0.9522  0.9474  0.9429  0.9359  0.9354  0.9346  0.9341  0.9321  0.9321  0.9281  0.9274
[17 : 32]:	0.9249  0.9238  0.9227  0.9223  0.9222  0.9211  0.9196  0.9186  0.9178  0.9170  0.9170  0.9159  0.9146  0.9143  0.9142  0.9139
[33 : 48]:	0.9116  0.9116  0.9109  0.9074  0.9070  0.9069  0.9065  0.9059  0.9059  0.9059  0.9059  0.9058  0.9057  0.9041  0.9034  0.9032
[49 : 64]:	0.9032  0.9032  0.9026  0.9021  0.9021  0.9014  0.9014  0.9009  0.9007  0.9007  0.9007  0.9006  0.9001  0.9000  0.8991  0.8988
2024-04-28 20:55:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:55:54 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #193: GFLOPs: 6573.5127. Time: 264.8976 us. Best GFLOPs: 6851.4633
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #194: GFLOPs: 6259.5760. Time: 278.1830 us. Best GFLOPs: 6851.4633
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #195: GFLOPs: 6305.4921. Time: 276.1573 us. Best GFLOPs: 6851.4633
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #196: GFLOPs: 6746.5415. Time: 258.1038 us. Best GFLOPs: 6851.4633
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #197: GFLOPs: 6450.5225. Time: 269.9483 us. Best GFLOPs: 6851.4633
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #198: GFLOPs: 6109.1535. Time: 285.0326 us. Best GFLOPs: 6851.4633
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #199: GFLOPs: 6956.5230. Time: 250.3130 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #200: GFLOPs: 6553.6673. Time: 265.6998 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #201: GFLOPs: 6295.5629. Time: 276.5929 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #202: GFLOPs: 6638.5632. Time: 262.3019 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #203: GFLOPs: 6647.4996. Time: 261.9493 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #204: GFLOPs: 6169.8061. Time: 282.2306 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #205: GFLOPs: 6327.6128. Time: 275.1919 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #206: GFLOPs: 6302.0338. Time: 276.3089 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #207: GFLOPs: 6006.8041. Time: 289.8892 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #208: GFLOPs: 6230.2082. Time: 279.4943 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #209: GFLOPs: 6275.3767. Time: 277.4826 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #210: GFLOPs: 5746.3922. Time: 303.0263 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #211: GFLOPs: 6209.1872. Time: 280.4406 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #212: GFLOPs: 5613.9118. Time: 310.1773 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #213: GFLOPs: 5028.8774. Time: 346.2618 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #214: GFLOPs: 5888.2120. Time: 295.7278 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #215: GFLOPs: 1291.3801. Time: 1348.4084 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #216: GFLOPs: 6237.4231. Time: 279.1710 us. Best GFLOPs: 6956.5230
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #217: GFLOPs: 7084.8583. Time: 245.7788 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #218: GFLOPs: 6602.9914. Time: 263.7150 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #219: GFLOPs: 6298.6269. Time: 276.4583 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #220: GFLOPs: 6229.8889. Time: 279.5087 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #221: GFLOPs: 6305.0777. Time: 276.1755 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #222: GFLOPs: 5748.2109. Time: 302.9304 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #223: GFLOPs: 6146.9588. Time: 283.2796 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #224: GFLOPs: 6046.4252. Time: 287.9897 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #225: GFLOPs: 6226.8111. Time: 279.6468 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #226: GFLOPs: 6249.2570. Time: 278.6424 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #227: GFLOPs: 6208.8274. Time: 280.4568 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #228: GFLOPs: 6310.7426. Time: 275.9276 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #229: GFLOPs: 6309.2281. Time: 275.9938 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #230: GFLOPs: 6232.9094. Time: 279.3732 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #231: GFLOPs: 6324.4154. Time: 275.3310 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #232: GFLOPs: 6199.0386. Time: 280.8997 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #233: GFLOPs: 6236.0502. Time: 279.2325 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #234: GFLOPs: 6228.8854. Time: 279.5537 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #235: GFLOPs: 4364.0980. Time: 399.0075 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #236: GFLOPs: 6287.4502. Time: 276.9498 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #237: GFLOPs: 5809.1901. Time: 299.7505 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #238: GFLOPs: 6542.6452. Time: 266.1474 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #239: GFLOPs: 5813.4873. Time: 299.5290 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #240: GFLOPs: 6285.0201. Time: 277.0569 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #241: GFLOPs: 6245.1944. Time: 278.8237 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #242: GFLOPs: 6331.1719. Time: 275.0372 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #243: GFLOPs: 6109.8216. Time: 285.0014 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #244: GFLOPs: 4478.5335. Time: 388.8121 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #245: GFLOPs: 6143.3038. Time: 283.4481 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #246: GFLOPs: 6229.8358. Time: 279.5110 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #247: GFLOPs: 6231.8064. Time: 279.4227 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #248: GFLOPs: 6226.1331. Time: 279.6773 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #249: GFLOPs: 6147.2226. Time: 283.2674 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #250: GFLOPs: 6146.3121. Time: 283.3094 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #251: GFLOPs: 6246.6039. Time: 278.7607 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #252: GFLOPs: 6138.1453. Time: 283.6863 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #253: GFLOPs: 1308.2985. Time: 1330.9715 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #254: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(120) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(7), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(4), T.int64(2), T.int64(2), T.int64(14), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused * T.int64(14) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(13)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(98))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(98))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1568))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(512))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused * T.int64(14) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(2), T.int64(14)):
                        with T.block("bgemm_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(128) + eps_2_nu_2_co_2_p_2_fused * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(98) + eps_1_nu_1_co_1_p_1_fused * T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[4, 1, 64, 2, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 7, 1, 14, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137, l138 = sch.split(loop=l135, factors=[None, 64, 2], preserve_unit_iters=True)
sch.vectorize(loop=l138)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l139, l140, l141, l142, l143 = sch.get_loops(block=b108)
l144, l145, l146 = sch.split(loop=l143, factors=[None, 64, 4], preserve_unit_iters=True)
sch.vectorize(loop=l146)
sch.bind(loop=l145, thread_axis="threadIdx.x")
b147 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b147, ann_key="meta_schedule.unroll_explicit")
b148, b149, b150, b151, b152, b153, b154, b155, b156 = sch.get_child_blocks(b147)
l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b148)
l163, l164, l165, l166, l167, l168 = sch.get_loops(block=b149)
sch.annotate(block_or_loop=l163, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l163, ann_key="pragma_unroll_explicit", ann_val=1)
l169, l170, l171, l172, l173, l174 = sch.get_loops(block=b150)
l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b151)
l182, l183, l184, l185, l186, l187, l188 = sch.get_loops(block=b152)
l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l189, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l189, ann_key="pragma_unroll_explicit", ann_val=1)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b154)
l210, l211, l212, l213, l214, l215, l216, l217 = sch.get_loops(block=b155)
sch.annotate(block_or_loop=l210, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l210, ann_key="pragma_unroll_explicit", ann_val=1)
l218, l219, l220, l221 = sch.get_loops(block=b156)
b222 = sch.get_block(name="data_pack", func_name="main")
l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b222)
b229 = sch.decompose_reduction(block=b222, loop=l227)
b230 = sch.get_block(name="bgemm", func_name="main")
l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243, l244 = sch.get_loops(block=b230)
b245 = sch.decompose_reduction(block=b230, loop=l234)
b246 = sch.get_block(name="inverse", func_name="main")
l247, l248, l249, l250, l251, l252, l253, l254 = sch.get_loops(block=b246)
b255 = sch.decompose_reduction(block=b246, loop=l253)
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #255: GFLOPs: 35.1819. Time: 49494.3593 us. Best GFLOPs: 7084.8583
2024-04-28 20:57:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #256: GFLOPs: 103.7943. Time: 16776.5337 us. Best GFLOPs: 7084.8583
2024-04-28 21:04:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:04:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:04:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:04:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 804 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:04:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:04:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:04:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:05:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:05:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2818 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:05:07 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-28 21:05:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:05:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:05:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:06:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:06:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5372  1.5341  1.5112  0.9904  0.9904  0.9904  0.9798  0.9746  0.9631  0.9591  0.9591  0.9591  0.9570  0.9447  0.9432  0.9403
[17 : 32]:	0.9386  0.9377  0.9336  0.9323  0.9236  0.9220  0.9208  0.9207  0.9152  0.9143  0.9142  0.9142  0.9140  0.9133  0.9130  0.9117
[33 : 48]:	0.9106  0.9106  0.9088  0.9053  0.9050  0.9044  0.9007  0.8997  0.8993  0.8992  0.8991  0.8985  0.8978  0.8977  0.8966  0.8965
[49 : 64]:	0.8964  0.8962  0.8957  0.8952  0.8944  0.8930  0.8922  0.8922  0.8920  0.8914  0.8906  0.8905  0.8902  0.8902  0.8898  0.8855
2024-04-28 21:06:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:06:24 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #257: GFLOPs: 1304.0523. Time: 1335.3053 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #258: GFLOPs: 2308.8291. Time: 754.1952 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #259: GFLOPs: 1323.2890. Time: 1315.8939 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #260: GFLOPs: 18.9971. Time: 91661.6513 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #261: GFLOPs: 37.6063. Time: 46303.5733 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #262: GFLOPs: 19.0750. Time: 91287.5567 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #263: GFLOPs: 1348.9412. Time: 1290.8702 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #264: GFLOPs: 7055.7984. Time: 246.7911 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #265: GFLOPs: 6801.0057. Time: 256.0368 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #266: GFLOPs: 7049.2242. Time: 247.0212 us. Best GFLOPs: 7084.8583
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #267: GFLOPs: 7193.2172. Time: 242.0764 us. Best GFLOPs: 7193.2172
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #268: GFLOPs: 7219.0255. Time: 241.2109 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #269: GFLOPs: 6475.9511. Time: 268.8884 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #270: GFLOPs: 6945.9368. Time: 250.6945 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #271: GFLOPs: 7075.9023. Time: 246.0899 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #272: GFLOPs: 6630.1097. Time: 262.6364 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #273: GFLOPs: 2164.9065. Time: 804.3340 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #274: GFLOPs: 39.3661. Time: 44233.7290 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #275: GFLOPs: 6772.3908. Time: 257.1186 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #276: GFLOPs: 4907.5129. Time: 354.8249 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #277: GFLOPs: 6163.4987. Time: 282.5194 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #278: GFLOPs: 6268.8086. Time: 277.7733 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #279: GFLOPs: 6314.0306. Time: 275.7839 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #280: GFLOPs: 6310.3111. Time: 275.9464 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #281: GFLOPs: 6180.7238. Time: 281.7320 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #282: GFLOPs: 6209.1194. Time: 280.4436 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #283: GFLOPs: 6587.7115. Time: 264.3267 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #284: GFLOPs: 5859.7380. Time: 297.1648 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #285: GFLOPs: 6208.1029. Time: 280.4895 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #286: GFLOPs: 6564.0495. Time: 265.2795 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #287: GFLOPs: 6593.0970. Time: 264.1108 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #288: GFLOPs: 6593.9521. Time: 264.0765 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #289: GFLOPs: 40.7702. Time: 42710.3573 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #290: GFLOPs: 35.4617. Time: 49103.8713 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #291: GFLOPs: 6099.5516. Time: 285.4813 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #292: GFLOPs: 6096.5497. Time: 285.6219 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #293: GFLOPs: 19.0318. Time: 91494.7407 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #294: GFLOPs: 6394.2881. Time: 272.3224 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #295: GFLOPs: 6799.2194. Time: 256.1041 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #296: GFLOPs: 6486.1829. Time: 268.4642 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #297: GFLOPs: 6551.3300. Time: 265.7946 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #298: GFLOPs: 6803.0134. Time: 255.9613 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #299: GFLOPs: 6308.7818. Time: 276.0133 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #300: GFLOPs: 5515.4069. Time: 315.7170 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #301: GFLOPs: 6300.0421. Time: 276.3962 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #302: GFLOPs: 6641.6657. Time: 262.1794 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #303: GFLOPs: 6312.1241. Time: 275.8672 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #304: GFLOPs: 6267.3055. Time: 277.8400 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #305: GFLOPs: 6122.7375. Time: 284.4002 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #306: GFLOPs: 6290.1649. Time: 276.8302 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #307: GFLOPs: 36.1308. Time: 48194.5597 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #308: GFLOPs: 6103.5876. Time: 285.2925 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #309: GFLOPs: 18.3102. Time: 95100.5857 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #310: GFLOPs: 6251.0374. Time: 278.5630 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #311: GFLOPs: 6195.8336. Time: 281.0450 us. Best GFLOPs: 7219.0255
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #312: GFLOPs: 7438.8276. Time: 234.0836 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #313: GFLOPs: 7340.1306. Time: 237.2312 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #314: GFLOPs: 6931.0286. Time: 251.2337 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #315: GFLOPs: 6694.4237. Time: 260.1132 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #316: GFLOPs: 6277.3790. Time: 277.3941 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #317: GFLOPs: 6209.9569. Time: 280.4058 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #318: GFLOPs: 2582.7309. Time: 674.2119 us. Best GFLOPs: 7438.8276
2024-04-28 21:07:29 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #319: GFLOPs: 5595.1085. Time: 311.2197 us. Best GFLOPs: 7438.8276
2024-04-28 21:19:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:19:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:19:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 800 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1605 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2008 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:19:42 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-28 21:19:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:20:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:20:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:20:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:21:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1035  1.0201  0.9896  0.9756  0.9678  0.9672  0.9653  0.9627  0.9599  0.9575  0.9563  0.9557  0.9512  0.9508  0.9482  0.9465
[17 : 32]:	0.9455  0.9418  0.9403  0.9385  0.9345  0.9345  0.9327  0.9301  0.9300  0.9290  0.9287  0.9286  0.9280  0.9277  0.9264  0.9247
[33 : 48]:	0.9245  0.9241  0.9237  0.9236  0.9231  0.9217  0.9204  0.9196  0.9172  0.9171  0.9163  0.9151  0.9144  0.9144  0.9138  0.9138
[49 : 64]:	0.9138  0.9127  0.9127  0.9099  0.9044  0.9035  0.9032  0.9032  0.9026  0.9003  0.8997  0.8994  0.8993  0.8987  0.8976  0.8970
2024-04-28 21:21:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:21:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #320: GFLOPs: 2975.4346. Time: 585.2281 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #321: GFLOPs: 7212.9960. Time: 241.4126 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #322: GFLOPs: 6426.9448. Time: 270.9387 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #323: GFLOPs: 7182.7877. Time: 242.4279 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #324: GFLOPs: 6104.0190. Time: 285.2724 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #325: GFLOPs: 7267.7628. Time: 239.5934 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #326: GFLOPs: 6905.0863. Time: 252.1776 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #327: GFLOPs: 7193.8984. Time: 242.0534 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #328: GFLOPs: 6931.8065. Time: 251.2055 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #329: GFLOPs: 7236.0850. Time: 240.6423 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #330: GFLOPs: 7020.1742. Time: 248.0434 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #331: GFLOPs: 6728.2488. Time: 258.8055 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #332: GFLOPs: 6475.3148. Time: 268.9148 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #333: GFLOPs: 7013.3826. Time: 248.2836 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #334: GFLOPs: 7254.0838. Time: 240.0452 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #335: GFLOPs: 6744.5037. Time: 258.1818 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #336: GFLOPs: 6092.4754. Time: 285.8129 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #337: GFLOPs: 7185.8454. Time: 242.3247 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #338: GFLOPs: 7072.1123. Time: 246.2218 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #339: GFLOPs: 7323.4526. Time: 237.7714 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #340: GFLOPs: 5020.1119. Time: 346.8664 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #341: GFLOPs: 7202.1775. Time: 241.7752 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #342: GFLOPs: 7093.6918. Time: 245.4727 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #343: GFLOPs: 7394.6894. Time: 235.4809 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #344: GFLOPs: 6934.3494. Time: 251.1134 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #345: GFLOPs: 6886.3253. Time: 252.8646 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #346: GFLOPs: 7119.1812. Time: 244.5938 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #347: GFLOPs: 6791.9025. Time: 256.3800 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #348: GFLOPs: 6319.5254. Time: 275.5441 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #349: GFLOPs: 5861.2603. Time: 297.0876 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #350: GFLOPs: 6577.6613. Time: 264.7306 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #351: GFLOPs: 7100.1589. Time: 245.2491 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #352: GFLOPs: 6806.0075. Time: 255.8487 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #353: GFLOPs: 6929.0431. Time: 251.3057 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #354: GFLOPs: 5883.8932. Time: 295.9449 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #355: GFLOPs: 6570.7208. Time: 265.0102 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #356: GFLOPs: 7371.1367. Time: 236.2333 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #357: GFLOPs: 6792.0335. Time: 256.3750 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #358: GFLOPs: 7254.6330. Time: 240.0270 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #359: GFLOPs: 6738.2765. Time: 258.4204 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #360: GFLOPs: 6585.7911. Time: 264.4038 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #361: GFLOPs: 7203.1068. Time: 241.7440 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #362: GFLOPs: 5660.5827. Time: 307.6199 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #363: GFLOPs: 6840.6285. Time: 254.5538 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #364: GFLOPs: 6773.7895. Time: 257.0655 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #365: GFLOPs: 6746.1691. Time: 258.1180 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #366: GFLOPs: 6752.9928. Time: 257.8572 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #367: GFLOPs: 6704.8356. Time: 259.7093 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #368: GFLOPs: 6742.3840. Time: 258.2629 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #369: GFLOPs: 5865.5081. Time: 296.8725 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #370: GFLOPs: 5999.9083. Time: 290.2224 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #371: GFLOPs: 6680.2967. Time: 260.6633 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #372: GFLOPs: 6559.7916. Time: 265.4517 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #373: GFLOPs: 6564.8419. Time: 265.2475 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #374: GFLOPs: 7092.8388. Time: 245.5023 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #375: GFLOPs: 7042.1371. Time: 247.2698 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #376: GFLOPs: 4759.8332. Time: 365.8338 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #377: GFLOPs: 6546.5547. Time: 265.9884 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #378: GFLOPs: 5854.3236. Time: 297.4396 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #379: GFLOPs: 6780.5017. Time: 256.8111 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #380: GFLOPs: 7074.9201. Time: 246.1240 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #381: GFLOPs: 8.6838. Time: 200523.7833 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #382: GFLOPs: 101.8780. Time: 17092.0957 us. Best GFLOPs: 7438.8276
2024-04-28 21:22:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #383: GFLOPs: 197.5847. Time: 8812.9704 us. Best GFLOPs: 7438.8276
2024-04-28 21:37:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:37:50 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:37:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:38:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:38:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:38:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1606 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:38:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:38:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:38:25 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-28 21:38:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:39:01 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:39:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:39:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:39:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0680  1.0380  1.0249  1.0121  1.0081  1.0073  0.9977  0.9968  0.9921  0.9917  0.9821  0.9814  0.9784  0.9721  0.9670  0.9634
[17 : 32]:	0.9632  0.9616  0.9611  0.9604  0.9604  0.9573  0.9573  0.9563  0.9563  0.9559  0.9534  0.9527  0.9521  0.9521  0.9515  0.9501
[33 : 48]:	0.9499  0.9492  0.9492  0.9492  0.9483  0.9481  0.9451  0.9434  0.9431  0.9424  0.9415  0.9405  0.9388  0.9386  0.9364  0.9361
[49 : 64]:	0.9357  0.9354  0.9338  0.9332  0.9324  0.9321  0.9321  0.9303  0.9301  0.9300  0.9300  0.9283  0.9280  0.9274  0.9270  0.9263
2024-04-28 21:39:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:39:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #384: GFLOPs: 7543.5219. Time: 230.8349 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #385: GFLOPs: 7221.1949. Time: 241.1385 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #386: GFLOPs: 7099.1358. Time: 245.2845 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #387: GFLOPs: 7067.0554. Time: 246.3979 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #388: GFLOPs: 7244.2973. Time: 240.3695 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #389: GFLOPs: 7311.8860. Time: 238.1476 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #390: GFLOPs: 7393.3921. Time: 235.5222 us. Best GFLOPs: 7543.5219
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #391: GFLOPs: 7581.1306. Time: 229.6897 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #392: GFLOPs: 7055.6571. Time: 246.7960 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #393: GFLOPs: 7229.4596. Time: 240.8628 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #394: GFLOPs: 7159.0063. Time: 243.2332 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #395: GFLOPs: 7468.9142. Time: 233.1407 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #396: GFLOPs: 7230.7808. Time: 240.8188 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #397: GFLOPs: 7461.0125. Time: 233.3876 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #398: GFLOPs: 7187.5325. Time: 242.2678 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #399: GFLOPs: 7270.5369. Time: 239.5020 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #400: GFLOPs: 7302.6113. Time: 238.4500 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #401: GFLOPs: 7289.5146. Time: 238.8784 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #402: GFLOPs: 7090.6417. Time: 245.5783 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #403: GFLOPs: 7269.1434. Time: 239.5479 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #404: GFLOPs: 7266.0465. Time: 239.6500 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #405: GFLOPs: 6757.6183. Time: 257.6807 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #406: GFLOPs: 6982.6484. Time: 249.3764 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #407: GFLOPs: 6973.4704. Time: 249.7046 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #408: GFLOPs: 7032.2956. Time: 247.6159 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #409: GFLOPs: 6819.4683. Time: 255.3436 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #410: GFLOPs: 7276.4267. Time: 239.3081 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #411: GFLOPs: 7047.9692. Time: 247.0652 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #412: GFLOPs: 7240.6422. Time: 240.4908 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #413: GFLOPs: 7149.2132. Time: 243.5664 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #414: GFLOPs: 203.3215. Time: 8564.3094 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #415: GFLOPs: 7323.4785. Time: 237.7706 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #416: GFLOPs: 7392.0163. Time: 235.5660 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #417: GFLOPs: 7456.2766. Time: 233.5359 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #418: GFLOPs: 7454.4013. Time: 233.5946 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #419: GFLOPs: 7456.9440. Time: 233.5149 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #420: GFLOPs: 6966.1102. Time: 249.9685 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #421: GFLOPs: 7465.5105. Time: 233.2470 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #422: GFLOPs: 7234.5730. Time: 240.6926 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #423: GFLOPs: 7102.3684. Time: 245.1728 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #424: GFLOPs: 7132.0590. Time: 244.1522 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #425: GFLOPs: 7175.6534. Time: 242.6689 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #426: GFLOPs: 6570.8096. Time: 265.0066 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #427: GFLOPs: 7060.8493. Time: 246.6145 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #428: GFLOPs: 7204.5956. Time: 241.6941 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #429: GFLOPs: 6990.0441. Time: 249.1126 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #430: GFLOPs: 7079.8355. Time: 245.9532 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #431: GFLOPs: 6597.5573. Time: 263.9322 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #432: GFLOPs: 6772.4138. Time: 257.1178 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #433: GFLOPs: 7241.7819. Time: 240.4530 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #434: GFLOPs: 7010.9294. Time: 248.3705 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #435: GFLOPs: 5116.1782. Time: 340.3533 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #436: GFLOPs: 7150.5831. Time: 243.5197 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #437: GFLOPs: 6815.9115. Time: 255.4769 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #438: GFLOPs: 6068.2531. Time: 286.9537 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #439: GFLOPs: 7060.4286. Time: 246.6292 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #440: GFLOPs: 6934.5701. Time: 251.1054 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #441: GFLOPs: 7317.2582. Time: 237.9727 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #442: GFLOPs: 7316.6124. Time: 237.9937 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #443: GFLOPs: 7119.0132. Time: 244.5996 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #444: GFLOPs: 6705.3592. Time: 259.6890 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #445: GFLOPs: 1318.2140. Time: 1320.9600 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #446: GFLOPs: 1407.6235. Time: 1237.0552 us. Best GFLOPs: 7581.1306
2024-04-28 21:41:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #447: GFLOPs: 44.2342. Time: 39365.6310 us. Best GFLOPs: 7581.1306
2024-04-28 21:44:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:44:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:44:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:44:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:44:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:44:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1605 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:44:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2010 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:44:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2413 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:45:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:45:05 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-28 21:45:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 127 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:45:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 127 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:46:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:46:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:46:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0046  1.0019  0.9961  0.9950  0.9944  0.9876  0.9875  0.9854  0.9853  0.9825  0.9793  0.9777  0.9768  0.9768  0.9761  0.9752
[17 : 32]:	0.9737  0.9735  0.9729  0.9722  0.9716  0.9695  0.9688  0.9686  0.9686  0.9673  0.9666  0.9657  0.9645  0.9622  0.9622  0.9621
[33 : 48]:	0.9618  0.9612  0.9607  0.9605  0.9598  0.9590  0.9580  0.9580  0.9576  0.9566  0.9562  0.9554  0.9554  0.9554  0.9545  0.9545
[49 : 64]:	0.9531  0.9527  0.9525  0.9522  0.9520  0.9511  0.9502  0.9502  0.9498  0.9498  0.9497  0.9496  0.9493  0.9492  0.9490  0.9488
2024-04-28 21:46:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:46:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #448: GFLOPs: 7575.4194. Time: 229.8629 us. Best GFLOPs: 7581.1306
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #449: GFLOPs: 124.4224. Time: 13995.1362 us. Best GFLOPs: 7581.1306
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #450: GFLOPs: 7635.9957. Time: 228.0394 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #451: GFLOPs: 7569.3779. Time: 230.0464 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #452: GFLOPs: 7575.0603. Time: 229.8738 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #453: GFLOPs: 7625.6931. Time: 228.3475 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #454: GFLOPs: 7324.0671. Time: 237.7515 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #455: GFLOPs: 7480.4975. Time: 232.7797 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #456: GFLOPs: 7328.7500. Time: 237.5996 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #457: GFLOPs: 7285.0166. Time: 239.0259 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #458: GFLOPs: 7362.3654. Time: 236.5147 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #459: GFLOPs: 7473.1833. Time: 233.0075 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #460: GFLOPs: 7501.2199. Time: 232.1366 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #461: GFLOPs: 7496.0216. Time: 232.2976 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #462: GFLOPs: 7527.2729. Time: 231.3332 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #463: GFLOPs: 7480.4858. Time: 232.7801 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #464: GFLOPs: 7411.9572. Time: 234.9323 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #465: GFLOPs: 7420.5678. Time: 234.6597 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #466: GFLOPs: 7256.6448. Time: 239.9605 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #467: GFLOPs: 7543.1897. Time: 230.8450 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #468: GFLOPs: 7186.3729. Time: 242.3069 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #469: GFLOPs: 7408.0951. Time: 235.0547 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #470: GFLOPs: 7503.4304. Time: 232.0682 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #471: GFLOPs: 7005.2676. Time: 248.5712 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #472: GFLOPs: 7376.4733. Time: 236.0624 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #473: GFLOPs: 7288.6843. Time: 238.9057 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #474: GFLOPs: 7268.7990. Time: 239.5592 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #475: GFLOPs: 7486.8488. Time: 232.5822 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #476: GFLOPs: 7594.9872. Time: 229.2707 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #477: GFLOPs: 7173.7311. Time: 242.7339 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #478: GFLOPs: 7132.1463. Time: 244.1492 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #479: GFLOPs: 7081.2139. Time: 245.9053 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #480: GFLOPs: 7482.8078. Time: 232.7078 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #481: GFLOPs: 7573.5613. Time: 229.9193 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #482: GFLOPs: 7272.5943. Time: 239.4342 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #483: GFLOPs: 6850.6927. Time: 254.1798 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #484: GFLOPs: 7212.0062. Time: 241.4457 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #485: GFLOPs: 7386.4043. Time: 235.7450 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #486: GFLOPs: 7303.8311. Time: 238.4102 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #487: GFLOPs: 7303.5497. Time: 238.4194 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #488: GFLOPs: 7245.1085. Time: 240.3426 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #489: GFLOPs: 7232.0038. Time: 240.7781 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #490: GFLOPs: 7422.0262. Time: 234.6135 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #491: GFLOPs: 7382.2627. Time: 235.8773 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #492: GFLOPs: 4349.2525. Time: 400.3695 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #493: GFLOPs: 7023.8405. Time: 247.9139 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #494: GFLOPs: 7247.6126. Time: 240.2595 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #495: GFLOPs: 6699.5110. Time: 259.9157 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #496: GFLOPs: 7402.5955. Time: 235.2294 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #497: GFLOPs: 7023.4639. Time: 247.9272 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #498: GFLOPs: 7301.0312. Time: 238.5016 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #499: GFLOPs: 7195.3515. Time: 242.0046 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #500: GFLOPs: 7299.6316. Time: 238.5474 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #501: GFLOPs: 7378.4946. Time: 235.9977 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #502: GFLOPs: 7467.0257. Time: 233.1997 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #503: GFLOPs: 7023.0228. Time: 247.9428 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #504: GFLOPs: 7302.7629. Time: 238.4451 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #505: GFLOPs: 3870.8093. Time: 449.8563 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #506: GFLOPs: 7066.5449. Time: 246.4157 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #507: GFLOPs: 7278.9980. Time: 239.2236 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #508: GFLOPs: 6913.0574. Time: 251.8868 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #509: GFLOPs: 5369.6589. Time: 324.2865 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #510: GFLOPs: 5000.8194. Time: 348.2045 us. Best GFLOPs: 7635.9957
2024-04-28 21:47:32 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #511: GFLOPs: 152.4334. Time: 11423.4026 us. Best GFLOPs: 7635.9957
2024-04-28 21:55:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:55:56 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 21:56:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:56:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:56:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:56:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1599 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:56:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2001 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:56:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:56:30 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 21:56:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:57:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 145 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:57:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:57:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 21:57:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0046  1.0022  0.9982  0.9965  0.9894  0.9883  0.9879  0.9875  0.9856  0.9855  0.9829  0.9814  0.9791  0.9791  0.9778  0.9754
[17 : 32]:	0.9749  0.9743  0.9718  0.9716  0.9713  0.9713  0.9713  0.9708  0.9707  0.9705  0.9705  0.9702  0.9702  0.9696  0.9692  0.9684
[33 : 48]:	0.9677  0.9672  0.9672  0.9661  0.9660  0.9658  0.9656  0.9656  0.9652  0.9648  0.9635  0.9634  0.9634  0.9634  0.9618  0.9613
[49 : 64]:	0.9613  0.9609  0.9608  0.9601  0.9597  0.9593  0.9593  0.9593  0.9590  0.9589  0.9589  0.9588  0.9585  0.9583  0.9583  0.9579
2024-04-28 21:57:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:57:50 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #512: GFLOPs: 7605.2392. Time: 228.9616 us. Best GFLOPs: 7635.9957
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #513: GFLOPs: 7385.5884. Time: 235.7710 us. Best GFLOPs: 7635.9957
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #514: GFLOPs: 7561.3833. Time: 230.2896 us. Best GFLOPs: 7635.9957
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #515: GFLOPs: 7585.8188. Time: 229.5478 us. Best GFLOPs: 7635.9957
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #516: GFLOPs: 7625.7572. Time: 228.3456 us. Best GFLOPs: 7635.9957
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #517: GFLOPs: 7636.7888. Time: 228.0157 us. Best GFLOPs: 7636.7888
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #518: GFLOPs: 7621.4790. Time: 228.4738 us. Best GFLOPs: 7636.7888
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #519: GFLOPs: 7588.0240. Time: 229.4811 us. Best GFLOPs: 7636.7888
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #520: GFLOPs: 7434.7891. Time: 234.2108 us. Best GFLOPs: 7636.7888
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #521: GFLOPs: 5434.3640. Time: 320.4253 us. Best GFLOPs: 7636.7888
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #522: GFLOPs: 7732.7428. Time: 225.1863 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #523: GFLOPs: 7644.6595. Time: 227.7810 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #524: GFLOPs: 7573.8746. Time: 229.9098 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #525: GFLOPs: 7613.0943. Time: 228.7254 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #526: GFLOPs: 7627.4387. Time: 228.2952 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #527: GFLOPs: 7628.5396. Time: 228.2623 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #528: GFLOPs: 7573.9940. Time: 229.9062 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #529: GFLOPs: 7530.3769. Time: 231.2378 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #530: GFLOPs: 7647.8043. Time: 227.6873 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #531: GFLOPs: 7513.8159. Time: 231.7475 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #532: GFLOPs: 7632.4599. Time: 228.1450 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #533: GFLOPs: 7640.2792. Time: 227.9116 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #534: GFLOPs: 7638.2455. Time: 227.9722 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #535: GFLOPs: 7670.9854. Time: 226.9992 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #536: GFLOPs: 7545.0174. Time: 230.7891 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #537: GFLOPs: 7674.2779. Time: 226.9019 us. Best GFLOPs: 7732.7428
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #538: GFLOPs: 7759.3138. Time: 224.4152 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #539: GFLOPs: 7476.7796. Time: 232.8954 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #540: GFLOPs: 7371.6276. Time: 236.2176 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #541: GFLOPs: 7386.6202. Time: 235.7381 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #542: GFLOPs: 7487.7942. Time: 232.5529 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #543: GFLOPs: 7521.2535. Time: 231.5183 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #544: GFLOPs: 7442.3593. Time: 233.9726 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #545: GFLOPs: 7681.3473. Time: 226.6930 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #546: GFLOPs: 7597.5282. Time: 229.1940 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #547: GFLOPs: 7384.0224. Time: 235.8210 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #548: GFLOPs: 7706.2257. Time: 225.9612 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #549: GFLOPs: 7433.0006. Time: 234.2672 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #550: GFLOPs: 7332.0435. Time: 237.4928 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #551: GFLOPs: 7485.3570. Time: 232.6286 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #552: GFLOPs: 7550.7104. Time: 230.6151 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #553: GFLOPs: 7534.1364. Time: 231.1224 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #554: GFLOPs: 7553.6372. Time: 230.5258 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #555: GFLOPs: 7602.1662. Time: 229.0542 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #556: GFLOPs: 7597.1900. Time: 229.2042 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #557: GFLOPs: 7384.8890. Time: 235.7934 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #558: GFLOPs: 7392.9663. Time: 235.5358 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #559: GFLOPs: 7268.4402. Time: 239.5711 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #560: GFLOPs: 7368.9987. Time: 236.3018 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #561: GFLOPs: 7191.5695. Time: 242.1318 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #562: GFLOPs: 7483.7827. Time: 232.6775 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #563: GFLOPs: 7357.7900. Time: 236.6618 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #564: GFLOPs: 6955.5057. Time: 250.3496 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #565: GFLOPs: 7038.9232. Time: 247.3827 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #566: GFLOPs: 7494.9056. Time: 232.3322 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #567: GFLOPs: 7397.8233. Time: 235.3811 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #568: GFLOPs: 7481.8176. Time: 232.7386 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #569: GFLOPs: 7138.2525. Time: 243.9404 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #570: GFLOPs: 7273.9006. Time: 239.3912 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #571: GFLOPs: 7383.1033. Time: 235.8504 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #572: GFLOPs: 7339.7644. Time: 237.2430 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #573: GFLOPs: 51.7807. Time: 33628.5017 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #574: GFLOPs: 455.1829. Time: 3825.5123 us. Best GFLOPs: 7759.3138
2024-04-28 21:58:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #575: GFLOPs: 1416.0295. Time: 1229.7116 us. Best GFLOPs: 7759.3138
2024-04-28 22:12:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:13:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:13:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:13:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:13:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:13:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1608 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:13:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2006 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:13:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2408 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:13:36 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-28 22:13:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:14:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:14:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:14:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:14:51 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.9751  1.8047  1.0099  0.9989  0.9989  0.9949  0.9918  0.9880  0.9878  0.9875  0.9862  0.9862  0.9858  0.9827  0.9824  0.9824
[17 : 32]:	0.9809  0.9806  0.9798  0.9798  0.9792  0.9782  0.9779  0.9765  0.9758  0.9756  0.9752  0.9745  0.9744  0.9741  0.9737  0.9737
[33 : 48]:	0.9727  0.9723  0.9721  0.9717  0.9709  0.9708  0.9707  0.9706  0.9700  0.9700  0.9700  0.9700  0.9699  0.9699  0.9687  0.9681
[49 : 64]:	0.9678  0.9676  0.9675  0.9660  0.9660  0.9659  0.9658  0.9654  0.9651  0.9650  0.9642  0.9641  0.9636  0.9634  0.9633  0.9633
2024-04-28 22:14:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:14:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #576: GFLOPs: 11.6620. Time: 149314.9007 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #577: GFLOPs: 10.9523. Time: 158990.6817 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #578: GFLOPs: 7612.5449. Time: 228.7419 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #579: GFLOPs: 7630.8128. Time: 228.1943 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #580: GFLOPs: 7589.9307. Time: 229.4234 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #581: GFLOPs: 7601.6595. Time: 229.0694 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #582: GFLOPs: 7500.5020. Time: 232.1588 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #583: GFLOPs: 7486.9524. Time: 232.5790 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #584: GFLOPs: 7626.4083. Time: 228.3261 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #585: GFLOPs: 7469.2594. Time: 233.1299 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #586: GFLOPs: 7470.1857. Time: 233.1010 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #587: GFLOPs: 7557.8314. Time: 230.3978 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #588: GFLOPs: 7436.8492. Time: 234.1459 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #589: GFLOPs: 7544.2492. Time: 230.8126 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #590: GFLOPs: 7607.9629. Time: 228.8797 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #591: GFLOPs: 7616.6487. Time: 228.6186 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #592: GFLOPs: 7544.6022. Time: 230.8018 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #593: GFLOPs: 7441.1277. Time: 234.0113 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #594: GFLOPs: 7473.9755. Time: 232.9828 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #595: GFLOPs: 7473.1769. Time: 233.0077 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #596: GFLOPs: 7481.5442. Time: 232.7471 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #597: GFLOPs: 7646.9384. Time: 227.7131 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #598: GFLOPs: 7633.3559. Time: 228.1183 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #599: GFLOPs: 7494.9271. Time: 232.3315 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #600: GFLOPs: 7470.7370. Time: 233.0838 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #601: GFLOPs: 7392.8892. Time: 235.5382 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #602: GFLOPs: 7468.6456. Time: 233.1491 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #603: GFLOPs: 7483.5696. Time: 232.6841 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #604: GFLOPs: 7497.1707. Time: 232.2620 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #605: GFLOPs: 7499.6413. Time: 232.1855 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #606: GFLOPs: 7504.0002. Time: 232.0506 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #607: GFLOPs: 7568.3115. Time: 230.0788 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #608: GFLOPs: 7521.8884. Time: 231.4988 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #609: GFLOPs: 7597.1772. Time: 229.2046 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #610: GFLOPs: 7370.6895. Time: 236.2476 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #611: GFLOPs: 7500.0616. Time: 232.1725 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #612: GFLOPs: 7566.3458. Time: 230.1386 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #613: GFLOPs: 7480.6178. Time: 232.7759 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #614: GFLOPs: 7508.4804. Time: 231.9122 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #615: GFLOPs: 7504.6999. Time: 232.0290 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #616: GFLOPs: 6854.3079. Time: 254.0458 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #617: GFLOPs: 6851.4725. Time: 254.1509 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #618: GFLOPs: 7526.4908. Time: 231.3572 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #619: GFLOPs: 7511.8107. Time: 231.8093 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #620: GFLOPs: 7534.1987. Time: 231.1205 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #621: GFLOPs: 7533.8429. Time: 231.1314 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #622: GFLOPs: 7473.3421. Time: 233.0026 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #623: GFLOPs: 7546.2466. Time: 230.7515 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #624: GFLOPs: 7500.7649. Time: 232.1507 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #625: GFLOPs: 7537.9731. Time: 231.0048 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #626: GFLOPs: 7435.3044. Time: 234.1946 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #627: GFLOPs: 7637.4967. Time: 227.9946 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #628: GFLOPs: 7574.9934. Time: 229.8758 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #629: GFLOPs: 7549.4074. Time: 230.6549 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #630: GFLOPs: 7494.4522. Time: 232.3463 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #631: GFLOPs: 7494.3961. Time: 232.3480 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #632: GFLOPs: 7226.9344. Time: 240.9470 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #633: GFLOPs: 6816.5475. Time: 255.4531 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #634: GFLOPs: 7246.8330. Time: 240.2854 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #635: GFLOPs: 7506.1638. Time: 231.9837 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #636: GFLOPs: 7465.2461. Time: 233.2553 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #637: GFLOPs: 120.3331. Time: 14470.7291 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #638: GFLOPs: 4477.7155. Time: 388.8831 us. Best GFLOPs: 7759.3138
2024-04-28 22:15:58 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #639: GFLOPs: 403.0885. Time: 4319.9148 us. Best GFLOPs: 7759.3138
2024-04-28 22:23:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:23:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:23:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2017 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2416 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2823 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3227 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:23:50 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-28 22:24:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:24:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:24:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:24:58 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:25:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0022  0.9933  0.9923  0.9898  0.9898  0.9896  0.9894  0.9888  0.9881  0.9872  0.9852  0.9842  0.9840  0.9840  0.9828  0.9824
[17 : 32]:	0.9818  0.9810  0.9810  0.9802  0.9792  0.9790  0.9788  0.9782  0.9772  0.9763  0.9756  0.9754  0.9744  0.9729  0.9727  0.9725
[33 : 48]:	0.9724  0.9721  0.9720  0.9716  0.9713  0.9706  0.9703  0.9695  0.9695  0.9688  0.9685  0.9683  0.9683  0.9681  0.9678  0.9678
[49 : 64]:	0.9671  0.9671  0.9669  0.9669  0.9663  0.9663  0.9662  0.9661  0.9654  0.9645  0.9645  0.9641  0.9639  0.9639  0.9638  0.9638
2024-04-28 22:25:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:25:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #640: GFLOPs: 7646.9562. Time: 227.7126 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #641: GFLOPs: 7473.4659. Time: 232.9987 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #642: GFLOPs: 7564.0409. Time: 230.2087 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #643: GFLOPs: 7510.8971. Time: 231.8375 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #644: GFLOPs: 7541.1438. Time: 230.9077 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #645: GFLOPs: 7514.6768. Time: 231.7209 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #646: GFLOPs: 7644.1101. Time: 227.7973 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #647: GFLOPs: 7606.7813. Time: 228.9152 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #648: GFLOPs: 7508.0625. Time: 231.9251 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #649: GFLOPs: 7515.4699. Time: 231.6965 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #650: GFLOPs: 7530.1565. Time: 231.2446 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #651: GFLOPs: 7532.7225. Time: 231.1658 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #652: GFLOPs: 7369.4993. Time: 236.2858 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #653: GFLOPs: 7405.3597. Time: 235.1416 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #654: GFLOPs: 7570.6186. Time: 230.0087 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #655: GFLOPs: 7533.0746. Time: 231.1550 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #656: GFLOPs: 7532.0808. Time: 231.1855 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #657: GFLOPs: 7500.0347. Time: 232.1733 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #658: GFLOPs: 7500.4605. Time: 232.1601 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #659: GFLOPs: 7637.6523. Time: 227.9899 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #660: GFLOPs: 7621.6670. Time: 228.4681 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #661: GFLOPs: 7475.6366. Time: 232.9311 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #662: GFLOPs: 7517.7516. Time: 231.6262 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #663: GFLOPs: 7519.1355. Time: 231.5835 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #664: GFLOPs: 7615.5822. Time: 228.6507 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #665: GFLOPs: 7576.3530. Time: 229.8346 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #666: GFLOPs: 7647.8312. Time: 227.6865 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #667: GFLOPs: 7546.5797. Time: 230.7413 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #668: GFLOPs: 7506.2150. Time: 231.9822 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #669: GFLOPs: 7472.4138. Time: 233.0315 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #670: GFLOPs: 7499.2910. Time: 232.1963 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #671: GFLOPs: 7470.3761. Time: 233.0951 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #672: GFLOPs: 7565.8816. Time: 230.1527 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #673: GFLOPs: 7449.7683. Time: 233.7399 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #674: GFLOPs: 7513.7048. Time: 231.7509 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #675: GFLOPs: 6862.1705. Time: 253.7547 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #676: GFLOPs: 7503.0019. Time: 232.0815 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #677: GFLOPs: 6950.8249. Time: 250.5182 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #678: GFLOPs: 7580.4423. Time: 229.7106 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #679: GFLOPs: 7577.2958. Time: 229.8060 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #680: GFLOPs: 7409.4635. Time: 235.0113 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #681: GFLOPs: 7390.2340. Time: 235.6228 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #682: GFLOPs: 7403.6776. Time: 235.1950 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #683: GFLOPs: 7553.4615. Time: 230.5311 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #684: GFLOPs: 7560.2656. Time: 230.3236 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #685: GFLOPs: 7492.8647. Time: 232.3955 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #686: GFLOPs: 7457.3333. Time: 233.5028 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #687: GFLOPs: 7567.5407. Time: 230.1022 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #688: GFLOPs: 6922.3002. Time: 251.5505 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #689: GFLOPs: 6918.8431. Time: 251.6762 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #690: GFLOPs: 7542.0276. Time: 230.8806 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #691: GFLOPs: 7542.7420. Time: 230.8587 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #692: GFLOPs: 7481.8574. Time: 232.7374 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #693: GFLOPs: 7490.7458. Time: 232.4612 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #694: GFLOPs: 7534.7906. Time: 231.1024 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #695: GFLOPs: 7493.4684. Time: 232.3768 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #696: GFLOPs: 7495.3540. Time: 232.3183 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #697: GFLOPs: 7477.8246. Time: 232.8629 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #698: GFLOPs: 7489.6109. Time: 232.4964 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #699: GFLOPs: 7472.4014. Time: 233.0319 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #700: GFLOPs: 7627.2491. Time: 228.3009 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #701: GFLOPs: 1815.4819. Time: 959.1436 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #702: GFLOPs: 341.5645. Time: 5098.0350 us. Best GFLOPs: 7759.3138
2024-04-28 22:26:07 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #703: GFLOPs: 342.1934. Time: 5088.6658 us. Best GFLOPs: 7759.3138
2024-04-28 22:41:16 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:41:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:41:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:41:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 797 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:41:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:41:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1591 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:41:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1994 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:41:48 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 22:42:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 146 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:42:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:42:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 159 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:43:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 131 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:43:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0015  0.9998  0.9933  0.9924  0.9917  0.9895  0.9887  0.9886  0.9870  0.9865  0.9861  0.9849  0.9841  0.9840  0.9836  0.9829
[17 : 32]:	0.9806  0.9801  0.9801  0.9794  0.9788  0.9785  0.9778  0.9771  0.9758  0.9752  0.9742  0.9737  0.9733  0.9728  0.9717  0.9716
[33 : 48]:	0.9713  0.9710  0.9707  0.9705  0.9696  0.9696  0.9696  0.9695  0.9695  0.9694  0.9686  0.9685  0.9685  0.9685  0.9683  0.9683
[49 : 64]:	0.9683  0.9683  0.9682  0.9682  0.9681  0.9678  0.9676  0.9674  0.9666  0.9665  0.9664  0.9661  0.9660  0.9651  0.9651  0.9637
2024-04-28 22:43:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:43:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #704: GFLOPs: 7648.6708. Time: 227.6615 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #705: GFLOPs: 7658.6678. Time: 227.3643 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #706: GFLOPs: 7625.0367. Time: 228.3672 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #707: GFLOPs: 7494.6247. Time: 232.3409 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #708: GFLOPs: 7641.7486. Time: 227.8677 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #709: GFLOPs: 7548.5644. Time: 230.6807 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #710: GFLOPs: 7498.1784. Time: 232.2308 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #711: GFLOPs: 7685.7639. Time: 226.5628 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #712: GFLOPs: 7745.9972. Time: 224.8010 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #713: GFLOPs: 7714.9941. Time: 225.7044 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #714: GFLOPs: 7619.7142. Time: 228.5267 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #715: GFLOPs: 7102.6992. Time: 245.1614 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #716: GFLOPs: 7707.6305. Time: 225.9200 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #717: GFLOPs: 7690.1113. Time: 226.4347 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #718: GFLOPs: 7715.6452. Time: 225.6853 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #719: GFLOPs: 7626.4067. Time: 228.3261 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #720: GFLOPs: 7474.5305. Time: 232.9655 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #721: GFLOPs: 7544.9118. Time: 230.7923 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #722: GFLOPs: 7657.6593. Time: 227.3943 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #723: GFLOPs: 7697.8987. Time: 226.2056 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #724: GFLOPs: 7510.7816. Time: 231.8411 us. Best GFLOPs: 7759.3138
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #725: GFLOPs: 7782.3642. Time: 223.7505 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #726: GFLOPs: 7696.8039. Time: 226.2378 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #727: GFLOPs: 7551.9010. Time: 230.5787 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #728: GFLOPs: 7566.2924. Time: 230.1402 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #729: GFLOPs: 7404.1917. Time: 235.1787 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #730: GFLOPs: 7493.8932. Time: 232.3636 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #731: GFLOPs: 7669.6492. Time: 227.0388 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #732: GFLOPs: 7676.0817. Time: 226.8485 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #733: GFLOPs: 7351.5728. Time: 236.8620 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #734: GFLOPs: 7569.3559. Time: 230.0470 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #735: GFLOPs: 7708.7924. Time: 225.8860 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #736: GFLOPs: 7658.2037. Time: 227.3781 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #737: GFLOPs: 7596.3858. Time: 229.2285 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #738: GFLOPs: 7686.5891. Time: 226.5384 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #739: GFLOPs: 7645.2521. Time: 227.7633 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #740: GFLOPs: 7617.7035. Time: 228.5870 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #741: GFLOPs: 7692.8799. Time: 226.3532 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #742: GFLOPs: 7678.7176. Time: 226.7707 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #743: GFLOPs: 7659.3834. Time: 227.3431 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #744: GFLOPs: 7572.4265. Time: 229.9538 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #745: GFLOPs: 7331.1507. Time: 237.5218 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #746: GFLOPs: 6613.6432. Time: 263.2903 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #747: GFLOPs: 7575.7030. Time: 229.8543 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #748: GFLOPs: 7576.8494. Time: 229.8195 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #749: GFLOPs: 7576.8088. Time: 229.8208 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #750: GFLOPs: 7442.8413. Time: 233.9574 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #751: GFLOPs: 7621.7531. Time: 228.4655 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #752: GFLOPs: 7693.1234. Time: 226.3460 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #753: GFLOPs: 7621.3350. Time: 228.4781 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #754: GFLOPs: 7553.8312. Time: 230.5198 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #755: GFLOPs: 7473.1750. Time: 233.0078 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #756: GFLOPs: 7686.3991. Time: 226.5440 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #757: GFLOPs: 6857.9207. Time: 253.9119 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #758: GFLOPs: 7619.9077. Time: 228.5209 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #759: GFLOPs: 7525.4043. Time: 231.3906 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #760: GFLOPs: 6756.3115. Time: 257.7306 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #761: GFLOPs: 7545.0776. Time: 230.7873 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #762: GFLOPs: 7626.3448. Time: 228.3280 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #763: GFLOPs: 7583.4680. Time: 229.6189 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #764: GFLOPs: 7708.2595. Time: 225.9016 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #765: GFLOPs: 312.5465. Time: 5571.3564 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #766: GFLOPs: 157.8143. Time: 11033.9073 us. Best GFLOPs: 7782.3642
2024-04-28 22:44:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #767: GFLOPs: 4729.6862. Time: 368.1656 us. Best GFLOPs: 7782.3642
2024-04-28 22:48:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:48:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:49:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1215 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1619 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2418 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3225 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:49:42 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-28 22:49:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:50:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:50:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:50:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 22:50:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0381  1.0381  1.0381  1.0040  1.0028  0.9972  0.9972  0.9959  0.9954  0.9947  0.9907  0.9899  0.9891  0.9887  0.9887  0.9883
[17 : 32]:	0.9872  0.9864  0.9851  0.9841  0.9835  0.9815  0.9815  0.9808  0.9807  0.9807  0.9803  0.9795  0.9791  0.9789  0.9787  0.9786
[33 : 48]:	0.9783  0.9777  0.9764  0.9764  0.9764  0.9761  0.9759  0.9749  0.9746  0.9746  0.9745  0.9743  0.9738  0.9737  0.9737  0.9735
[49 : 64]:	0.9728  0.9726  0.9712  0.9706  0.9697  0.9690  0.9688  0.9681  0.9677  0.9674  0.9674  0.9661  0.9660  0.9660  0.9657  0.9656
2024-04-28 22:50:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:50:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #768: GFLOPs: 110.4274. Time: 15768.8039 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #769: GFLOPs: 110.5090. Time: 15757.1661 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #770: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(49), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_3_init * T.int64(2) + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(64) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(64) // T.int64(4) * T.int64(16) + co_3_init * T.int64(8) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(13)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1568))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1568) // T.int64(392))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(196))
                                        v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(3136))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2048))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2048) // T.int64(512))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(256))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(8), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(64) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(64) // T.int64(4) * T.int64(16) + co_3 * T.int64(8) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(2) + ci_1 * T.int64(2) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(16), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(64) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(64) // T.int64(4) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 2, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 1, 16, 2, 8])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 49, 4, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 1, 2])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 128, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 128, 2], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #771: GFLOPs: 7594.2603. Time: 229.2926 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #772: GFLOPs: 7515.2364. Time: 231.7037 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #773: GFLOPs: 7570.1630. Time: 230.0225 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #774: GFLOPs: 7567.7477. Time: 230.0959 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #775: GFLOPs: 7647.1776. Time: 227.7060 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #776: GFLOPs: 7600.7737. Time: 229.0961 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #777: GFLOPs: 7643.5902. Time: 227.8128 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #778: GFLOPs: 7455.1031. Time: 233.5726 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #779: GFLOPs: 7509.0694. Time: 231.8940 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #780: GFLOPs: 7581.5283. Time: 229.6777 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #781: GFLOPs: 7586.0165. Time: 229.5418 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #782: GFLOPs: 7578.4249. Time: 229.7717 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #783: GFLOPs: 7655.1508. Time: 227.4688 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #784: GFLOPs: 7643.4659. Time: 227.8165 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #785: GFLOPs: 7596.4409. Time: 229.2268 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #786: GFLOPs: 7700.0005. Time: 226.1439 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #787: GFLOPs: 7569.4675. Time: 230.0436 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #788: GFLOPs: 7519.6778. Time: 231.5668 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #789: GFLOPs: 7468.4328. Time: 233.1557 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #790: GFLOPs: 7655.2460. Time: 227.4660 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #791: GFLOPs: 7625.6897. Time: 228.3476 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #792: GFLOPs: 7580.7937. Time: 229.6999 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #793: GFLOPs: 7565.8447. Time: 230.1538 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #794: GFLOPs: 7627.3431. Time: 228.2981 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #795: GFLOPs: 7483.5529. Time: 232.6847 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #796: GFLOPs: 7664.2910. Time: 227.1975 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #797: GFLOPs: 7632.6343. Time: 228.1398 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #798: GFLOPs: 7661.2745. Time: 227.2870 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #799: GFLOPs: 7481.5618. Time: 232.7466 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #800: GFLOPs: 7600.6301. Time: 229.1005 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #801: GFLOPs: 7704.9357. Time: 225.9990 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #802: GFLOPs: 7611.8179. Time: 228.7637 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #803: GFLOPs: 7772.8580. Time: 224.0241 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #804: GFLOPs: 7708.8643. Time: 225.8838 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #805: GFLOPs: 7613.7096. Time: 228.7069 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #806: GFLOPs: 7648.7259. Time: 227.6599 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #807: GFLOPs: 7593.9578. Time: 229.3018 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #808: GFLOPs: 7679.5937. Time: 226.7448 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #809: GFLOPs: 7515.5831. Time: 231.6930 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #810: GFLOPs: 7663.6359. Time: 227.2169 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #811: GFLOPs: 7650.3479. Time: 227.6116 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #812: GFLOPs: 7576.8156. Time: 229.8205 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #813: GFLOPs: 7596.0651. Time: 229.2381 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #814: GFLOPs: 7670.3446. Time: 227.0182 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #815: GFLOPs: 7668.7828. Time: 227.0644 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #816: GFLOPs: 7601.9754. Time: 229.0599 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #817: GFLOPs: 7673.7938. Time: 226.9162 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #818: GFLOPs: 7613.0951. Time: 228.7254 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #819: GFLOPs: 7421.2333. Time: 234.6386 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #820: GFLOPs: 7738.1383. Time: 225.0293 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #821: GFLOPs: 7743.5919. Time: 224.8708 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #822: GFLOPs: 7503.6566. Time: 232.0612 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #823: GFLOPs: 7641.0191. Time: 227.8895 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #824: GFLOPs: 7577.8355. Time: 229.7896 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #825: GFLOPs: 7596.3235. Time: 229.2304 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #826: GFLOPs: 7670.9822. Time: 226.9993 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #827: GFLOPs: 7633.4697. Time: 228.1149 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #828: GFLOPs: 7602.2061. Time: 229.0530 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #829: GFLOPs: 4068.8378. Time: 427.9620 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #830: GFLOPs: 5099.3617. Time: 341.4757 us. Best GFLOPs: 7782.3642
2024-04-28 22:52:21 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #831: GFLOPs: 84.2230. Time: 20674.9694 us. Best GFLOPs: 7782.3642
2024-04-28 23:02:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:02:37 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:02:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:02:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:02:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2017 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2419 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2821 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3224 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:23 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-28 23:03:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:03:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:04:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:04:37 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:04:42 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0093  0.9985  0.9934  0.9931  0.9919  0.9916  0.9890  0.9886  0.9885  0.9879  0.9879  0.9877  0.9875  0.9866  0.9861  0.9861
[17 : 32]:	0.9861  0.9859  0.9859  0.9857  0.9856  0.9840  0.9839  0.9837  0.9837  0.9835  0.9835  0.9827  0.9824  0.9816  0.9815  0.9813
[33 : 48]:	0.9802  0.9800  0.9795  0.9794  0.9793  0.9789  0.9789  0.9785  0.9778  0.9770  0.9770  0.9769  0.9768  0.9766  0.9766  0.9765
[49 : 64]:	0.9765  0.9757  0.9756  0.9748  0.9744  0.9744  0.9741  0.9741  0.9740  0.9738  0.9736  0.9734  0.9734  0.9733  0.9730  0.9718
2024-04-28 23:04:42 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:04:42 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #832: GFLOPs: 7649.7688. Time: 227.6288 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #833: GFLOPs: 7620.8111. Time: 228.4938 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #834: GFLOPs: 7648.8663. Time: 227.6557 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #835: GFLOPs: 7588.3875. Time: 229.4701 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #836: GFLOPs: 7606.4499. Time: 228.9252 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #837: GFLOPs: 7620.1433. Time: 228.5138 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #838: GFLOPs: 7527.6344. Time: 231.3221 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #839: GFLOPs: 7558.9287. Time: 230.3644 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #840: GFLOPs: 7606.8290. Time: 228.9138 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #841: GFLOPs: 7609.0347. Time: 228.8474 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #842: GFLOPs: 7598.6573. Time: 229.1599 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #843: GFLOPs: 7458.4600. Time: 233.4675 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #844: GFLOPs: 7622.6290. Time: 228.4393 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #845: GFLOPs: 7547.2821. Time: 230.7199 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #846: GFLOPs: 7592.9706. Time: 229.3316 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #847: GFLOPs: 7594.4297. Time: 229.2875 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #848: GFLOPs: 7624.2763. Time: 228.3899 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #849: GFLOPs: 7615.9650. Time: 228.6392 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #850: GFLOPs: 7510.1269. Time: 231.8613 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #851: GFLOPs: 7561.8274. Time: 230.2761 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #852: GFLOPs: 7503.4695. Time: 232.0670 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #853: GFLOPs: 7603.0047. Time: 229.0289 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #854: GFLOPs: 7372.6979. Time: 236.1833 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #855: GFLOPs: 7634.0475. Time: 228.0976 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #856: GFLOPs: 7504.3812. Time: 232.0388 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #857: GFLOPs: 7636.8381. Time: 228.0142 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #858: GFLOPs: 7623.2119. Time: 228.4218 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #859: GFLOPs: 7752.8216. Time: 224.6031 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #860: GFLOPs: 7637.6563. Time: 227.9898 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #861: GFLOPs: 7707.8495. Time: 225.9136 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #862: GFLOPs: 7490.0981. Time: 232.4813 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #863: GFLOPs: 7645.1954. Time: 227.7650 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #864: GFLOPs: 7610.3112. Time: 228.8090 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #865: GFLOPs: 7634.1557. Time: 228.0944 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #866: GFLOPs: 7555.4517. Time: 230.4704 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #867: GFLOPs: 7596.9120. Time: 229.2126 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #868: GFLOPs: 7702.8127. Time: 226.0613 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #869: GFLOPs: 7714.8903. Time: 225.7074 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #870: GFLOPs: 7713.7493. Time: 225.7408 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #871: GFLOPs: 7624.5723. Time: 228.3811 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #872: GFLOPs: 7654.8422. Time: 227.4780 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #873: GFLOPs: 7684.4345. Time: 226.6020 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #874: GFLOPs: 7629.3925. Time: 228.2368 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #875: GFLOPs: 7594.5103. Time: 229.2851 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #876: GFLOPs: 7607.4531. Time: 228.8950 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #877: GFLOPs: 7629.0763. Time: 228.2462 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #878: GFLOPs: 7618.0278. Time: 228.5773 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #879: GFLOPs: 7482.4862. Time: 232.7178 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #880: GFLOPs: 7483.5696. Time: 232.6841 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #881: GFLOPs: 7710.4380. Time: 225.8377 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #882: GFLOPs: 7668.4373. Time: 227.0747 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #883: GFLOPs: 7585.9029. Time: 229.5452 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #884: GFLOPs: 7598.5156. Time: 229.1642 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #885: GFLOPs: 7606.7303. Time: 228.9167 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #886: GFLOPs: 7622.0488. Time: 228.4567 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #887: GFLOPs: 7603.3950. Time: 229.0172 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #888: GFLOPs: 7404.3131. Time: 235.1748 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #889: GFLOPs: 7585.9735. Time: 229.5431 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #890: GFLOPs: 7653.6689. Time: 227.5128 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #891: GFLOPs: 7473.5936. Time: 232.9947 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #892: GFLOPs: 7485.4865. Time: 232.6245 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #893: GFLOPs: 98.9236. Time: 17602.5593 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #894: GFLOPs: 22.2991. Time: 78088.8720 us. Best GFLOPs: 7782.3642
2024-04-28 23:05:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #895: GFLOPs: 786.3249. Time: 2214.4890 us. Best GFLOPs: 7782.3642
2024-04-28 23:15:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:15:45 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:15:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:15:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2013 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2418 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3226 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:16:32 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-28 23:16:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:17:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:17:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 164 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:17:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 149 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:17:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4308  1.4302  1.4298  1.3618  1.3181  1.2971  1.2106  1.1836  1.0733  1.0500  1.0304  1.0101  1.0076  1.0044  0.9979  0.9978
[17 : 32]:	0.9950  0.9943  0.9941  0.9936  0.9931  0.9911  0.9908  0.9902  0.9896  0.9891  0.9878  0.9878  0.9874  0.9872  0.9871  0.9870
[33 : 48]:	0.9870  0.9859  0.9857  0.9857  0.9856  0.9855  0.9846  0.9845  0.9845  0.9845  0.9844  0.9840  0.9827  0.9826  0.9825  0.9825
[49 : 64]:	0.9825  0.9824  0.9823  0.9816  0.9815  0.9809  0.9806  0.9794  0.9788  0.9783  0.9782  0.9779  0.9775  0.9771  0.9769  0.9768
2024-04-28 23:17:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:17:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #896: GFLOPs: 2752.5632. Time: 632.6132 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #897: GFLOPs: 6308.2092. Time: 276.0384 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #898: GFLOPs: 6317.8868. Time: 275.6156 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #899: GFLOPs: 6235.2169. Time: 279.2698 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #900: GFLOPs: 2500.2443. Time: 696.4551 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #901: GFLOPs: 2853.2540. Time: 610.2884 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #902: GFLOPs: 2591.8482. Time: 671.8402 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #903: GFLOPs: 2587.8509. Time: 672.8780 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #904: GFLOPs: 1603.2175. Time: 1086.1333 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #905: GFLOPs: 1587.1472. Time: 1097.1307 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #906: GFLOPs: 2959.8918. Time: 588.3012 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #907: GFLOPs: 7719.9312. Time: 225.5600 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #908: GFLOPs: 7629.5848. Time: 228.2310 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #909: GFLOPs: 7590.9271. Time: 229.3933 us. Best GFLOPs: 7782.3642
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #910: GFLOPs: 7836.7550. Time: 222.1976 us. Best GFLOPs: 7836.7550
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #911: GFLOPs: 7591.0005. Time: 229.3911 us. Best GFLOPs: 7836.7550
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #912: GFLOPs: 7605.7965. Time: 228.9448 us. Best GFLOPs: 7836.7550
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #913: GFLOPs: 7852.8904. Time: 221.7410 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #914: GFLOPs: 7622.6943. Time: 228.4373 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #915: GFLOPs: 7615.4268. Time: 228.6553 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #916: GFLOPs: 7564.1398. Time: 230.2057 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #917: GFLOPs: 7818.3725. Time: 222.7200 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #918: GFLOPs: 6646.6314. Time: 261.9835 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #919: GFLOPs: 7450.4284. Time: 233.7192 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #920: GFLOPs: 7733.9588. Time: 225.1509 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #921: GFLOPs: 7555.8469. Time: 230.4583 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #922: GFLOPs: 7740.3186. Time: 224.9659 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #923: GFLOPs: 7830.5956. Time: 222.3723 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #924: GFLOPs: 7688.0697. Time: 226.4948 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #925: GFLOPs: 7541.5437. Time: 230.8954 us. Best GFLOPs: 7852.8904
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #926: GFLOPs: 7981.0463. Time: 218.1804 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #927: GFLOPs: 7691.1326. Time: 226.4046 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #928: GFLOPs: 7670.9576. Time: 227.0001 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #929: GFLOPs: 7698.1403. Time: 226.1985 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #930: GFLOPs: 7654.0595. Time: 227.5012 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #931: GFLOPs: 7675.4989. Time: 226.8658 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #932: GFLOPs: 7624.3188. Time: 228.3887 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #933: GFLOPs: 7602.9108. Time: 229.0317 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #934: GFLOPs: 7598.9982. Time: 229.1497 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #935: GFLOPs: 7686.9842. Time: 226.5268 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #936: GFLOPs: 7682.2269. Time: 226.6671 us. Best GFLOPs: 7981.0463
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #937: GFLOPs: 8194.1701. Time: 212.5057 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #938: GFLOPs: 7610.1286. Time: 228.8145 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #939: GFLOPs: 7525.4378. Time: 231.3896 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #940: GFLOPs: 7689.6123. Time: 226.4494 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #941: GFLOPs: 7548.9348. Time: 230.6694 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #942: GFLOPs: 7539.1854. Time: 230.9676 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #943: GFLOPs: 7564.2006. Time: 230.2038 us. Best GFLOPs: 8194.1701
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #944: GFLOPs: 8196.3088. Time: 212.4503 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #945: GFLOPs: 7591.2844. Time: 229.3825 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #946: GFLOPs: 7249.6763. Time: 240.1911 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #947: GFLOPs: 7644.5317. Time: 227.7848 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #948: GFLOPs: 7656.5310. Time: 227.4278 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #949: GFLOPs: 7388.0958. Time: 235.6910 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #950: GFLOPs: 6156.0247. Time: 282.8624 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #951: GFLOPs: 7642.2812. Time: 227.8519 us. Best GFLOPs: 8196.3088
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #952: GFLOPs: 8521.1098. Time: 204.3522 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #953: GFLOPs: 7562.8163. Time: 230.2460 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #954: GFLOPs: 7645.6458. Time: 227.7516 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #955: GFLOPs: 7655.5175. Time: 227.4579 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #956: GFLOPs: 7771.9485. Time: 224.0504 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #957: GFLOPs: 2306.3074. Time: 755.0199 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #958: GFLOPs: 420.7066. Time: 4139.0078 us. Best GFLOPs: 8521.1098
2024-04-28 23:19:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #959: GFLOPs: 33.3047. Time: 52284.0727 us. Best GFLOPs: 8521.1098
2024-04-28 23:22:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:22:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:22:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:22:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:22:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1206 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:22:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:22:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2010 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:22:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2410 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:22:47 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-28 23:23:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:23:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 146 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:23:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:23:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 153 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:24:04 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9638  0.9501  0.9438  0.9431  0.9419  0.9416  0.9342  0.9337  0.9327  0.9305  0.9275  0.9269  0.9261  0.9258  0.9238  0.9236
[17 : 32]:	0.9213  0.9212  0.9212  0.9199  0.9199  0.9197  0.9185  0.9167  0.9162  0.9162  0.9151  0.9148  0.9143  0.9137  0.9137  0.9136
[33 : 48]:	0.9134  0.9126  0.9124  0.9123  0.9122  0.9121  0.9120  0.9110  0.9109  0.9109  0.9109  0.9104  0.9102  0.9101  0.9092  0.9089
[49 : 64]:	0.9068  0.9064  0.9064  0.9064  0.9062  0.9056  0.9054  0.9053  0.9051  0.9050  0.9047  0.9042  0.9042  0.9037  0.9036  0.9032
2024-04-28 23:24:04 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:24:04 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #960: GFLOPs: 8520.4328. Time: 204.3685 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #961: GFLOPs: 8160.8192. Time: 213.3742 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #962: GFLOPs: 7654.6093. Time: 227.4849 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #963: GFLOPs: 7896.4089. Time: 220.5190 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #964: GFLOPs: 7930.8474. Time: 219.5614 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #965: GFLOPs: 7165.9903. Time: 242.9961 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #966: GFLOPs: 7185.5387. Time: 242.3351 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #967: GFLOPs: 7434.0384. Time: 234.2345 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #968: GFLOPs: 8506.0241. Time: 204.7147 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #969: GFLOPs: 7244.0174. Time: 240.3788 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #970: GFLOPs: 7084.7214. Time: 245.7835 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #971: GFLOPs: 7322.6712. Time: 237.7968 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #972: GFLOPs: 7701.7499. Time: 226.0925 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #973: GFLOPs: 7022.3261. Time: 247.9674 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #974: GFLOPs: 7916.0055. Time: 219.9731 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #975: GFLOPs: 7706.7320. Time: 225.9463 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #976: GFLOPs: 7840.2954. Time: 222.0972 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #977: GFLOPs: 6754.0885. Time: 257.8154 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #978: GFLOPs: 7694.1892. Time: 226.3147 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #979: GFLOPs: 7834.2461. Time: 222.2687 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #980: GFLOPs: 7495.2074. Time: 232.3228 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #981: GFLOPs: 7924.3411. Time: 219.7417 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #982: GFLOPs: 7440.7600. Time: 234.0229 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #983: GFLOPs: 7614.1374. Time: 228.6940 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #984: GFLOPs: 7826.9426. Time: 222.4761 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #985: GFLOPs: 7632.8361. Time: 228.1338 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #986: GFLOPs: 7716.4559. Time: 225.6616 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #987: GFLOPs: 7794.9896. Time: 223.3881 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #988: GFLOPs: 7873.2652. Time: 221.1672 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #989: GFLOPs: 7614.9527. Time: 228.6696 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #990: GFLOPs: 7671.5297. Time: 226.9831 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #991: GFLOPs: 7660.0362. Time: 227.3237 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #992: GFLOPs: 7829.4795. Time: 222.4040 us. Best GFLOPs: 8521.1098
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #993: GFLOPs: 9103.2274. Time: 191.2847 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #994: GFLOPs: 7699.3227. Time: 226.1638 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #995: GFLOPs: 7503.3878. Time: 232.0696 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #996: GFLOPs: 7280.4506. Time: 239.1758 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #997: GFLOPs: 7640.8732. Time: 227.8938 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #998: GFLOPs: 7609.0847. Time: 228.8459 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #999: GFLOPs: 8243.1568. Time: 211.2428 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1000: GFLOPs: 7451.4836. Time: 233.6861 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1001: GFLOPs: 7507.5311. Time: 231.9415 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1002: GFLOPs: 7642.1132. Time: 227.8569 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1003: GFLOPs: 6875.3208. Time: 253.2693 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1004: GFLOPs: 7824.5396. Time: 222.5445 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1005: GFLOPs: 7843.3207. Time: 222.0116 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1006: GFLOPs: 7705.2132. Time: 225.9909 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1007: GFLOPs: 7669.8550. Time: 227.0327 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1008: GFLOPs: 7631.5819. Time: 228.1713 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1009: GFLOPs: 7798.6153. Time: 223.2842 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1010: GFLOPs: 7389.8048. Time: 235.6365 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1011: GFLOPs: 7620.9380. Time: 228.4900 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1012: GFLOPs: 7594.5218. Time: 229.2847 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1013: GFLOPs: 7633.7270. Time: 228.1072 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1014: GFLOPs: 7609.0312. Time: 228.8475 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1015: GFLOPs: 7580.6505. Time: 229.7043 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1016: GFLOPs: 7917.7307. Time: 219.9251 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1017: GFLOPs: 7778.2787. Time: 223.8680 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1018: GFLOPs: 7788.7011. Time: 223.5685 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1019: GFLOPs: 7707.9705. Time: 225.9100 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1020: GFLOPs: 7661.3771. Time: 227.2839 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1021: GFLOPs: 5402.0316. Time: 322.3432 us. Best GFLOPs: 9103.2274
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1022: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(28) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(28) // T.int64(7) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(7) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(196))
                                        v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                        v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1568))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) // T.int64(512))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(512) // T.int64(256))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused)
                                    v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(256))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(28) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(28) // T.int64(7) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0_fused + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(1), T.int64(2), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(28) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_1_nu_1_co_1_p_1_fused % T.int64(28) // T.int64(7) * T.int64(64) + eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 2, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 4, 32, 2, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 4, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l131, l132, l133, l134, l135 = sch.get_loops(block=b97)
l136, l137, l138 = sch.split(loop=l135, factors=[None, 128, 4], preserve_unit_iters=True)
sch.vectorize(loop=l138)
sch.bind(loop=l137, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l139, l140, l141, l142, l143 = sch.get_loops(block=b108)
l144, l145 = sch.split(loop=l143, factors=[None, 128], preserve_unit_iters=True)
sch.bind(loop=l145, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186 = sch.get_loops(block=b151)
l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l187, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l187, ann_key="pragma_unroll_explicit", ann_val=1)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b153)
l208, l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l208, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l208, ann_key="pragma_unroll_explicit", ann_val=1)
l216, l217, l218, l219 = sch.get_loops(block=b155)
b220 = sch.get_block(name="data_pack", func_name="main")
l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b220)
b227 = sch.decompose_reduction(block=b220, loop=l225)
b228 = sch.get_block(name="bgemm", func_name="main")
l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242 = sch.get_loops(block=b228)
b243 = sch.decompose_reduction(block=b228, loop=l232)
b244 = sch.get_block(name="inverse", func_name="main")
l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b244)
b253 = sch.decompose_reduction(block=b244, loop=l251)
2024-04-28 23:25:35 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1023: GFLOPs: 6767.2252. Time: 257.3149 us. Best GFLOPs: 9103.2274
2024-04-28 23:36:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:37:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:37:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1617 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2419 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2817 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:37:42 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-28 23:37:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:38:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 157 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:38:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:38:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 131 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:39:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2749  1.0899  1.0308  1.0094  0.9813  0.9806  0.9353  0.9255  0.9240  0.9222  0.9134  0.9107  0.9060  0.9029  0.9016  0.8961
[17 : 32]:	0.8931  0.8924  0.8919  0.8899  0.8885  0.8857  0.8845  0.8826  0.8823  0.8820  0.8819  0.8817  0.8817  0.8810  0.8780  0.8778
[33 : 48]:	0.8774  0.8763  0.8756  0.8728  0.8725  0.8725  0.8723  0.8722  0.8720  0.8715  0.8710  0.8706  0.8700  0.8699  0.8697  0.8695
[49 : 64]:	0.8695  0.8691  0.8688  0.8685  0.8678  0.8676  0.8671  0.8668  0.8666  0.8665  0.8660  0.8660  0.8658  0.8658  0.8656  0.8655
2024-04-28 23:39:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:39:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1024: GFLOPs: 10.2636. Time: 169658.0300 us. Best GFLOPs: 9103.2274
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1025: GFLOPs: 262.1315. Time: 6642.8799 us. Best GFLOPs: 9103.2274
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1026: GFLOPs: 27.0127. Time: 64462.5090 us. Best GFLOPs: 9103.2274
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1027: GFLOPs: 5.2086. Time: 334311.0757 us. Best GFLOPs: 9103.2274
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1028: GFLOPs: 27.0093. Time: 64470.6980 us. Best GFLOPs: 9103.2274
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1029: GFLOPs: 24.9954. Time: 69665.1100 us. Best GFLOPs: 9103.2274
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1030: GFLOPs: 9111.1533. Time: 191.1183 us. Best GFLOPs: 9111.1533
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1031: GFLOPs: 9165.7294. Time: 189.9803 us. Best GFLOPs: 9165.7294
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1032: GFLOPs: 5.2369. Time: 332508.1583 us. Best GFLOPs: 9165.7294
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1033: GFLOPs: 9183.6691. Time: 189.6092 us. Best GFLOPs: 9183.6691
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1034: GFLOPs: 7536.5732. Time: 231.0477 us. Best GFLOPs: 9183.6691
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1035: GFLOPs: 9138.4516. Time: 190.5474 us. Best GFLOPs: 9183.6691
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1036: GFLOPs: 7583.6265. Time: 229.6141 us. Best GFLOPs: 9183.6691
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1037: GFLOPs: 8215.3694. Time: 211.9573 us. Best GFLOPs: 9183.6691
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1038: GFLOPs: 8501.8941. Time: 204.8141 us. Best GFLOPs: 9183.6691
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1039: GFLOPs: 9338.4940. Time: 186.4656 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1040: GFLOPs: 7834.2370. Time: 222.2690 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1041: GFLOPs: 7480.8777. Time: 232.7679 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1042: GFLOPs: 9155.2617. Time: 190.1975 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1043: GFLOPs: 9213.7421. Time: 188.9903 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1044: GFLOPs: 7839.7998. Time: 222.1113 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1045: GFLOPs: 5.3836. Time: 323446.4517 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1046: GFLOPs: 8088.8530. Time: 215.2725 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1047: GFLOPs: 7599.1420. Time: 229.1453 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1048: GFLOPs: 7887.9353. Time: 220.7559 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1049: GFLOPs: 8007.7392. Time: 217.4531 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1050: GFLOPs: 7998.1390. Time: 217.7141 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1051: GFLOPs: 5.3899. Time: 323067.2200 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1052: GFLOPs: 5.4135. Time: 321658.2030 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1053: GFLOPs: 8511.8631. Time: 204.5742 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1054: GFLOPs: 9147.0326. Time: 190.3686 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1055: GFLOPs: 7677.0374. Time: 226.8203 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1056: GFLOPs: 7873.6162. Time: 221.1573 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1057: GFLOPs: 8201.5578. Time: 212.3143 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1058: GFLOPs: 7918.3426. Time: 219.9081 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1059: GFLOPs: 7455.9750. Time: 233.5453 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1060: GFLOPs: 7126.8205. Time: 244.3317 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1061: GFLOPs: 7854.7080. Time: 221.6897 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1062: GFLOPs: 9186.8437. Time: 189.5437 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1063: GFLOPs: 7608.2143. Time: 228.8721 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1064: GFLOPs: 6744.1122. Time: 258.1968 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1065: GFLOPs: 7861.6311. Time: 221.4945 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1066: GFLOPs: 7473.1400. Time: 233.0089 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1067: GFLOPs: 7928.9082. Time: 219.6151 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1068: GFLOPs: 8116.0491. Time: 214.5512 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1069: GFLOPs: 7938.3585. Time: 219.3536 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1070: GFLOPs: 7914.8094. Time: 220.0063 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1071: GFLOPs: 7929.6323. Time: 219.5950 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1072: GFLOPs: 8217.0978. Time: 211.9128 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1073: GFLOPs: 7794.7604. Time: 223.3947 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1074: GFLOPs: 7118.3089. Time: 244.6238 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1075: GFLOPs: 8331.9056. Time: 208.9928 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1076: GFLOPs: 7714.8613. Time: 225.7083 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1077: GFLOPs: 7723.1181. Time: 225.4670 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1078: GFLOPs: 7922.8881. Time: 219.7820 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1079: GFLOPs: 7708.0442. Time: 225.9079 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1080: GFLOPs: 7940.2585. Time: 219.3012 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1081: GFLOPs: 9136.7804. Time: 190.5822 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1082: GFLOPs: 7792.5939. Time: 223.4568 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1083: GFLOPs: 7708.6913. Time: 225.8889 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1084: GFLOPs: 7922.8604. Time: 219.7827 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1085: GFLOPs: 440.1746. Time: 3955.9482 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1086: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(2)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(32) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(32) // T.int64(2) * T.int64(16) + co_3_init * T.int64(16) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(14) + p_3_init * T.int64(2) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(256)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(49)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) // T.int64(1568))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(1568) // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(392) // T.int64(196))
                                    v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2048))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2048) // T.int64(512))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(256))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(2)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(32) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(32) // T.int64(2) * T.int64(16) + co_3 * T.int64(16) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(14) + p_3 * T.int64(2) + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(2) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(16), T.int64(14)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(32) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(7) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused % T.int64(32) // T.int64(2) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_1_nu_1_co_1_p_1_fused % T.int64(7) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 1, 16, 1, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 7, 2, 7, 2])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[256, 2, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136 = sch.split(loop=l134, factors=[None, 64], preserve_unit_iters=True)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l137, l138, l139, l140, l141 = sch.get_loops(block=b108)
l142, l143, l144 = sch.split(loop=l141, factors=[None, 64, 4], preserve_unit_iters=True)
sch.vectorize(loop=l144)
sch.bind(loop=l143, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b149)
l179, l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-28 23:40:46 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1087: GFLOPs: 859.4006. Time: 2026.1888 us. Best GFLOPs: 9338.4940
2024-04-28 23:40:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:40:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:40:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:40:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 810 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2020 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2424 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2827 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3229 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:41:32 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-04-28 23:41:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:42:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 185 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:42:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 153 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:42:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 173 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-28 23:42:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9838  0.9747  0.9738  0.9692  0.9628  0.9613  0.9579  0.9557  0.9535  0.9525  0.9500  0.9482  0.9370  0.9359  0.9356  0.9352
[17 : 32]:	0.9330  0.9317  0.9311  0.9306  0.9297  0.9294  0.9281  0.9263  0.9203  0.9197  0.9192  0.9170  0.9137  0.9110  0.9110  0.9096
[33 : 48]:	0.9084  0.9070  0.9063  0.9061  0.9040  0.9039  0.9034  0.8996  0.8963  0.8959  0.8953  0.8951  0.8951  0.8949  0.8947  0.8946
[49 : 64]:	0.8936  0.8932  0.8929  0.8920  0.8913  0.8901  0.8893  0.8885  0.8880  0.8879  0.8867  0.8860  0.8851  0.8849  0.8845  0.8841
2024-04-28 23:42:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:42:50 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1088: GFLOPs: 9399.1261. Time: 185.2627 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1089: GFLOPs: 9314.9609. Time: 186.9367 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1090: GFLOPs: 9191.3418. Time: 189.4509 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1091: GFLOPs: 9180.1271. Time: 189.6823 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1092: GFLOPs: 8990.7836. Time: 193.6770 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1093: GFLOPs: 9206.0504. Time: 189.1482 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1094: GFLOPs: 9156.6656. Time: 190.1683 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1095: GFLOPs: 9122.0744. Time: 190.8895 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1096: GFLOPs: 9244.0862. Time: 188.3699 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1097: GFLOPs: 9353.9114. Time: 186.1583 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1098: GFLOPs: 9181.6626. Time: 189.6506 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1099: GFLOPs: 9177.4820. Time: 189.7370 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1100: GFLOPs: 8580.7401. Time: 202.9321 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1101: GFLOPs: 9199.3509. Time: 189.2860 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1102: GFLOPs: 9138.7864. Time: 190.5404 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1103: GFLOPs: 9125.8051. Time: 190.8114 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1104: GFLOPs: 9226.1625. Time: 188.7359 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1105: GFLOPs: 9218.8108. Time: 188.8864 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1106: GFLOPs: 9222.6096. Time: 188.8086 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1107: GFLOPs: 9214.1824. Time: 188.9813 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1108: GFLOPs: 9314.0269. Time: 186.9554 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1109: GFLOPs: 9221.3854. Time: 188.8337 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1110: GFLOPs: 9200.8400. Time: 189.2553 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1111: GFLOPs: 9022.7599. Time: 192.9906 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1112: GFLOPs: 9344.8111. Time: 186.3396 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1113: GFLOPs: 8735.6188. Time: 199.3342 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1114: GFLOPs: 9243.1368. Time: 188.3893 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1115: GFLOPs: 9045.7120. Time: 192.5009 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1116: GFLOPs: 8340.5371. Time: 208.7765 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1117: GFLOPs: 7813.6869. Time: 222.8536 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1118: GFLOPs: 8987.7185. Time: 193.7430 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1119: GFLOPs: 7776.7629. Time: 223.9117 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1120: GFLOPs: 8358.4907. Time: 208.3280 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1121: GFLOPs: 8745.2788. Time: 199.1141 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1122: GFLOPs: 9212.1542. Time: 189.0229 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1123: GFLOPs: 8529.1125. Time: 204.1605 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1124: GFLOPs: 9123.2352. Time: 190.8652 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1125: GFLOPs: 8341.0486. Time: 208.7637 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1126: GFLOPs: 8354.2985. Time: 208.4326 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1127: GFLOPs: 8311.7818. Time: 209.4988 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1128: GFLOPs: 8163.7738. Time: 213.2969 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1129: GFLOPs: 8612.2783. Time: 202.1890 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1130: GFLOPs: 8605.3406. Time: 202.3520 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1131: GFLOPs: 8374.7775. Time: 207.9229 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1132: GFLOPs: 8473.4875. Time: 205.5007 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1133: GFLOPs: 8599.1785. Time: 202.4970 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1134: GFLOPs: 8589.2111. Time: 202.7320 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1135: GFLOPs: 8289.4681. Time: 210.0627 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1136: GFLOPs: 8532.2670. Time: 204.0850 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1137: GFLOPs: 8626.0557. Time: 201.8661 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1138: GFLOPs: 8611.2493. Time: 202.2132 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1139: GFLOPs: 8554.4053. Time: 203.5569 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1140: GFLOPs: 8310.1531. Time: 209.5398 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1141: GFLOPs: 9198.7858. Time: 189.2976 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1142: GFLOPs: 8976.6833. Time: 193.9812 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1143: GFLOPs: 8289.3859. Time: 210.0648 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1144: GFLOPs: 8254.1809. Time: 210.9607 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1145: GFLOPs: 8583.9517. Time: 202.8562 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1146: GFLOPs: 8286.1660. Time: 210.1464 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1147: GFLOPs: 8278.5520. Time: 210.3397 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1148: GFLOPs: 8261.3826. Time: 210.7768 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1149: GFLOPs: 748.0596. Time: 2327.7662 us. Best GFLOPs: 9399.1261
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1150: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(60) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(4), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + eps_3_init * T.int64(2) + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + co_3_init * T.int64(4) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_2_nu_2_co_2_p_2_fused * T.int64(4) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(128)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(64)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(49) + ax0_ax1_ax2_ax3_fused_1) // T.int64(1568))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(49) + ax0_ax1_ax2_ax3_fused_1) % T.int64(1568) // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(49) + ax0_ax1_ax2_ax3_fused_1) % T.int64(784) // T.int64(196))
                                    v3 = T.axis.spatial(T.int64(196), (ax0_ax1_ax2_ax3_fused_0 * T.int64(49) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(11)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(512))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(512) // T.int64(128))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(49) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(2048))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(4), T.int64(2), T.int64(1), T.int64(4), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + eps_3 * T.int64(2) + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + co_3 * T.int64(4) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_2_nu_2_co_2_p_2_fused * T.int64(4) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(4) + ci_1 * T.int64(4) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(4) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(4) * T.int64(128) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_2_nu_2_co_2_p_2_fused * T.int64(4) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[4, 32, 1, 1, 4])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 1, 49, 4, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 1, 4])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136 = sch.split(loop=l134, factors=[None, 49], preserve_unit_iters=True)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l137, l138, l139, l140, l141 = sch.get_loops(block=b108)
l142, l143, l144 = sch.split(loop=l141, factors=[None, 49, 4], preserve_unit_iters=True)
sch.vectorize(loop=l144)
sch.bind(loop=l143, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b149)
l179, l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-28 23:44:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1151: GFLOPs: 11.2023. Time: 155442.1793 us. Best GFLOPs: 9399.1261
2024-04-29 00:05:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:05:34 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:05:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:05:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:05:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:05:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1613 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:06:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2017 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:06:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2418 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:06:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2815 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:06:13 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 00:06:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 152 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:06:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 179 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:07:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:07:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 166 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:07:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0034  1.0000  0.9977  0.9973  0.9926  0.9921  0.9911  0.9905  0.9902  0.9900  0.9896  0.9884  0.9870  0.9859  0.9858  0.9853
[17 : 32]:	0.9852  0.9842  0.9841  0.9838  0.9800  0.9791  0.9787  0.9781  0.9767  0.9764  0.9764  0.9764  0.9764  0.9760  0.9760  0.9757
[33 : 48]:	0.9751  0.9751  0.9729  0.9727  0.9726  0.9721  0.9720  0.9708  0.9698  0.9696  0.9694  0.9692  0.9677  0.9650  0.9646  0.9646
[49 : 64]:	0.9646  0.9645  0.9642  0.9641  0.9632  0.9631  0.9623  0.9612  0.9609  0.9606  0.9601  0.9597  0.9596  0.9590  0.9589  0.9586
2024-04-29 00:07:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:07:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1152: GFLOPs: 9344.0462. Time: 186.3548 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1153: GFLOPs: 1821.1353. Time: 956.1661 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1154: GFLOPs: 9137.0223. Time: 190.5772 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1155: GFLOPs: 9245.3712. Time: 188.3438 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1156: GFLOPs: 9219.9974. Time: 188.8621 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1157: GFLOPs: 9163.5280. Time: 190.0259 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1158: GFLOPs: 9113.8113. Time: 191.0625 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1159: GFLOPs: 9343.0258. Time: 186.3752 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1160: GFLOPs: 9150.0398. Time: 190.3060 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1161: GFLOPs: 9157.7288. Time: 190.1463 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1162: GFLOPs: 9101.0491. Time: 191.3305 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1163: GFLOPs: 9244.3159. Time: 188.3653 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1164: GFLOPs: 9322.1621. Time: 186.7923 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1165: GFLOPs: 9209.5286. Time: 189.0768 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1166: GFLOPs: 9122.2571. Time: 190.8856 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1167: GFLOPs: 9231.6822. Time: 188.6230 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1168: GFLOPs: 9136.1698. Time: 190.5950 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1169: GFLOPs: 9148.2434. Time: 190.3434 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1170: GFLOPs: 8760.9025. Time: 198.7590 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1171: GFLOPs: 9195.4966. Time: 189.3653 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1172: GFLOPs: 9171.0022. Time: 189.8711 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1173: GFLOPs: 9249.4510. Time: 188.2607 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1174: GFLOPs: 9167.9739. Time: 189.9338 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1175: GFLOPs: 9216.7355. Time: 188.9289 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1176: GFLOPs: 9168.8122. Time: 189.9164 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1177: GFLOPs: 9257.4432. Time: 188.0981 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1178: GFLOPs: 9187.6438. Time: 189.5271 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1179: GFLOPs: 9235.3525. Time: 188.5481 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1180: GFLOPs: 9235.3868. Time: 188.5474 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1181: GFLOPs: 9072.2219. Time: 191.9384 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1182: GFLOPs: 9084.0553. Time: 191.6884 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1183: GFLOPs: 8651.4411. Time: 201.2737 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1184: GFLOPs: 8774.8417. Time: 198.4432 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1185: GFLOPs: 9098.5230. Time: 191.3836 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1186: GFLOPs: 9243.0665. Time: 188.3907 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1187: GFLOPs: 9244.1891. Time: 188.3678 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1188: GFLOPs: 9264.4303. Time: 187.9563 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1189: GFLOPs: 9114.1384. Time: 191.0557 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1190: GFLOPs: 9003.2987. Time: 193.4078 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1191: GFLOPs: 9071.1390. Time: 191.9613 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1192: GFLOPs: 8978.2628. Time: 193.9471 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1193: GFLOPs: 9111.7467. Time: 191.1058 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1194: GFLOPs: 9240.8504. Time: 188.4359 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1195: GFLOPs: 8728.0641. Time: 199.5068 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1196: GFLOPs: 9220.7678. Time: 188.8463 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1197: GFLOPs: 8695.6993. Time: 200.2493 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1198: GFLOPs: 9019.2306. Time: 193.0661 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1199: GFLOPs: 8950.6657. Time: 194.5451 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1200: GFLOPs: 9390.4386. Time: 185.4341 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1201: GFLOPs: 9018.4255. Time: 193.0834 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1202: GFLOPs: 9210.1099. Time: 189.0648 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1203: GFLOPs: 9193.9848. Time: 189.3964 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1204: GFLOPs: 9201.5173. Time: 189.2414 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1205: GFLOPs: 8752.4456. Time: 198.9510 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1206: GFLOPs: 9113.7016. Time: 191.0648 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1207: GFLOPs: 9059.2932. Time: 192.2123 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1208: GFLOPs: 8948.5206. Time: 194.5917 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1209: GFLOPs: 9104.8043. Time: 191.2515 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1210: GFLOPs: 8924.7594. Time: 195.1098 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1211: GFLOPs: 9114.9029. Time: 191.0397 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1212: GFLOPs: 9222.4469. Time: 188.8119 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1213: GFLOPs: 2.2363. Time: 778668.0500 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1214: GFLOPs: 2731.9021. Time: 637.3976 us. Best GFLOPs: 9399.1261
2024-04-29 00:08:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1215: GFLOPs: 208.3133. Time: 8359.0825 us. Best GFLOPs: 9399.1261
2024-04-29 00:36:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:36:53 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:36:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1214 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1620 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2025 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2431 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2832 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3235 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3642 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 4040 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:37:51 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-04-29 00:38:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:38:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 159 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:38:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:39:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:39:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9913  0.9879  0.9860  0.9858  0.9834  0.9831  0.9817  0.9809  0.9808  0.9803  0.9797  0.9794  0.9793  0.9791  0.9791  0.9789
[17 : 32]:	0.9786  0.9779  0.9776  0.9772  0.9771  0.9771  0.9768  0.9767  0.9767  0.9767  0.9766  0.9764  0.9758  0.9757  0.9757  0.9750
[33 : 48]:	0.9739  0.9737  0.9736  0.9735  0.9732  0.9731  0.9723  0.9722  0.9720  0.9719  0.9718  0.9718  0.9714  0.9711  0.9705  0.9704
[49 : 64]:	0.9702  0.9701  0.9698  0.9695  0.9691  0.9691  0.9689  0.9689  0.9687  0.9687  0.9684  0.9683  0.9682  0.9682  0.9679  0.9679
2024-04-29 00:39:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:39:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1216: GFLOPs: 9300.9091. Time: 187.2191 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1217: GFLOPs: 9115.5847. Time: 191.0254 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1218: GFLOPs: 9164.4182. Time: 190.0075 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1219: GFLOPs: 9243.4893. Time: 188.3821 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1220: GFLOPs: 9390.0603. Time: 185.4416 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1221: GFLOPs: 9167.7957. Time: 189.9375 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1222: GFLOPs: 9223.7587. Time: 188.7851 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1223: GFLOPs: 9351.6806. Time: 186.2027 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1224: GFLOPs: 9366.9327. Time: 185.8995 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1225: GFLOPs: 9220.8940. Time: 188.8437 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1226: GFLOPs: 9208.3447. Time: 189.1011 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1227: GFLOPs: 9163.5661. Time: 190.0251 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1228: GFLOPs: 9149.5530. Time: 190.3162 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1229: GFLOPs: 9121.6697. Time: 190.8979 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1230: GFLOPs: 9137.1195. Time: 190.5751 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1231: GFLOPs: 9148.3191. Time: 190.3418 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1232: GFLOPs: 9167.2743. Time: 189.9483 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1233: GFLOPs: 9160.8038. Time: 190.0824 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1234: GFLOPs: 9128.3918. Time: 190.7574 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1235: GFLOPs: 9208.8087. Time: 189.0915 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1236: GFLOPs: 9086.0927. Time: 191.6454 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1237: GFLOPs: 8992.6689. Time: 193.6364 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1238: GFLOPs: 9111.2485. Time: 191.1163 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1239: GFLOPs: 9073.3518. Time: 191.9145 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1240: GFLOPs: 9066.0058. Time: 192.0700 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1241: GFLOPs: 9086.0133. Time: 191.6471 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1242: GFLOPs: 9133.7704. Time: 190.6450 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1243: GFLOPs: 9142.2773. Time: 190.4676 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1244: GFLOPs: 9117.2031. Time: 190.9915 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1245: GFLOPs: 9051.8235. Time: 192.3710 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1246: GFLOPs: 9038.2493. Time: 192.6599 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1247: GFLOPs: 9054.1035. Time: 192.3225 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1248: GFLOPs: 9157.2216. Time: 190.1568 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1249: GFLOPs: 9092.1821. Time: 191.5171 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1250: GFLOPs: 8954.5126. Time: 194.4615 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1251: GFLOPs: 9069.3122. Time: 192.0000 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1252: GFLOPs: 8998.9874. Time: 193.5004 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1253: GFLOPs: 8960.7635. Time: 194.3258 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1254: GFLOPs: 9040.0398. Time: 192.6217 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1255: GFLOPs: 9143.9003. Time: 190.4338 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1256: GFLOPs: 9056.4202. Time: 192.2733 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1257: GFLOPs: 9321.8652. Time: 186.7982 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1258: GFLOPs: 9198.8984. Time: 189.2953 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1259: GFLOPs: 9117.3323. Time: 190.9888 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1260: GFLOPs: 9074.9427. Time: 191.8809 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1261: GFLOPs: 9116.4026. Time: 191.0082 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1262: GFLOPs: 9128.5041. Time: 190.7550 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1263: GFLOPs: 9170.4371. Time: 189.8828 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1264: GFLOPs: 9048.7471. Time: 192.4364 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1265: GFLOPs: 8867.2937. Time: 196.3742 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1266: GFLOPs: 9027.4829. Time: 192.8896 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1267: GFLOPs: 9093.3887. Time: 191.4916 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1268: GFLOPs: 9109.5999. Time: 191.1509 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1269: GFLOPs: 9056.3147. Time: 192.2756 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:14 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1270: GFLOPs: 9073.5408. Time: 191.9105 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1271: GFLOPs: 9041.1694. Time: 192.5976 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1272: GFLOPs: 9331.2839. Time: 186.6097 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1273: GFLOPs: 9090.1140. Time: 191.5606 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1274: GFLOPs: 9197.2375. Time: 189.3294 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1275: GFLOPs: 9092.9546. Time: 191.5008 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1276: GFLOPs: 9093.2187. Time: 191.4952 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1277: GFLOPs: 3031.3339. Time: 574.4362 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1278: GFLOPs: 56.2357. Time: 30964.4793 us. Best GFLOPs: 9399.1261
2024-04-29 00:40:15 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1279: GFLOPs: 1459.3749. Time: 1193.1875 us. Best GFLOPs: 9399.1261
2024-04-29 00:58:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:58:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:59:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1210 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2411 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2817 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 00:59:38 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 00:59:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:00:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:00:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 179 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:00:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 145 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:00:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9980  0.9903  0.9866  0.9866  0.9864  0.9858  0.9838  0.9834  0.9828  0.9820  0.9797  0.9780  0.9773  0.9772  0.9771  0.9762
[17 : 32]:	0.9760  0.9759  0.9759  0.9755  0.9753  0.9748  0.9748  0.9748  0.9748  0.9748  0.9746  0.9744  0.9744  0.9742  0.9741  0.9738
[33 : 48]:	0.9738  0.9738  0.9736  0.9735  0.9734  0.9734  0.9728  0.9728  0.9727  0.9724  0.9722  0.9721  0.9721  0.9721  0.9721  0.9715
[49 : 64]:	0.9715  0.9715  0.9715  0.9713  0.9713  0.9713  0.9712  0.9711  0.9710  0.9710  0.9710  0.9703  0.9703  0.9700  0.9700  0.9699
2024-04-29 01:00:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:00:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1280: GFLOPs: 9309.3447. Time: 187.0495 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1281: GFLOPs: 9300.9924. Time: 187.2174 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1282: GFLOPs: 9374.9879. Time: 185.7398 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1283: GFLOPs: 9065.2101. Time: 192.0869 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1284: GFLOPs: 8968.7080. Time: 194.1537 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1285: GFLOPs: 9185.1038. Time: 189.5796 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1286: GFLOPs: 9012.0183. Time: 193.2206 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1287: GFLOPs: 9076.8002. Time: 191.8416 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1288: GFLOPs: 9354.5583. Time: 186.1454 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1289: GFLOPs: 9330.2329. Time: 186.6307 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1290: GFLOPs: 9209.5234. Time: 189.0769 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1291: GFLOPs: 9142.2773. Time: 190.4676 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1292: GFLOPs: 9149.0161. Time: 190.3273 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1293: GFLOPs: 9197.0618. Time: 189.3331 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1294: GFLOPs: 8967.7630. Time: 194.1742 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1295: GFLOPs: 9033.3735. Time: 192.7639 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1296: GFLOPs: 9064.4251. Time: 192.1035 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1297: GFLOPs: 9101.3977. Time: 191.3231 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1298: GFLOPs: 9105.3209. Time: 191.2407 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1299: GFLOPs: 9171.5086. Time: 189.8606 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1300: GFLOPs: 8990.9848. Time: 193.6727 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1301: GFLOPs: 9224.5817. Time: 188.7682 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1302: GFLOPs: 9106.2122. Time: 191.2220 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1303: GFLOPs: 9100.3519. Time: 191.3451 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1304: GFLOPs: 9107.3273. Time: 191.1986 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1305: GFLOPs: 9123.8603. Time: 190.8521 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1306: GFLOPs: 9129.3802. Time: 190.7367 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1307: GFLOPs: 9067.7229. Time: 192.0336 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1308: GFLOPs: 8922.5640. Time: 195.1578 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1309: GFLOPs: 8973.1631. Time: 194.0573 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1310: GFLOPs: 8985.4477. Time: 193.7920 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1311: GFLOPs: 9047.8895. Time: 192.4546 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1312: GFLOPs: 9043.1980. Time: 192.5544 us. Best GFLOPs: 9399.1261
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1313: GFLOPs: 9584.4775. Time: 181.6800 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1314: GFLOPs: 9320.4156. Time: 186.8273 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1315: GFLOPs: 9020.7296. Time: 193.0340 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1316: GFLOPs: 8600.5392. Time: 202.4650 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1317: GFLOPs: 9118.9473. Time: 190.9549 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1318: GFLOPs: 9069.3553. Time: 191.9991 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1319: GFLOPs: 9083.9324. Time: 191.6910 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1320: GFLOPs: 9163.1531. Time: 190.0337 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1321: GFLOPs: 9124.4872. Time: 190.8390 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1322: GFLOPs: 8938.3870. Time: 194.8123 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1323: GFLOPs: 9006.1671. Time: 193.3462 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1324: GFLOPs: 9094.7008. Time: 191.4640 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1325: GFLOPs: 9070.3453. Time: 191.9781 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1326: GFLOPs: 9021.7516. Time: 193.0122 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1327: GFLOPs: 9025.7814. Time: 192.9260 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1328: GFLOPs: 9015.2531. Time: 193.1513 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1329: GFLOPs: 9045.8838. Time: 192.4973 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1330: GFLOPs: 9167.1815. Time: 189.9502 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1331: GFLOPs: 9075.0909. Time: 191.8777 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1332: GFLOPs: 8579.9767. Time: 202.9502 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1333: GFLOPs: 9059.3998. Time: 192.2101 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1334: GFLOPs: 9220.6118. Time: 188.8495 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1335: GFLOPs: 9059.3288. Time: 192.2116 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1336: GFLOPs: 9087.5409. Time: 191.6149 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1337: GFLOPs: 9135.4477. Time: 190.6100 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1338: GFLOPs: 9086.8678. Time: 191.6291 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1339: GFLOPs: 9049.2675. Time: 192.4253 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1340: GFLOPs: 9089.4526. Time: 191.5746 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1341: GFLOPs: 7295.1136. Time: 238.6951 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1342: GFLOPs: 3387.3126. Time: 514.0677 us. Best GFLOPs: 9584.4775
2024-04-29 01:02:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1343: GFLOPs: 119.1563. Time: 14613.6507 us. Best GFLOPs: 9584.4775
2024-04-29 01:09:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:10:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:10:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2013 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2815 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:10:40 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 01:10:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 155 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:11:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:11:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 156 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:11:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 152 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:11:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9715  0.9670  0.9649  0.9639  0.9622  0.9620  0.9614  0.9612  0.9608  0.9607  0.9605  0.9605  0.9602  0.9587  0.9583  0.9582
[17 : 32]:	0.9582  0.9582  0.9576  0.9566  0.9565  0.9560  0.9552  0.9546  0.9536  0.9532  0.9532  0.9530  0.9528  0.9527  0.9525  0.9524
[33 : 48]:	0.9523  0.9520  0.9519  0.9513  0.9511  0.9509  0.9506  0.9503  0.9502  0.9501  0.9499  0.9496  0.9495  0.9492  0.9486  0.9482
[49 : 64]:	0.9482  0.9482  0.9478  0.9477  0.9476  0.9475  0.9473  0.9473  0.9468  0.9468  0.9467  0.9467  0.9465  0.9464  0.9461  0.9455
2024-04-29 01:12:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:12:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1344: GFLOPs: 9321.4261. Time: 186.8070 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1345: GFLOPs: 9114.1619. Time: 191.0552 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1346: GFLOPs: 9056.5829. Time: 192.2699 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1347: GFLOPs: 9100.1189. Time: 191.3500 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1348: GFLOPs: 8980.2853. Time: 193.9034 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1349: GFLOPs: 9160.3129. Time: 190.0926 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1350: GFLOPs: 9150.0807. Time: 190.3052 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1351: GFLOPs: 9164.2060. Time: 190.0119 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1352: GFLOPs: 9017.6476. Time: 193.1000 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1353: GFLOPs: 9173.0567. Time: 189.8285 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1354: GFLOPs: 9145.6831. Time: 190.3967 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1355: GFLOPs: 9007.2551. Time: 193.3228 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1356: GFLOPs: 9323.1638. Time: 186.7722 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1357: GFLOPs: 9292.5041. Time: 187.3884 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1358: GFLOPs: 9382.4961. Time: 185.5911 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1359: GFLOPs: 9067.0979. Time: 192.0469 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1360: GFLOPs: 9151.1849. Time: 190.2822 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1361: GFLOPs: 9230.2563. Time: 188.6522 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1362: GFLOPs: 9174.5480. Time: 189.7977 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1363: GFLOPs: 9333.1644. Time: 186.5721 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1364: GFLOPs: 9171.6168. Time: 189.8583 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1365: GFLOPs: 9226.8628. Time: 188.7216 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1366: GFLOPs: 9293.1354. Time: 187.3757 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1367: GFLOPs: 9095.2145. Time: 191.4532 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1368: GFLOPs: 9131.0894. Time: 190.7010 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1369: GFLOPs: 9140.2698. Time: 190.5095 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1370: GFLOPs: 9131.2902. Time: 190.6968 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1371: GFLOPs: 9102.1053. Time: 191.3083 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1372: GFLOPs: 9210.6384. Time: 189.0540 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1373: GFLOPs: 9116.6592. Time: 191.0029 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1374: GFLOPs: 9150.6658. Time: 190.2930 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1375: GFLOPs: 9177.3008. Time: 189.7407 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1376: GFLOPs: 9094.5150. Time: 191.4679 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1377: GFLOPs: 9304.5057. Time: 187.1467 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1378: GFLOPs: 9286.0836. Time: 187.5180 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1379: GFLOPs: 9382.1365. Time: 185.5982 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1380: GFLOPs: 9292.7706. Time: 187.3831 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1381: GFLOPs: 9141.7497. Time: 190.4786 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1382: GFLOPs: 9306.3754. Time: 187.1091 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1383: GFLOPs: 9153.9092. Time: 190.2256 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1384: GFLOPs: 9033.2868. Time: 192.7657 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1385: GFLOPs: 9181.7147. Time: 189.6495 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1386: GFLOPs: 9095.9109. Time: 191.4385 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1387: GFLOPs: 9017.6849. Time: 193.0992 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1388: GFLOPs: 9091.4064. Time: 191.5334 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1389: GFLOPs: 9179.3792. Time: 189.6978 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1390: GFLOPs: 9297.8960. Time: 187.2798 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1391: GFLOPs: 9072.6206. Time: 191.9300 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1392: GFLOPs: 9104.6901. Time: 191.2539 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1393: GFLOPs: 9063.5412. Time: 192.1222 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1394: GFLOPs: 9087.0020. Time: 191.6262 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1395: GFLOPs: 9079.7256. Time: 191.7798 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1396: GFLOPs: 9060.4103. Time: 192.1886 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1397: GFLOPs: 9086.3245. Time: 191.6405 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1398: GFLOPs: 9195.3708. Time: 189.3679 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1399: GFLOPs: 9130.9570. Time: 190.7038 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1400: GFLOPs: 9117.2500. Time: 190.9905 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1401: GFLOPs: 9034.8125. Time: 192.7332 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1402: GFLOPs: 9082.4399. Time: 191.7225 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1403: GFLOPs: 9097.5795. Time: 191.4034 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1404: GFLOPs: 9125.0236. Time: 190.8278 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1405: GFLOPs: 3625.0754. Time: 480.3508 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1406: GFLOPs: 2917.5506. Time: 596.8390 us. Best GFLOPs: 9584.4775
2024-04-29 01:13:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1407: GFLOPs: 5466.6399. Time: 318.5335 us. Best GFLOPs: 9584.4775
2024-04-29 01:21:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:21:29 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:21:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:21:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:21:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:21:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1616 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:21:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2017 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:22:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2420 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:22:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2825 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:22:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3226 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:22:13 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 01:22:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:22:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 172 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:23:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 157 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:23:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 167 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:23:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.3601  2.1206  2.0725  1.9359  1.6772  1.6400  1.6137  1.5984  1.5973  1.5774  1.1505  1.0558  1.0280  1.0210  0.9792  0.9736
[17 : 32]:	0.9716  0.9707  0.9668  0.9658  0.9656  0.9656  0.9653  0.9641  0.9628  0.9625  0.9621  0.9619  0.9610  0.9606  0.9604  0.9596
[33 : 48]:	0.9586  0.9582  0.9573  0.9571  0.9569  0.9568  0.9568  0.9565  0.9563  0.9562  0.9553  0.9553  0.9548  0.9545  0.9545  0.9542
[49 : 64]:	0.9541  0.9540  0.9539  0.9533  0.9529  0.9529  0.9528  0.9525  0.9521  0.9519  0.9517  0.9516  0.9513  0.9509  0.9504  0.9503
2024-04-29 01:23:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:23:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1408: GFLOPs: 1563.9320. Time: 1113.4166 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1409: GFLOPs: 17.7336. Time: 98192.3827 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1410: GFLOPs: 1541.7008. Time: 1129.4720 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1411: GFLOPs: 1317.8376. Time: 1321.3372 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1412: GFLOPs: 18.2552. Time: 95386.9627 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1413: GFLOPs: 18.2976. Time: 95165.7813 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1414: GFLOPs: 15.2283. Time: 114346.6693 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1415: GFLOPs: 18.2320. Time: 95508.4837 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1416: GFLOPs: 18.2749. Time: 95283.8847 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1417: GFLOPs: 16.3204. Time: 106694.9970 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1418: GFLOPs: 1872.5664. Time: 929.9045 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1419: GFLOPs: 1922.5016. Time: 905.7511 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1420: GFLOPs: 2871.1956. Time: 606.4749 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1421: GFLOPs: 2870.8136. Time: 606.5555 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1422: GFLOPs: 9361.9774. Time: 185.9979 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1423: GFLOPs: 9324.2063. Time: 186.7513 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1424: GFLOPs: 9416.4748. Time: 184.9214 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1425: GFLOPs: 9368.6761. Time: 185.8649 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1426: GFLOPs: 9132.1062. Time: 190.6798 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1427: GFLOPs: 9170.5755. Time: 189.8799 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1428: GFLOPs: 9168.8005. Time: 189.9167 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1429: GFLOPs: 9318.0979. Time: 186.8738 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1430: GFLOPs: 9124.7170. Time: 190.8342 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1431: GFLOPs: 9362.4209. Time: 185.9891 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1432: GFLOPs: 9191.0080. Time: 189.4578 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1433: GFLOPs: 9342.0242. Time: 186.3951 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1434: GFLOPs: 9077.8382. Time: 191.8197 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1435: GFLOPs: 9122.1663. Time: 190.8875 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1436: GFLOPs: 9351.4268. Time: 186.2077 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1437: GFLOPs: 9199.4674. Time: 189.2836 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1438: GFLOPs: 9336.0949. Time: 186.5135 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1439: GFLOPs: 9301.0941. Time: 187.2154 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1440: GFLOPs: 9139.9068. Time: 190.5170 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1441: GFLOPs: 9238.8102. Time: 188.4775 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1442: GFLOPs: 9310.4472. Time: 187.0273 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1443: GFLOPs: 9303.0444. Time: 187.1761 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1444: GFLOPs: 9092.6991. Time: 191.5062 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1445: GFLOPs: 9174.0976. Time: 189.8070 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1446: GFLOPs: 8704.2302. Time: 200.0531 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1447: GFLOPs: 9080.2318. Time: 191.7691 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1448: GFLOPs: 9263.3648. Time: 187.9779 us. Best GFLOPs: 9584.4775
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1449: GFLOPs: 9611.9792. Time: 181.1602 us. Best GFLOPs: 9611.9792
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1450: GFLOPs: 9285.6511. Time: 187.5267 us. Best GFLOPs: 9611.9792
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1451: GFLOPs: 9138.1039. Time: 190.5546 us. Best GFLOPs: 9611.9792
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1452: GFLOPs: 9712.0663. Time: 179.2932 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1453: GFLOPs: 9279.5627. Time: 187.6498 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1454: GFLOPs: 8818.2788. Time: 197.4657 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1455: GFLOPs: 8700.2275. Time: 200.1451 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1456: GFLOPs: 9695.3991. Time: 179.6015 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1457: GFLOPs: 9335.1958. Time: 186.5315 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1458: GFLOPs: 9301.7804. Time: 187.2016 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1459: GFLOPs: 8690.0140. Time: 200.3803 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1460: GFLOPs: 9109.0175. Time: 191.1631 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1461: GFLOPs: 9330.5233. Time: 186.6249 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1462: GFLOPs: 9059.2531. Time: 192.2132 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1463: GFLOPs: 9079.2459. Time: 191.7899 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1464: GFLOPs: 9110.7312. Time: 191.1271 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1465: GFLOPs: 9129.3515. Time: 190.7373 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1466: GFLOPs: 8997.6705. Time: 193.5287 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1467: GFLOPs: 9192.1329. Time: 189.4346 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1468: GFLOPs: 9240.2262. Time: 188.4486 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1469: GFLOPs: 3681.6151. Time: 472.9739 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1470: GFLOPs: 65.4219. Time: 26616.5750 us. Best GFLOPs: 9712.0663
2024-04-29 01:24:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1471: GFLOPs: 2111.7095. Time: 824.5963 us. Best GFLOPs: 9712.0663
2024-04-29 01:27:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:27:35 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:27:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:27:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 804 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:27:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:27:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:28:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:28:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2421 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:28:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2826 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:28:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3227 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:28:21 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 01:28:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 167 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:28:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 188 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:29:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 175 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:29:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 154 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 01:29:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4905  1.0534  1.0119  0.9799  0.9737  0.9677  0.9648  0.9638  0.9625  0.9617  0.9583  0.9583  0.9576  0.9571  0.9563  0.9557
[17 : 32]:	0.9535  0.9532  0.9525  0.9521  0.9521  0.9518  0.9518  0.9517  0.9516  0.9514  0.9514  0.9513  0.9509  0.9508  0.9501  0.9500
[33 : 48]:	0.9500  0.9500  0.9500  0.9498  0.9498  0.9497  0.9490  0.9486  0.9481  0.9478  0.9476  0.9476  0.9474  0.9473  0.9472  0.9471
[49 : 64]:	0.9470  0.9467  0.9466  0.9465  0.9463  0.9463  0.9463  0.9462  0.9462  0.9461  0.9461  0.9461  0.9459  0.9459  0.9458  0.9458
2024-04-29 01:29:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:29:43 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1472: GFLOPs: 32.3883. Time: 53763.4123 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1473: GFLOPs: 737.9210. Time: 2359.7485 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1474: GFLOPs: 618.9249. Time: 2813.4399 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1475: GFLOPs: 727.8260. Time: 2392.4784 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1476: GFLOPs: 9636.6383. Time: 180.6966 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1477: GFLOPs: 9633.7371. Time: 180.7510 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1478: GFLOPs: 9644.5847. Time: 180.5477 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1479: GFLOPs: 9697.2818. Time: 179.5666 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1480: GFLOPs: 9639.8680. Time: 180.6361 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1481: GFLOPs: 9696.4253. Time: 179.5825 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1482: GFLOPs: 9306.2614. Time: 187.1114 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1483: GFLOPs: 9681.7578. Time: 179.8545 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1484: GFLOPs: 9269.3285. Time: 187.8570 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1485: GFLOPs: 9644.2115. Time: 180.5547 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1486: GFLOPs: 9609.4564. Time: 181.2077 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1487: GFLOPs: 9338.7764. Time: 186.4600 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1488: GFLOPs: 9112.2434. Time: 191.0954 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1489: GFLOPs: 9292.0581. Time: 187.3974 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1490: GFLOPs: 9235.7502. Time: 188.5400 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1491: GFLOPs: 9292.6794. Time: 187.3849 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1492: GFLOPs: 9126.5894. Time: 190.7950 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1493: GFLOPs: 9259.8438. Time: 188.0494 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1494: GFLOPs: 9301.6435. Time: 187.2043 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1495: GFLOPs: 9340.0709. Time: 186.4341 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1496: GFLOPs: 9273.3139. Time: 187.7762 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1497: GFLOPs: 9329.5180. Time: 186.6450 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1498: GFLOPs: 9305.6124. Time: 187.1245 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1499: GFLOPs: 9304.2384. Time: 187.1521 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1500: GFLOPs: 9362.1752. Time: 185.9939 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1501: GFLOPs: 9302.5478. Time: 187.1861 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1502: GFLOPs: 9302.0996. Time: 187.1951 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1503: GFLOPs: 9298.9594. Time: 187.2584 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1504: GFLOPs: 9329.2505. Time: 186.6504 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1505: GFLOPs: 9290.3856. Time: 187.4312 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1506: GFLOPs: 9261.3415. Time: 188.0190 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1507: GFLOPs: 9667.1760. Time: 180.1258 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1508: GFLOPs: 8939.9751. Time: 194.7777 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1509: GFLOPs: 9267.9863. Time: 187.8842 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1510: GFLOPs: 9330.4343. Time: 186.6267 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1511: GFLOPs: 9152.2930. Time: 190.2592 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1512: GFLOPs: 9316.6264. Time: 186.9033 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1513: GFLOPs: 9344.8208. Time: 186.3394 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1514: GFLOPs: 9359.2075. Time: 186.0529 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1515: GFLOPs: 9134.6388. Time: 190.6269 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1516: GFLOPs: 9167.4464. Time: 189.9447 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1517: GFLOPs: 9331.8612. Time: 186.5981 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1518: GFLOPs: 9251.0390. Time: 188.2284 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1519: GFLOPs: 9275.3742. Time: 187.7345 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1520: GFLOPs: 9147.5420. Time: 190.3580 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1521: GFLOPs: 9331.2839. Time: 186.6097 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1522: GFLOPs: 9132.6314. Time: 190.6688 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1523: GFLOPs: 9332.9322. Time: 186.5767 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1524: GFLOPs: 9080.7048. Time: 191.7591 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1525: GFLOPs: 9243.1619. Time: 188.3888 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1526: GFLOPs: 9155.7413. Time: 190.1875 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1527: GFLOPs: 9285.2065. Time: 187.5357 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1528: GFLOPs: 9288.9260. Time: 187.4606 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1529: GFLOPs: 9255.1514. Time: 188.1447 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1530: GFLOPs: 9353.1564. Time: 186.1733 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1531: GFLOPs: 9183.1309. Time: 189.6203 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1532: GFLOPs: 9209.3418. Time: 189.0806 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1533: GFLOPs: 10.5008. Time: 165826.9040 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1534: GFLOPs: 3377.5830. Time: 515.5485 us. Best GFLOPs: 9712.0663
2024-04-29 01:30:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1535: GFLOPs: 6711.1747. Time: 259.4640 us. Best GFLOPs: 9712.0663
2024-04-29 01:59:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:59:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:59:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2013 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2419 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2826 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3232 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3631 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:00:42 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-04-29 02:00:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 153 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:01:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 175 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:01:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:01:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 154 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:02:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9941  0.9899  0.9861  0.9859  0.9852  0.9845  0.9830  0.9829  0.9823  0.9821  0.9820  0.9820  0.9818  0.9817  0.9807  0.9799
[17 : 32]:	0.9791  0.9779  0.9766  0.9766  0.9761  0.9759  0.9738  0.9738  0.9737  0.9737  0.9690  0.9683  0.9682  0.9667  0.9663  0.9660
[33 : 48]:	0.9652  0.9645  0.9642  0.9637  0.9636  0.9636  0.9631  0.9629  0.9629  0.9616  0.9607  0.9604  0.9596  0.9596  0.9593  0.9592
[49 : 64]:	0.9591  0.9590  0.9579  0.9578  0.9577  0.9575  0.9575  0.9570  0.9569  0.9568  0.9568  0.9566  0.9566  0.9565  0.9565  0.9561
2024-04-29 02:02:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:02:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1536: GFLOPs: 9635.1027. Time: 180.7254 us. Best GFLOPs: 9712.0663
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1537: GFLOPs: 9753.0147. Time: 178.5405 us. Best GFLOPs: 9753.0147
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1538: GFLOPs: 9712.1614. Time: 179.2915 us. Best GFLOPs: 9753.0147
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1539: GFLOPs: 9723.4731. Time: 179.0829 us. Best GFLOPs: 9753.0147
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1540: GFLOPs: 9654.6325. Time: 180.3598 us. Best GFLOPs: 9753.0147
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1541: GFLOPs: 9760.3615. Time: 178.4061 us. Best GFLOPs: 9760.3615
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1542: GFLOPs: 9684.5392. Time: 179.8029 us. Best GFLOPs: 9760.3615
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1543: GFLOPs: 9248.9291. Time: 188.2713 us. Best GFLOPs: 9760.3615
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1544: GFLOPs: 9573.1723. Time: 181.8946 us. Best GFLOPs: 9760.3615
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1545: GFLOPs: 9719.1106. Time: 179.1633 us. Best GFLOPs: 9760.3615
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1546: GFLOPs: 9730.8319. Time: 178.9475 us. Best GFLOPs: 9760.3615
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1547: GFLOPs: 9760.4574. Time: 178.4043 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1548: GFLOPs: 9730.0393. Time: 178.9621 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1549: GFLOPs: 9742.4856. Time: 178.7334 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1550: GFLOPs: 9721.1148. Time: 179.1264 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1551: GFLOPs: 9751.0660. Time: 178.5762 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1552: GFLOPs: 9738.7725. Time: 178.8016 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1553: GFLOPs: 9141.6576. Time: 190.4805 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1554: GFLOPs: 9623.7928. Time: 180.9378 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1555: GFLOPs: 9587.3712. Time: 181.6252 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1556: GFLOPs: 9683.5749. Time: 179.8208 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1557: GFLOPs: 9705.3241. Time: 179.4178 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1558: GFLOPs: 9553.8124. Time: 182.2631 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1559: GFLOPs: 9238.3358. Time: 188.4872 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1560: GFLOPs: 9746.8246. Time: 178.6539 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1561: GFLOPs: 9735.1540. Time: 178.8680 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1562: GFLOPs: 9044.5703. Time: 192.5252 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1563: GFLOPs: 9298.7705. Time: 187.2622 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1564: GFLOPs: 9688.2523. Time: 179.7340 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1565: GFLOPs: 9530.3103. Time: 182.7126 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1566: GFLOPs: 9437.8663. Time: 184.5023 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1567: GFLOPs: 9240.4906. Time: 188.4432 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1568: GFLOPs: 9338.4100. Time: 186.4673 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1569: GFLOPs: 9250.4598. Time: 188.2401 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1570: GFLOPs: 9489.0775. Time: 183.5066 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1571: GFLOPs: 9020.8461. Time: 193.0315 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1572: GFLOPs: 9472.6341. Time: 183.8251 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1573: GFLOPs: 9399.4252. Time: 185.2568 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1574: GFLOPs: 8992.0869. Time: 193.6489 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1575: GFLOPs: 9559.4702. Time: 182.1553 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1576: GFLOPs: 9254.0864. Time: 188.1664 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1577: GFLOPs: 9485.3563. Time: 183.5785 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1578: GFLOPs: 8984.8933. Time: 193.8040 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1579: GFLOPs: 9374.7383. Time: 185.7447 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1580: GFLOPs: 9541.7812. Time: 182.4930 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1581: GFLOPs: 9304.5451. Time: 187.1459 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1582: GFLOPs: 9310.1250. Time: 187.0338 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1583: GFLOPs: 9347.3987. Time: 186.2880 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1584: GFLOPs: 9335.4658. Time: 186.5261 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1585: GFLOPs: 9648.6077. Time: 180.4725 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1586: GFLOPs: 9014.0036. Time: 193.1781 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1587: GFLOPs: 9688.0766. Time: 179.7372 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1588: GFLOPs: 9038.1694. Time: 192.6616 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1589: GFLOPs: 9182.6357. Time: 189.6305 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1590: GFLOPs: 9320.4553. Time: 186.8265 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1591: GFLOPs: 9325.4644. Time: 186.7261 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1592: GFLOPs: 9406.2759. Time: 185.1219 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1593: GFLOPs: 9339.4512. Time: 186.4465 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1594: GFLOPs: 9039.9977. Time: 192.6226 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1595: GFLOPs: 9349.9503. Time: 186.2371 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1596: GFLOPs: 9282.5700. Time: 187.5890 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1597: GFLOPs: 3648.5001. Time: 477.2668 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1598: GFLOPs: 106.0188. Time: 16424.5213 us. Best GFLOPs: 9760.4574
2024-04-29 02:03:10 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1599: GFLOPs: 2817.0741. Time: 618.1264 us. Best GFLOPs: 9760.4574
2024-04-29 02:07:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:07:23 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:07:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:07:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:07:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:07:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1616 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:07:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:07:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:08:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2828 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:08:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3232 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:08:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3634 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:08:14 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 02:08:30 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:08:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:09:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:09:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:09:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9938  0.9933  0.9921  0.9918  0.9879  0.9878  0.9864  0.9854  0.9847  0.9845  0.9841  0.9840  0.9834  0.9830  0.9823  0.9822
[17 : 32]:	0.9819  0.9811  0.9807  0.9806  0.9795  0.9792  0.9787  0.9782  0.9780  0.9780  0.9778  0.9768  0.9766  0.9765  0.9765  0.9764
[33 : 48]:	0.9761  0.9752  0.9746  0.9744  0.9733  0.9731  0.9730  0.9730  0.9726  0.9723  0.9721  0.9719  0.9719  0.9716  0.9708  0.9705
[49 : 64]:	0.9705  0.9690  0.9687  0.9686  0.9686  0.9685  0.9685  0.9683  0.9682  0.9671  0.9668  0.9666  0.9664  0.9664  0.9660  0.9659
2024-04-29 02:09:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:09:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1600: GFLOPs: 9754.0427. Time: 178.5217 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1601: GFLOPs: 9704.2572. Time: 179.4375 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1602: GFLOPs: 9728.9241. Time: 178.9826 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1603: GFLOPs: 9709.6274. Time: 179.3383 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1604: GFLOPs: 9681.9820. Time: 179.8504 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1605: GFLOPs: 9717.4095. Time: 179.1947 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1606: GFLOPs: 9732.6007. Time: 178.9150 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1607: GFLOPs: 9754.7264. Time: 178.5091 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1608: GFLOPs: 9741.9582. Time: 178.7431 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1609: GFLOPs: 9362.6061. Time: 185.9854 us. Best GFLOPs: 9760.4574
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1610: GFLOPs: 9859.2245. Time: 176.6171 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1611: GFLOPs: 9642.0135. Time: 180.5959 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1612: GFLOPs: 9702.1048. Time: 179.4773 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1613: GFLOPs: 9740.7543. Time: 178.7652 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1614: GFLOPs: 9765.7331. Time: 178.3080 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1615: GFLOPs: 9712.9768. Time: 179.2764 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1616: GFLOPs: 9750.9906. Time: 178.5775 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1617: GFLOPs: 9733.1487. Time: 178.9049 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1618: GFLOPs: 9658.0854. Time: 180.2954 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1619: GFLOPs: 9722.6082. Time: 179.0988 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1620: GFLOPs: 9713.3681. Time: 179.2692 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1621: GFLOPs: 9789.8740. Time: 177.8683 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1622: GFLOPs: 9613.8285. Time: 181.1253 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1623: GFLOPs: 9578.9519. Time: 181.7848 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1624: GFLOPs: 9680.4024. Time: 179.8797 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1625: GFLOPs: 9690.7188. Time: 179.6882 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1626: GFLOPs: 9693.1757. Time: 179.6427 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1627: GFLOPs: 9713.5609. Time: 179.2657 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1628: GFLOPs: 9805.3054. Time: 177.5883 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1629: GFLOPs: 9728.9856. Time: 178.9814 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1630: GFLOPs: 9706.8094. Time: 179.3903 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1631: GFLOPs: 9774.9822. Time: 178.1392 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1632: GFLOPs: 9776.8207. Time: 178.1057 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1633: GFLOPs: 9731.7595. Time: 178.9304 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1634: GFLOPs: 9712.2650. Time: 179.2896 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1635: GFLOPs: 9747.3457. Time: 178.6443 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1636: GFLOPs: 9687.1001. Time: 179.7553 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1637: GFLOPs: 9686.2424. Time: 179.7713 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1638: GFLOPs: 9718.6546. Time: 179.1717 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1639: GFLOPs: 9294.3195. Time: 187.3518 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1640: GFLOPs: 9438.6009. Time: 184.4879 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1641: GFLOPs: 9397.9675. Time: 185.2856 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1642: GFLOPs: 9370.8632. Time: 185.8215 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1643: GFLOPs: 9798.3972. Time: 177.7135 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1644: GFLOPs: 9665.6708. Time: 180.1539 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1645: GFLOPs: 9386.7591. Time: 185.5068 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1646: GFLOPs: 9672.2310. Time: 180.0317 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1647: GFLOPs: 9703.6634. Time: 179.4485 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1648: GFLOPs: 9254.3774. Time: 188.1605 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1649: GFLOPs: 9666.7472. Time: 180.1338 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1650: GFLOPs: 9529.3047. Time: 182.7319 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1651: GFLOPs: 9273.2909. Time: 187.7767 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1652: GFLOPs: 9729.5177. Time: 178.9717 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1653: GFLOPs: 9423.8687. Time: 184.7763 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1654: GFLOPs: 9403.0189. Time: 185.1860 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1655: GFLOPs: 9785.3005. Time: 177.9514 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1656: GFLOPs: 9366.6177. Time: 185.9057 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1657: GFLOPs: 9503.6106. Time: 183.2259 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1658: GFLOPs: 9719.6012. Time: 179.1543 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1659: GFLOPs: 9592.0011. Time: 181.5375 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1660: GFLOPs: 9515.2058. Time: 183.0027 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1661: GFLOPs: 4153.9767. Time: 419.1906 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1662: GFLOPs: 1329.2872. Time: 1309.9562 us. Best GFLOPs: 9859.2245
2024-04-29 02:10:34 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1663: GFLOPs: 236.6966. Time: 7356.7085 us. Best GFLOPs: 9859.2245
2024-04-29 02:29:27 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:29:30 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:29:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:29:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:29:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:29:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1618 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:29:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2021 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:30:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2424 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:30:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2831 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:30:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3236 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:30:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3636 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:30:21 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 02:30:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:30:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:31:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:31:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 120 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:31:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3412  1.1345  1.1145  1.0646  1.0292  0.9954  0.9912  0.9902  0.9889  0.9879  0.9862  0.9860  0.9860  0.9851  0.9851  0.9850
[17 : 32]:	0.9849  0.9845  0.9841  0.9839  0.9839  0.9838  0.9835  0.9835  0.9832  0.9831  0.9824  0.9823  0.9823  0.9822  0.9815  0.9813
[33 : 48]:	0.9812  0.9811  0.9811  0.9807  0.9803  0.9803  0.9801  0.9799  0.9797  0.9797  0.9796  0.9795  0.9794  0.9790  0.9787  0.9784
[49 : 64]:	0.9784  0.9778  0.9777  0.9777  0.9776  0.9776  0.9775  0.9774  0.9770  0.9769  0.9769  0.9769  0.9766  0.9764  0.9760  0.9760
2024-04-29 02:31:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:31:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1664: GFLOPs: 2617.0404. Time: 665.3730 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1665: GFLOPs: 1416.4610. Time: 1229.3370 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1666: GFLOPs: 1455.7261. Time: 1196.1782 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1667: GFLOPs: 1509.4392. Time: 1153.6125 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1668: GFLOPs: 1443.2350. Time: 1206.5311 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1669: GFLOPs: 9715.6118. Time: 179.2278 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1670: GFLOPs: 9665.5830. Time: 180.1555 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1671: GFLOPs: 9753.8965. Time: 178.5243 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1672: GFLOPs: 9730.3584. Time: 178.9562 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1673: GFLOPs: 9710.8490. Time: 179.3157 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1674: GFLOPs: 9707.7340. Time: 179.3733 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1675: GFLOPs: 9760.7243. Time: 178.3995 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1676: GFLOPs: 9669.5295. Time: 180.0820 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1677: GFLOPs: 9637.2914. Time: 180.6844 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1678: GFLOPs: 9798.9350. Time: 177.7038 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1679: GFLOPs: 9713.5387. Time: 179.2661 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1680: GFLOPs: 9725.6558. Time: 179.0427 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1681: GFLOPs: 9713.0193. Time: 179.2757 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1682: GFLOPs: 9756.9445. Time: 178.4686 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1683: GFLOPs: 9669.0342. Time: 180.0912 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1684: GFLOPs: 9692.0410. Time: 179.6637 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1685: GFLOPs: 9823.1801. Time: 177.2652 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1686: GFLOPs: 9748.9262. Time: 178.6154 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1687: GFLOPs: 9718.8147. Time: 179.1688 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1688: GFLOPs: 9666.2728. Time: 180.1426 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1689: GFLOPs: 9711.1238. Time: 179.3106 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1690: GFLOPs: 9740.3747. Time: 178.7722 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1691: GFLOPs: 9703.3769. Time: 179.4538 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1692: GFLOPs: 9687.4580. Time: 179.7487 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1693: GFLOPs: 9681.4344. Time: 179.8605 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1694: GFLOPs: 9663.4107. Time: 180.1960 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1695: GFLOPs: 9719.9978. Time: 179.1469 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1696: GFLOPs: 9758.8480. Time: 178.4338 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1697: GFLOPs: 9684.6623. Time: 179.8006 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1698: GFLOPs: 9688.9133. Time: 179.7217 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1699: GFLOPs: 9737.3887. Time: 178.8270 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1700: GFLOPs: 9689.8634. Time: 179.7041 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1701: GFLOPs: 9697.4048. Time: 179.5643 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1702: GFLOPs: 9646.2365. Time: 180.5168 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1703: GFLOPs: 9795.7552. Time: 177.7615 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1704: GFLOPs: 9694.2763. Time: 179.6223 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1705: GFLOPs: 9735.6962. Time: 178.8581 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1706: GFLOPs: 9786.8091. Time: 177.9240 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1707: GFLOPs: 9739.9754. Time: 178.7795 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1708: GFLOPs: 9698.2037. Time: 179.5495 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1709: GFLOPs: 9743.3318. Time: 178.7179 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1710: GFLOPs: 9698.2318. Time: 179.5490 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1711: GFLOPs: 9679.2315. Time: 179.9015 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1712: GFLOPs: 9760.1470. Time: 178.4100 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1713: GFLOPs: 9735.9165. Time: 178.8540 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1714: GFLOPs: 9785.8778. Time: 177.9409 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1715: GFLOPs: 9771.0552. Time: 178.2108 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1716: GFLOPs: 9721.8198. Time: 179.1134 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1717: GFLOPs: 9695.6487. Time: 179.5968 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1718: GFLOPs: 9648.3465. Time: 180.4773 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1719: GFLOPs: 9690.5747. Time: 179.6909 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1720: GFLOPs: 9747.9710. Time: 178.6329 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1721: GFLOPs: 9684.7341. Time: 179.7992 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1722: GFLOPs: 9676.2723. Time: 179.9565 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1723: GFLOPs: 9751.9844. Time: 178.5593 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1724: GFLOPs: 9761.9559. Time: 178.3769 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1725: GFLOPs: 108.0337. Time: 16118.1989 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1726: GFLOPs: 40.1439. Time: 43376.6377 us. Best GFLOPs: 9859.2245
2024-04-29 02:32:40 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1727: GFLOPs: 120.5366. Time: 14446.2999 us. Best GFLOPs: 9859.2245
2024-04-29 02:44:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:44:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:44:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1206 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:44:41 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 02:44:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:45:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:45:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:45:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 127 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 02:45:54 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9946  0.9929  0.9922  0.9915  0.9915  0.9911  0.9899  0.9892  0.9892  0.9891  0.9891  0.9887  0.9886  0.9885  0.9882  0.9881
[17 : 32]:	0.9880  0.9879  0.9878  0.9877  0.9872  0.9870  0.9869  0.9866  0.9865  0.9865  0.9861  0.9860  0.9859  0.9856  0.9856  0.9856
[33 : 48]:	0.9855  0.9851  0.9848  0.9848  0.9846  0.9845  0.9844  0.9843  0.9834  0.9833  0.9828  0.9827  0.9827  0.9827  0.9824  0.9822
[49 : 64]:	0.9817  0.9813  0.9812  0.9804  0.9803  0.9802  0.9801  0.9801  0.9801  0.9800  0.9799  0.9787  0.9786  0.9784  0.9783  0.9783
2024-04-29 02:45:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:45:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1728: GFLOPs: 9769.3515. Time: 178.2419 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1729: GFLOPs: 9702.1899. Time: 179.4758 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1730: GFLOPs: 9753.4807. Time: 178.5319 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1731: GFLOPs: 9705.5384. Time: 179.4138 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1732: GFLOPs: 9749.7631. Time: 178.6000 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1733: GFLOPs: 9716.7395. Time: 179.2070 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1734: GFLOPs: 9707.4482. Time: 179.3785 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1735: GFLOPs: 9749.9770. Time: 178.5961 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1736: GFLOPs: 9784.5372. Time: 177.9653 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1737: GFLOPs: 9757.9148. Time: 178.4508 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1738: GFLOPs: 9820.3167. Time: 177.3169 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1739: GFLOPs: 9755.6396. Time: 178.4924 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1740: GFLOPs: 9694.4489. Time: 179.6191 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1741: GFLOPs: 9739.4193. Time: 178.7897 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1742: GFLOPs: 9755.4995. Time: 178.4950 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1743: GFLOPs: 9658.4144. Time: 180.2892 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1744: GFLOPs: 9706.1605. Time: 179.4023 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1745: GFLOPs: 9649.4526. Time: 180.4567 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1746: GFLOPs: 9703.1633. Time: 179.4578 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1747: GFLOPs: 9733.0925. Time: 178.9059 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1748: GFLOPs: 9703.8728. Time: 179.4446 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1749: GFLOPs: 9812.1907. Time: 177.4637 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1750: GFLOPs: 9686.5158. Time: 179.7662 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1751: GFLOPs: 9664.2519. Time: 180.1803 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1752: GFLOPs: 9664.4390. Time: 180.1768 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1753: GFLOPs: 9719.7783. Time: 179.1510 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1754: GFLOPs: 9644.7667. Time: 180.5443 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1755: GFLOPs: 9718.1639. Time: 179.1808 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1756: GFLOPs: 9636.5521. Time: 180.6982 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1757: GFLOPs: 9730.7097. Time: 178.9497 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1758: GFLOPs: 9730.3771. Time: 178.9558 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1759: GFLOPs: 9697.9845. Time: 179.5536 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1760: GFLOPs: 9685.7631. Time: 179.7801 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1761: GFLOPs: 9755.1751. Time: 178.5009 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1762: GFLOPs: 9676.4024. Time: 179.9541 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1763: GFLOPs: 9685.5207. Time: 179.7846 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1764: GFLOPs: 9705.7042. Time: 179.4108 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1765: GFLOPs: 9771.6146. Time: 178.2006 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1766: GFLOPs: 9775.1555. Time: 178.1361 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1767: GFLOPs: 9722.8280. Time: 179.0948 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1768: GFLOPs: 9789.7307. Time: 177.8709 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1769: GFLOPs: 9730.4497. Time: 178.9545 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1770: GFLOPs: 9755.8973. Time: 178.4877 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1771: GFLOPs: 9748.8585. Time: 178.6166 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1772: GFLOPs: 9755.1312. Time: 178.5017 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1773: GFLOPs: 9695.1862. Time: 179.6054 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1774: GFLOPs: 9672.1484. Time: 180.0332 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1775: GFLOPs: 9732.0816. Time: 178.9245 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1776: GFLOPs: 9722.0839. Time: 179.1085 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1777: GFLOPs: 9665.7100. Time: 180.1531 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1778: GFLOPs: 9651.8520. Time: 180.4118 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1779: GFLOPs: 9690.0539. Time: 179.7005 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1780: GFLOPs: 9681.4676. Time: 179.8599 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1781: GFLOPs: 9687.5832. Time: 179.7464 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1782: GFLOPs: 9678.0427. Time: 179.9236 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1783: GFLOPs: 9729.3263. Time: 178.9752 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1784: GFLOPs: 9755.4806. Time: 178.4953 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1785: GFLOPs: 9667.2218. Time: 180.1250 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1786: GFLOPs: 9709.1262. Time: 179.3475 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1787: GFLOPs: 9471.0408. Time: 183.8560 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1788: GFLOPs: 9761.9760. Time: 178.3766 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1789: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)))
        inverse_local = T.alloc_buffer((T.int64(512), T.int64(196), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(196)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196) + ax0)
                        v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(44) + ci_p_fused_1) % T.int64(196) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps and v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps < T.int64(29) and T.int64(1) <= v_p % T.int64(14) * T.int64(2) + v_nu and v_p % T.int64(14) * T.int64(2) + v_nu < T.int64(29), p0[v_p // T.int64(196), v_ci, v_p % T.int64(196) // T.int64(14) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(14) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196))
                            v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(196))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196))
                                    v_p = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(196))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(196) + ax2)
                        v3 = T.axis.spatial(T.int64(196), (ci_p_fused_0 * T.int64(44) + ci_p_fused_1) % T.int64(196) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(28), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(2), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(2) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(2) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(14) // T.int64(7) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(64) + co_3_init * T.int64(8) + co_4_init)
                            v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(28) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(128)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(448))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(448) // T.int64(112))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(112) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(28) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(37)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(4096))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4096) // T.int64(1024))
                                        v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(256))
                                        v3 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(14) // T.int64(7) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(8192))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(4), T.int64(2), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(2) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(2) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(14) // T.int64(7) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(64) + co_3 * T.int64(8) + co_4)
                                v_p = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(28) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(4) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(2), T.int64(64), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(14) * T.int64(2) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(2) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(512), eps_0_nu_0_co_0_p_0_fused % T.int64(14) // T.int64(7) * T.int64(256) + eps_2_nu_2_co_2_p_2_fused // T.int64(14) * T.int64(64) + ax2)
                            v3 = T.axis.spatial(T.int64(196), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(28) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(14) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196) + ax0)
                                        v_p = T.axis.spatial(T.int64(196), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(196))
                        v_h = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(196) // T.int64(14) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(28), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(14) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(196) + v_h // T.int64(2) * T.int64(14) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[2, 1, 4, 8, 8])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 2, 14, 1, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 4, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1790: GFLOPs: 144.9973. Time: 12009.2442 us. Best GFLOPs: 9859.2245
2024-04-29 02:47:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1791: GFLOPs: 1272.1082. Time: 1368.8363 us. Best GFLOPs: 9859.2245
2024-04-29 03:01:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:01:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:01:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:01:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1209 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1614 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2425 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2826 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3638 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:02:35 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 03:02:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:03:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:03:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:03:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:03:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9919  0.9919  0.9918  0.9914  0.9903  0.9897  0.9890  0.9889  0.9887  0.9887  0.9887  0.9886  0.9885  0.9885  0.9873  0.9872
[17 : 32]:	0.9871  0.9867  0.9864  0.9863  0.9863  0.9863  0.9863  0.9860  0.9860  0.9860  0.9857  0.9853  0.9853  0.9852  0.9852  0.9848
[33 : 48]:	0.9841  0.9839  0.9839  0.9838  0.9834  0.9833  0.9833  0.9830  0.9829  0.9828  0.9825  0.9825  0.9825  0.9824  0.9822  0.9822
[49 : 64]:	0.9817  0.9817  0.9816  0.9816  0.9815  0.9814  0.9811  0.9811  0.9810  0.9810  0.9810  0.9805  0.9804  0.9800  0.9800  0.9798
2024-04-29 03:03:51 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:03:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1792: GFLOPs: 9550.7492. Time: 182.3216 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1793: GFLOPs: 9727.1214. Time: 179.0157 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1794: GFLOPs: 9726.9848. Time: 179.0183 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1795: GFLOPs: 9663.9181. Time: 180.1865 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1796: GFLOPs: 9687.3936. Time: 179.7499 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1797: GFLOPs: 9685.8737. Time: 179.7781 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1798: GFLOPs: 9716.8372. Time: 179.2052 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1799: GFLOPs: 9705.3793. Time: 179.4168 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1800: GFLOPs: 9614.8409. Time: 181.1063 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1801: GFLOPs: 9672.1598. Time: 180.0330 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1802: GFLOPs: 9732.3133. Time: 178.9202 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1803: GFLOPs: 9726.0966. Time: 179.0346 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1804: GFLOPs: 9684.9001. Time: 179.7962 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1805: GFLOPs: 9756.2593. Time: 178.4811 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1806: GFLOPs: 9568.4935. Time: 181.9835 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1807: GFLOPs: 9703.3524. Time: 179.4543 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1808: GFLOPs: 9652.2972. Time: 180.4035 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1809: GFLOPs: 9702.5493. Time: 179.4691 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1810: GFLOPs: 9775.1895. Time: 178.1355 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1811: GFLOPs: 9721.1012. Time: 179.1266 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1812: GFLOPs: 9727.3395. Time: 179.0117 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1813: GFLOPs: 9709.8871. Time: 179.3335 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1814: GFLOPs: 9751.1079. Time: 178.5754 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1815: GFLOPs: 9771.4322. Time: 178.2040 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1816: GFLOPs: 9751.1770. Time: 178.5741 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1817: GFLOPs: 9757.7496. Time: 178.4538 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1818: GFLOPs: 9776.3329. Time: 178.1146 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1819: GFLOPs: 9771.0457. Time: 178.2110 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1820: GFLOPs: 9679.8624. Time: 179.8897 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1821: GFLOPs: 9760.7212. Time: 178.3995 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1822: GFLOPs: 9740.5662. Time: 178.7687 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1823: GFLOPs: 9760.7368. Time: 178.3992 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1824: GFLOPs: 9686.8078. Time: 179.7608 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1825: GFLOPs: 9701.6165. Time: 179.4864 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1826: GFLOPs: 9698.9288. Time: 179.5361 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1827: GFLOPs: 9654.4714. Time: 180.3628 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1828: GFLOPs: 9733.5686. Time: 178.8972 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1829: GFLOPs: 9657.6147. Time: 180.3041 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1830: GFLOPs: 9700.5194. Time: 179.5067 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1831: GFLOPs: 9807.3837. Time: 177.5507 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1832: GFLOPs: 9682.2776. Time: 179.8449 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1833: GFLOPs: 9784.3283. Time: 177.9691 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1834: GFLOPs: 9701.2132. Time: 179.4938 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1835: GFLOPs: 9749.6504. Time: 178.6021 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1836: GFLOPs: 9760.7875. Time: 178.3983 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1837: GFLOPs: 9707.3422. Time: 179.3805 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1838: GFLOPs: 9744.9151. Time: 178.6889 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1839: GFLOPs: 9816.7822. Time: 177.3807 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1840: GFLOPs: 9707.3484. Time: 179.3804 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1841: GFLOPs: 9730.7826. Time: 178.9484 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1842: GFLOPs: 9689.1511. Time: 179.7173 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1843: GFLOPs: 9686.1282. Time: 179.7734 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1844: GFLOPs: 9642.2546. Time: 180.5914 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1845: GFLOPs: 9654.0186. Time: 180.3713 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1846: GFLOPs: 9772.5819. Time: 178.1830 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1847: GFLOPs: 9624.5079. Time: 180.9244 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1848: GFLOPs: 9672.8253. Time: 180.0206 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1849: GFLOPs: 9779.0413. Time: 178.0653 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1850: GFLOPs: 9725.4940. Time: 179.0457 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1851: GFLOPs: 9732.8188. Time: 178.9110 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1852: GFLOPs: 9745.7308. Time: 178.6739 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1853: GFLOPs: 853.8519. Time: 2039.3558 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1854: GFLOPs: 18.3504. Time: 94892.0287 us. Best GFLOPs: 9859.2245
2024-04-29 03:05:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1855: GFLOPs: 2051.6603. Time: 848.7311 us. Best GFLOPs: 9859.2245
2024-04-29 03:20:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:20:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:21:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2815 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:21:40 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 03:21:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:22:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:22:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:22:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 127 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:22:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9937  0.9924  0.9923  0.9917  0.9916  0.9916  0.9907  0.9902  0.9897  0.9897  0.9896  0.9894  0.9891  0.9889  0.9889  0.9887
[17 : 32]:	0.9887  0.9883  0.9883  0.9882  0.9882  0.9878  0.9855  0.9852  0.9850  0.9847  0.9846  0.9841  0.9840  0.9839  0.9838  0.9838
[33 : 48]:	0.9833  0.9831  0.9828  0.9824  0.9822  0.9822  0.9818  0.9818  0.9815  0.9809  0.9807  0.9798  0.9796  0.9793  0.9792  0.9792
[49 : 64]:	0.9788  0.9788  0.9787  0.9782  0.9780  0.9769  0.9768  0.9768  0.9764  0.9763  0.9763  0.9762  0.9761  0.9759  0.9758  0.9756
2024-04-29 03:22:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:22:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1856: GFLOPs: 9757.1204. Time: 178.4654 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1857: GFLOPs: 9708.6429. Time: 179.3565 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1858: GFLOPs: 9720.1685. Time: 179.1438 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1859: GFLOPs: 9684.6333. Time: 179.8011 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1860: GFLOPs: 9765.7577. Time: 178.3075 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1861: GFLOPs: 9755.6550. Time: 178.4922 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1862: GFLOPs: 9729.4427. Time: 178.9730 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1863: GFLOPs: 9679.4854. Time: 179.8967 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1864: GFLOPs: 9662.3797. Time: 180.2152 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1865: GFLOPs: 9723.4947. Time: 179.0825 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1866: GFLOPs: 9705.1138. Time: 179.4217 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1867: GFLOPs: 9688.6820. Time: 179.7260 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1868: GFLOPs: 9644.1754. Time: 180.5554 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1869: GFLOPs: 9625.3869. Time: 180.9078 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1870: GFLOPs: 9641.8686. Time: 180.5986 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1871: GFLOPs: 9643.2368. Time: 180.5730 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1872: GFLOPs: 9659.5479. Time: 180.2681 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1873: GFLOPs: 9660.0297. Time: 180.2591 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1874: GFLOPs: 9659.0655. Time: 180.2771 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1875: GFLOPs: 9719.5180. Time: 179.1558 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1876: GFLOPs: 9657.7391. Time: 180.3018 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1877: GFLOPs: 9657.6740. Time: 180.3030 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1878: GFLOPs: 9706.9998. Time: 179.3868 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1879: GFLOPs: 9639.3626. Time: 180.6455 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1880: GFLOPs: 9655.1707. Time: 180.3498 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1881: GFLOPs: 9723.5897. Time: 179.0808 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1882: GFLOPs: 9731.4031. Time: 178.9370 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1883: GFLOPs: 9641.6124. Time: 180.6034 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1884: GFLOPs: 9754.7574. Time: 178.5086 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1885: GFLOPs: 9675.7941. Time: 179.9654 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1886: GFLOPs: 9634.3047. Time: 180.7404 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1887: GFLOPs: 9674.2491. Time: 179.9941 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1888: GFLOPs: 9750.9706. Time: 178.5779 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1889: GFLOPs: 9634.0285. Time: 180.7456 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1890: GFLOPs: 9621.9865. Time: 180.9718 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1891: GFLOPs: 9744.5804. Time: 178.6950 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1892: GFLOPs: 9646.9346. Time: 180.5038 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1893: GFLOPs: 9745.6297. Time: 178.6758 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1894: GFLOPs: 9704.8069. Time: 179.4274 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1895: GFLOPs: 9699.6268. Time: 179.5232 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1896: GFLOPs: 9639.2430. Time: 180.6478 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1897: GFLOPs: 9731.5934. Time: 178.9335 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1898: GFLOPs: 9681.2460. Time: 179.8640 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1899: GFLOPs: 9731.9051. Time: 178.9278 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1900: GFLOPs: 9707.4648. Time: 179.3782 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1901: GFLOPs: 9731.3321. Time: 178.9383 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1902: GFLOPs: 9571.2415. Time: 181.9312 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1903: GFLOPs: 9625.2006. Time: 180.9113 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1904: GFLOPs: 9674.5438. Time: 179.9886 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1905: GFLOPs: 9676.1694. Time: 179.9584 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1906: GFLOPs: 9732.0071. Time: 178.9259 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1907: GFLOPs: 9679.9587. Time: 179.8879 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1908: GFLOPs: 9712.4561. Time: 179.2861 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1909: GFLOPs: 9381.2211. Time: 185.6163 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1910: GFLOPs: 9776.6921. Time: 178.1081 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1911: GFLOPs: 9498.8666. Time: 183.3174 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1912: GFLOPs: 9756.5075. Time: 178.4766 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1913: GFLOPs: 9735.9499. Time: 178.8534 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1914: GFLOPs: 9495.0629. Time: 183.3909 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1915: GFLOPs: 9637.3530. Time: 180.6832 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1916: GFLOPs: 9532.0787. Time: 182.6787 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1917: GFLOPs: 82.2521. Time: 21170.3810 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1918: GFLOPs: 2704.0975. Time: 643.9516 us. Best GFLOPs: 9859.2245
2024-04-29 03:23:56 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1919: GFLOPs: 107.1497. Time: 16251.1727 us. Best GFLOPs: 9859.2245
2024-04-29 03:31:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:31:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:31:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1613 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2820 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:31:55 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-29 03:32:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:32:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:32:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:33:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:33:08 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9992  0.9969  0.9930  0.9925  0.9925  0.9920  0.9915  0.9913  0.9912  0.9910  0.9907  0.9906  0.9886  0.9877  0.9873  0.9872
[17 : 32]:	0.9867  0.9863  0.9863  0.9854  0.9854  0.9853  0.9852  0.9850  0.9847  0.9846  0.9844  0.9840  0.9836  0.9830  0.9829  0.9828
[33 : 48]:	0.9826  0.9826  0.9825  0.9824  0.9824  0.9821  0.9821  0.9821  0.9819  0.9819  0.9818  0.9817  0.9815  0.9813  0.9811  0.9808
[49 : 64]:	0.9806  0.9806  0.9803  0.9802  0.9800  0.9799  0.9799  0.9798  0.9796  0.9795  0.9795  0.9794  0.9792  0.9791  0.9791  0.9790
2024-04-29 03:33:08 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:33:08 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1920: GFLOPs: 9537.7383. Time: 182.5703 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1921: GFLOPs: 9680.5545. Time: 179.8769 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1922: GFLOPs: 9707.6841. Time: 179.3742 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1923: GFLOPs: 9730.8793. Time: 178.9466 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1924: GFLOPs: 9703.5683. Time: 179.4503 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1925: GFLOPs: 9727.3997. Time: 179.0106 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1926: GFLOPs: 9751.8523. Time: 178.5618 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1927: GFLOPs: 9741.8615. Time: 178.7449 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1928: GFLOPs: 9694.6176. Time: 179.6159 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1929: GFLOPs: 9759.5653. Time: 178.4206 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1930: GFLOPs: 9751.1612. Time: 178.5744 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1931: GFLOPs: 9663.7046. Time: 180.1905 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1932: GFLOPs: 9709.5329. Time: 179.3400 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1933: GFLOPs: 9571.7376. Time: 181.9218 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1934: GFLOPs: 9743.6744. Time: 178.7116 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1935: GFLOPs: 9702.4551. Time: 179.4709 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1936: GFLOPs: 9617.6498. Time: 181.0534 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1937: GFLOPs: 9691.4795. Time: 179.6741 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1938: GFLOPs: 9730.3999. Time: 178.9554 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1939: GFLOPs: 9724.5799. Time: 179.0625 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1940: GFLOPs: 9650.3605. Time: 180.4397 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1941: GFLOPs: 9766.0578. Time: 178.3020 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1942: GFLOPs: 9734.1028. Time: 178.8874 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1943: GFLOPs: 9751.3150. Time: 178.5716 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1944: GFLOPs: 9618.3759. Time: 181.0397 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1945: GFLOPs: 9719.2193. Time: 179.1613 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1946: GFLOPs: 9680.0524. Time: 179.8862 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1947: GFLOPs: 9762.9389. Time: 178.3590 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1948: GFLOPs: 9582.9908. Time: 181.7082 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1949: GFLOPs: 9152.5248. Time: 190.2544 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1950: GFLOPs: 9566.8764. Time: 182.0143 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1951: GFLOPs: 9614.6830. Time: 181.1092 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1952: GFLOPs: 9287.4430. Time: 187.4906 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1953: GFLOPs: 9729.8990. Time: 178.9646 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1954: GFLOPs: 9735.9178. Time: 178.8540 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1955: GFLOPs: 9162.6524. Time: 190.0441 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1956: GFLOPs: 9691.7331. Time: 179.6694 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1957: GFLOPs: 9538.1305. Time: 182.5628 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1958: GFLOPs: 9701.7942. Time: 179.4831 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1959: GFLOPs: 9265.7842. Time: 187.9288 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1960: GFLOPs: 9595.5045. Time: 181.4712 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1961: GFLOPs: 9647.3109. Time: 180.4967 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1962: GFLOPs: 9682.6950. Time: 179.8371 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1963: GFLOPs: 9669.1903. Time: 180.0883 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1964: GFLOPs: 9638.7607. Time: 180.6568 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1965: GFLOPs: 9671.5900. Time: 180.0436 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1966: GFLOPs: 9735.3144. Time: 178.8651 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1967: GFLOPs: 9739.3623. Time: 178.7908 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1968: GFLOPs: 9729.3054. Time: 178.9756 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1969: GFLOPs: 9733.7489. Time: 178.8939 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1970: GFLOPs: 9675.0382. Time: 179.9794 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1971: GFLOPs: 9630.8157. Time: 180.8059 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1972: GFLOPs: 9302.2220. Time: 187.1927 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1973: GFLOPs: 9524.8715. Time: 182.8169 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1974: GFLOPs: 9170.8425. Time: 189.8744 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1975: GFLOPs: 9231.3399. Time: 188.6300 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1976: GFLOPs: 9566.3404. Time: 182.0245 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1977: GFLOPs: 9522.4847. Time: 182.8628 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1978: GFLOPs: 9774.0114. Time: 178.1569 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1979: GFLOPs: 9282.1104. Time: 187.5983 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1980: GFLOPs: 9619.1078. Time: 181.0259 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1981: GFLOPs: 3144.8808. Time: 553.6960 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1982: GFLOPs: 498.6036. Time: 3492.3696 us. Best GFLOPs: 9859.2245
2024-04-29 03:34:24 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1983: GFLOPs: 65.9823. Time: 26390.5275 us. Best GFLOPs: 9859.2245
2024-04-29 03:38:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:38:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:38:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1210 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2817 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:38:45 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 03:38:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 62 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:39:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:39:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 120 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:39:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:39:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0015  1.0002  0.9951  0.9940  0.9927  0.9927  0.9925  0.9917  0.9912  0.9910  0.9903  0.9889  0.9888  0.9879  0.9874  0.9867
[17 : 32]:	0.9854  0.9851  0.9850  0.9850  0.9849  0.9834  0.9829  0.9827  0.9825  0.9825  0.9822  0.9821  0.9821  0.9821  0.9820  0.9816
[33 : 48]:	0.9816  0.9813  0.9812  0.9811  0.9809  0.9803  0.9803  0.9803  0.9800  0.9799  0.9796  0.9796  0.9795  0.9794  0.9790  0.9786
[49 : 64]:	0.9786  0.9778  0.9775  0.9774  0.9770  0.9767  0.9765  0.9765  0.9763  0.9762  0.9762  0.9757  0.9754  0.9750  0.9750  0.9750
2024-04-29 03:39:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:39:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1984: GFLOPs: 9783.9787. Time: 177.9754 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1985: GFLOPs: 9737.8321. Time: 178.8188 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1986: GFLOPs: 9752.4807. Time: 178.5503 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1987: GFLOPs: 9706.1223. Time: 179.4030 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1988: GFLOPs: 9678.1496. Time: 179.9216 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1989: GFLOPs: 9683.6902. Time: 179.8186 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1990: GFLOPs: 9622.4391. Time: 180.9633 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1991: GFLOPs: 9569.4951. Time: 181.9644 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1992: GFLOPs: 9567.1828. Time: 182.0084 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1993: GFLOPs: 9655.0164. Time: 180.3527 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1994: GFLOPs: 9641.4374. Time: 180.6067 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1995: GFLOPs: 9578.4226. Time: 181.7948 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1996: GFLOPs: 9604.0307. Time: 181.3101 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1997: GFLOPs: 9708.8550. Time: 179.3525 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1998: GFLOPs: 9762.8074. Time: 178.3614 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #1999: GFLOPs: 9660.0262. Time: 180.2591 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2000: GFLOPs: 9576.7362. Time: 181.8269 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2001: GFLOPs: 9700.1013. Time: 179.5144 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2002: GFLOPs: 9759.7336. Time: 178.4176 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2003: GFLOPs: 9665.0955. Time: 180.1646 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2004: GFLOPs: 9782.6064. Time: 178.0004 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2005: GFLOPs: 9746.2064. Time: 178.6652 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2006: GFLOPs: 9670.2029. Time: 180.0694 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2007: GFLOPs: 9661.7204. Time: 180.2275 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2008: GFLOPs: 9713.3055. Time: 179.2704 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2009: GFLOPs: 9616.0184. Time: 181.0841 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2010: GFLOPs: 9719.6835. Time: 179.1527 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2011: GFLOPs: 9660.9723. Time: 180.2415 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2012: GFLOPs: 9729.9951. Time: 178.9629 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2013: GFLOPs: 9711.5898. Time: 179.3020 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2014: GFLOPs: 9685.7659. Time: 179.7801 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2015: GFLOPs: 9732.0703. Time: 178.9247 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2016: GFLOPs: 9730.5909. Time: 178.9519 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2017: GFLOPs: 9745.1506. Time: 178.6846 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2018: GFLOPs: 9664.3454. Time: 180.1786 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2019: GFLOPs: 9743.1972. Time: 178.7204 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2020: GFLOPs: 9645.2711. Time: 180.5349 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2021: GFLOPs: 9655.4932. Time: 180.3438 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2022: GFLOPs: 9723.8988. Time: 179.0751 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2023: GFLOPs: 9768.6245. Time: 178.2552 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2024: GFLOPs: 9701.1204. Time: 179.4955 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2025: GFLOPs: 9631.8283. Time: 180.7869 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2026: GFLOPs: 9685.1688. Time: 179.7912 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2027: GFLOPs: 9731.8491. Time: 178.9288 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2028: GFLOPs: 9543.5080. Time: 182.4599 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2029: GFLOPs: 9646.3030. Time: 180.5156 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2030: GFLOPs: 9604.5395. Time: 181.3005 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2031: GFLOPs: 9629.0451. Time: 180.8391 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2032: GFLOPs: 9753.9934. Time: 178.5226 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2033: GFLOPs: 9610.5817. Time: 181.1865 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2034: GFLOPs: 9758.8720. Time: 178.4333 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2035: GFLOPs: 9728.6023. Time: 178.9885 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2036: GFLOPs: 9668.8585. Time: 180.0945 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2037: GFLOPs: 9741.8193. Time: 178.7457 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2038: GFLOPs: 9741.6703. Time: 178.7484 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2039: GFLOPs: 9639.0425. Time: 180.6515 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2040: GFLOPs: 9729.0813. Time: 178.9797 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2041: GFLOPs: 9748.3532. Time: 178.6259 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2042: GFLOPs: 9630.7477. Time: 180.8071 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2043: GFLOPs: 9722.3521. Time: 179.1036 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2044: GFLOPs: 9673.4149. Time: 180.0096 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2045: GFLOPs: 244.7391. Time: 7114.9566 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2046: GFLOPs: 230.1789. Time: 7565.0193 us. Best GFLOPs: 9859.2245
2024-04-29 03:41:04 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2047: GFLOPs: 3436.6117. Time: 506.6932 us. Best GFLOPs: 9859.2245
2024-04-29 03:44:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:44:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:44:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 409 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:44:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 812 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:44:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1217 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 1621 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2025 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2433 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 2832 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3232 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 3637 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:45:33 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 03:45:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:46:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:46:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:46:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x29bb148)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x3ad0028)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x72723a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x47e65e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x90d7478)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x70a8a08)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7097528)]: 0 failure(s)
2024-04-29 03:46:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3035  1.1877  0.9924  0.9923  0.9921  0.9913  0.9907  0.9906  0.9904  0.9892  0.9889  0.9877  0.9875  0.9875  0.9871  0.9869
[17 : 32]:	0.9867  0.9867  0.9867  0.9863  0.9858  0.9857  0.9855  0.9853  0.9853  0.9852  0.9848  0.9844  0.9843  0.9839  0.9836  0.9834
[33 : 48]:	0.9827  0.9824  0.9820  0.9820  0.9814  0.9811  0.9809  0.9807  0.9802  0.9802  0.9800  0.9799  0.9799  0.9797  0.9796  0.9790
[49 : 64]:	0.9790  0.9789  0.9788  0.9777  0.9776  0.9771  0.9758  0.9757  0.9750  0.9750  0.9749  0.9743  0.9742  0.9741  0.9706  0.9703
2024-04-29 03:46:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:46:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2048: GFLOPs: 8216.8002. Time: 211.9204 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2049: GFLOPs: 7276.8096. Time: 239.2955 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2050: GFLOPs: 9750.5507. Time: 178.5856 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2051: GFLOPs: 9701.9918. Time: 179.4794 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2052: GFLOPs: 9753.5840. Time: 178.5301 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2053: GFLOPs: 9716.8356. Time: 179.2052 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2054: GFLOPs: 9722.3845. Time: 179.1030 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2055: GFLOPs: 9727.4349. Time: 179.0100 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2056: GFLOPs: 9752.4882. Time: 178.5501 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2057: GFLOPs: 9711.0490. Time: 179.3120 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2058: GFLOPs: 9684.3549. Time: 179.8063 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2059: GFLOPs: 9709.0986. Time: 179.3480 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2060: GFLOPs: 9711.4849. Time: 179.3040 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2061: GFLOPs: 9708.3654. Time: 179.3616 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2062: GFLOPs: 9731.0453. Time: 178.9436 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2063: GFLOPs: 9756.1824. Time: 178.4825 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2064: GFLOPs: 9710.1486. Time: 179.3287 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2065: GFLOPs: 9760.6919. Time: 178.4000 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2066: GFLOPs: 9671.5067. Time: 180.0452 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2067: GFLOPs: 9747.9183. Time: 178.6338 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2068: GFLOPs: 9774.5020. Time: 178.1480 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2069: GFLOPs: 9803.3840. Time: 177.6231 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2070: GFLOPs: 9608.8070. Time: 181.2200 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2071: GFLOPs: 9565.9438. Time: 182.0320 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2072: GFLOPs: 9510.8843. Time: 183.0858 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2073: GFLOPs: 9574.3964. Time: 181.8713 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2074: GFLOPs: 9576.6877. Time: 181.8278 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2075: GFLOPs: 9636.8406. Time: 180.6928 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2076: GFLOPs: 9641.9880. Time: 180.5964 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2077: GFLOPs: 9657.3527. Time: 180.3090 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2078: GFLOPs: 9601.9629. Time: 181.3492 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2079: GFLOPs: 9660.1083. Time: 180.2576 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2080: GFLOPs: 9705.9511. Time: 179.4062 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2081: GFLOPs: 9740.9894. Time: 178.7609 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2082: GFLOPs: 9683.7862. Time: 179.8168 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2083: GFLOPs: 9701.7048. Time: 179.4847 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2084: GFLOPs: 9714.7479. Time: 179.2438 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2085: GFLOPs: 9755.6845. Time: 178.4916 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2086: GFLOPs: 9680.0844. Time: 179.8856 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2087: GFLOPs: 9674.1768. Time: 179.9955 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2088: GFLOPs: 9674.5578. Time: 179.9884 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2089: GFLOPs: 9661.9094. Time: 180.2240 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2090: GFLOPs: 9745.4427. Time: 178.6792 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2091: GFLOPs: 9699.4761. Time: 179.5260 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2092: GFLOPs: 9595.6270. Time: 181.4689 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2093: GFLOPs: 9696.1763. Time: 179.5871 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2094: GFLOPs: 9670.3990. Time: 180.0658 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2095: GFLOPs: 9740.2633. Time: 178.7742 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2096: GFLOPs: 9768.9413. Time: 178.2494 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2097: GFLOPs: 9759.8355. Time: 178.4157 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2098: GFLOPs: 9723.6685. Time: 179.0793 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2099: GFLOPs: 9719.7971. Time: 179.1506 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2100: GFLOPs: 9327.0037. Time: 186.6953 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2101: GFLOPs: 9478.3072. Time: 183.7151 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2102: GFLOPs: 9728.4090. Time: 178.9921 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2103: GFLOPs: 9755.6184. Time: 178.4928 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2104: GFLOPs: 9768.5283. Time: 178.2569 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2105: GFLOPs: 9711.2289. Time: 179.3087 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2106: GFLOPs: 9715.4986. Time: 179.2299 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2107: GFLOPs: 9219.3866. Time: 188.8746 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2108: GFLOPs: 9795.0984. Time: 177.7734 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2109: GFLOPs: 7315.5492. Time: 238.0283 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2110: GFLOPs: 4777.8747. Time: 364.4524 us. Best GFLOPs: 9859.2245
2024-04-29 03:47:52 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_5] Trial #2111: GFLOPs: 223.2839. Time: 7798.6262 us. Best GFLOPs: 9859.2245
