2024-04-28 19:50:04 [INFO] [task_scheduler.cc:160] Initializing Task #12: "fused_nn_avg_pool2d"
2024-04-28 19:50:04 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pool_sum = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)))
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7), T.int64(1), T.int64(1)):
            with T.block("pool_sum"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1])
                T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                with T.init():
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(0)
                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7)):
            with T.block("pool_avg"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_avg"})
                pool_avg[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
2024-04-28 19:50:04 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-28 19:50:04 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            pool_sum = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)))
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(1), T.int64(1)):
                        with T.block("pool_sum"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                            v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                            v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1])
                            T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(0)
                            pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1]
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    with T.block("pool_avg"):
                        v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_ax1 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                        v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                        v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                        T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3])
                        pool_avg[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
b0 = sch.get_block(name="pool_sum", func_name="main")
b1 = sch.get_block(name="pool_avg", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
v3 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v3)
l4, l5, l6, l7 = sch.get_loops(block=b1)
l8 = sch.fuse(l4, l5, l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
l12, l13, l14, l15, l16, l17 = sch.get_loops(block=b0)
l18 = sch.fuse(l12, l13, l14, l15, preserve_unit_iters=True)
v19 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l20, l21 = sch.split(loop=l18, factors=[None, v19], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
2024-04-28 20:18:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:18:09 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:18:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x9279fb8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x709b038)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x709bb18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x70a6668)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x91f82f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b80028)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x709bae8)]: 0 failure(s)
2024-04-28 20:18:10 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 20:18:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x9279fb8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x709b038)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x709bb18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x70a6668)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x91f82f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b80028)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x709bae8)]: 0 failure(s)
2024-04-28 20:18:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x9279fb8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x709b038)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x709bb18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x70a6668)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x91f82f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b80028)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x709bae8)]: 0 failure(s)
2024-04-28 20:18:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x9279fb8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x709b038)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x709bb18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x70a6668)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x91f82f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b80028)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x709bae8)]: 0 failure(s)
2024-04-28 20:18:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x9279fb8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x709b038)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x709bb18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x70a6668)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x91f82f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3b80028)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x709bae8)]: 0 failure(s)
2024-04-28 20:18:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9958  0.9859  0.9816  0.9733  0.9686  0.9673  0.9657  0.9493  0.9428  0.9412  0.9208  0.9165  0.9059  0.9008  0.9008  0.8957
[17 : 32]:	0.8881  0.8833  0.8777  0.8686  0.8656  0.8642  0.8625  0.8622  0.8580  0.8578  0.8534  0.8532  0.8305  0.8288  0.8273  0.8056
[33 : 48]:	0.8052  0.8024  0.7981  0.7900  0.7824  0.7796  0.7686  0.7584  0.7426  0.7408  0.7405  0.7377  0.7247  0.7225  0.7224  0.7144
[49 : 64]:	0.7120  0.7063  0.7044  0.6961  0.6915  0.6806  0.6779  0.6701  0.6676  0.6566  0.6564  0.6557  0.6449  0.6411  0.6367  0.6334
2024-04-28 20:18:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:18:12 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #1: GFLOPs: 70.1826. Time: 5.7195 us. Best GFLOPs: 70.1826
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #2: GFLOPs: 66.7169. Time: 6.0166 us. Best GFLOPs: 70.1826
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #3: GFLOPs: 68.0700. Time: 5.8970 us. Best GFLOPs: 70.1826
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #4: GFLOPs: 67.3132. Time: 5.9633 us. Best GFLOPs: 70.1826
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #5: GFLOPs: 71.2121. Time: 5.6368 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #6: GFLOPs: 68.0358. Time: 5.9000 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #7: GFLOPs: 68.2415. Time: 5.8822 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #8: GFLOPs: 67.2581. Time: 5.9682 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #9: GFLOPs: 65.4111. Time: 6.1367 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #10: GFLOPs: 66.0312. Time: 6.0791 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #11: GFLOPs: 64.9507. Time: 6.1802 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #12: GFLOPs: 64.9475. Time: 6.1805 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #13: GFLOPs: 67.2289. Time: 5.9708 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #14: GFLOPs: 65.1244. Time: 6.1637 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #15: GFLOPs: 64.6991. Time: 6.2042 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #16: GFLOPs: 67.1526. Time: 5.9776 us. Best GFLOPs: 71.2121
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #17: GFLOPs: 74.4219. Time: 5.3937 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #18: GFLOPs: 71.0411. Time: 5.6504 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #19: GFLOPs: 67.9785. Time: 5.9049 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #20: GFLOPs: 66.7634. Time: 6.0124 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #21: GFLOPs: 68.2171. Time: 5.8843 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #22: GFLOPs: 67.3020. Time: 5.9643 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #23: GFLOPs: 65.3905. Time: 6.1386 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #24: GFLOPs: 70.2910. Time: 5.7107 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #25: GFLOPs: 64.4401. Time: 6.2292 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #26: GFLOPs: 65.2341. Time: 6.1533 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #27: GFLOPs: 70.2530. Time: 5.7137 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #28: GFLOPs: 68.6957. Time: 5.8433 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #29: GFLOPs: 71.2108. Time: 5.6369 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #30: GFLOPs: 67.2341. Time: 5.9703 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #31: GFLOPs: 68.6509. Time: 5.8471 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #32: GFLOPs: 66.0298. Time: 6.0792 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #33: GFLOPs: 68.5606. Time: 5.8548 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #34: GFLOPs: 67.9635. Time: 5.9062 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #35: GFLOPs: 67.9632. Time: 5.9063 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #36: GFLOPs: 67.6835. Time: 5.9307 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #37: GFLOPs: 67.6159. Time: 5.9366 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #38: GFLOPs: 71.0113. Time: 5.6527 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #39: GFLOPs: 67.2201. Time: 5.9715 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #40: GFLOPs: 64.4351. Time: 6.2296 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #41: GFLOPs: 64.9220. Time: 6.1829 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #42: GFLOPs: 62.2928. Time: 6.4439 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #43: GFLOPs: 74.4002. Time: 5.3953 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #44: GFLOPs: 67.3098. Time: 5.9636 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #45: GFLOPs: 65.0705. Time: 6.1688 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #46: GFLOPs: 64.4286. Time: 6.2303 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #47: GFLOPs: 71.2922. Time: 5.6305 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #48: GFLOPs: 68.0765. Time: 5.8964 us. Best GFLOPs: 74.4219
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #49: GFLOPs: 74.4698. Time: 5.3902 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #50: GFLOPs: 65.2743. Time: 6.1496 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #51: GFLOPs: 67.3193. Time: 5.9627 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #52: GFLOPs: 65.3793. Time: 6.1397 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #53: GFLOPs: 62.3016. Time: 6.4430 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #54: GFLOPs: 65.0697. Time: 6.1689 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #55: GFLOPs: 70.9732. Time: 5.6558 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #56: GFLOPs: 67.0200. Time: 5.9894 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #57: GFLOPs: 67.9697. Time: 5.9057 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #58: GFLOPs: 62.3055. Time: 6.4426 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #59: GFLOPs: 71.7600. Time: 5.5938 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #60: GFLOPs: 69.6515. Time: 5.7631 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #61: GFLOPs: 70.9888. Time: 5.6545 us. Best GFLOPs: 74.4698
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #62: GFLOPs: 75.4998. Time: 5.3167 us. Best GFLOPs: 75.4998
2024-04-28 20:24:14 [INFO] [task_scheduler.cc:131] [Task #12: fused_nn_avg_pool2d] Trial #63: GFLOPs: 71.6896. Time: 5.5993 us. Best GFLOPs: 75.4998
