2024-04-29 17:13:43 [INFO] [task_scheduler.cc:160] Initializing Task #15: "fused_nn_conv2d_add_nn_relu_6"
2024-04-29 17:13:43 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(256), T.int64(28), T.int64(28), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 17:13:43 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 17:13:43 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(32), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(224)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(14))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4096)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(256), ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(512), rc_0 * T.int64(16) + rc_1 + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 16, 8, 1, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[28, 1, 1, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 16, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 17:13:43 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(224)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(14))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4096)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(256), ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(16) + rc_1 + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 16, 8, 1, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[28, 1, 1, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 16, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 17:13:43 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(224)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(14))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4096)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(256), ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(16) + rc_1 + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 16, 8, 1, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[28, 1, 1, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 16, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 17:41:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:41:36 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 17:41:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 487 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 17:41:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 967 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 17:41:41 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-29 17:41:45 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 17:41:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 17:41:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 17:41:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 17:41:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9998  0.9990  0.9981  0.9980  0.9970  0.9969  0.9945  0.9942  0.9939  0.9934  0.9913  0.9913  0.9906  0.9902  0.9894
[17 : 32]:	0.9880  0.9871  0.9867  0.9848  0.9834  0.9830  0.9807  0.9807  0.9803  0.9800  0.9797  0.9787  0.9783  0.9782  0.9777  0.9753
[33 : 48]:	0.9752  0.9752  0.9727  0.9722  0.9710  0.9703  0.9703  0.9700  0.9699  0.9696  0.9695  0.9689  0.9669  0.9662  0.9621  0.9617
[49 : 64]:	0.9615  0.9610  0.9593  0.9590  0.9572  0.9570  0.9562  0.9546  0.9541  0.9532  0.9519  0.9519  0.9504  0.9503  0.9491  0.9475
2024-04-29 17:41:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:41:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #1: GFLOPs: 1123.3541. Time: 183.3102 us. Best GFLOPs: 1123.3541
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #2: GFLOPs: 1214.5308. Time: 169.5489 us. Best GFLOPs: 1214.5308
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #3: GFLOPs: 306.8013. Time: 671.1910 us. Best GFLOPs: 1214.5308
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #4: GFLOPs: 498.2261. Time: 413.3109 us. Best GFLOPs: 1214.5308
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #5: GFLOPs: 62.7742. Time: 3280.3674 us. Best GFLOPs: 1214.5308
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #6: GFLOPs: 1253.6436. Time: 164.2590 us. Best GFLOPs: 1253.6436
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #7: GFLOPs: 166.4634. Time: 1237.0426 us. Best GFLOPs: 1253.6436
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #8: GFLOPs: 697.6277. Time: 295.1751 us. Best GFLOPs: 1253.6436
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #9: GFLOPs: 37.6989. Time: 5462.2855 us. Best GFLOPs: 1253.6436
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #10: GFLOPs: 4711.3426. Time: 43.7078 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #11: GFLOPs: 1084.4210. Time: 189.8915 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #12: GFLOPs: 3197.8697. Time: 64.3936 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #13: GFLOPs: 1228.5773. Time: 167.6104 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #14: GFLOPs: 4411.5554. Time: 46.6779 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #15: GFLOPs: 45.1117. Time: 4564.7248 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #16: GFLOPs: 590.6316. Time: 348.6476 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #17: GFLOPs: 26.3082. Time: 7827.2986 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #18: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(14)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(128) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + yy_3_init * T.int64(7) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), xx_3_init * T.int64(14) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(32), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(49)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(16) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(16))
                                        v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(16) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(16))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(14)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(128) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + yy_3 * T.int64(7) + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), xx_3 * T.int64(14) + xx_4)
                                v_rc = T.axis.reduce(T.int64(512), rc_0 * T.int64(16) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(28)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(128) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + ax2)
                            v3 = T.axis.spatial(T.int64(28), ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 32, 1, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 7])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 14])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 8, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #19: GFLOPs: 35.0101. Time: 5881.7991 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #20: GFLOPs: 19.6210. Time: 10494.9760 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #21: GFLOPs: 987.8688. Time: 208.4511 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #22: GFLOPs: 1451.4507. Time: 141.8734 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #23: GFLOPs: 106.0375. Time: 1941.9765 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #24: GFLOPs: 31.4259. Time: 6552.6399 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #25: GFLOPs: 3548.3754. Time: 58.0328 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #26: GFLOPs: 3201.0821. Time: 64.3290 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #27: GFLOPs: 1451.3487. Time: 141.8834 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #28: GFLOPs: 58.9277. Time: 3494.4881 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #29: GFLOPs: 184.0583. Time: 1118.7882 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #30: GFLOPs: 1786.4430. Time: 115.2695 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #31: GFLOPs: 15.0597. Time: 13673.7279 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #32: GFLOPs: 82.7622. Time: 2488.1201 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #33: GFLOPs: 1102.2892. Time: 186.8133 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #34: GFLOPs: 58.5562. Time: 3516.6631 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #35: GFLOPs: 1388.7378. Time: 148.2802 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #36: GFLOPs: 167.8820. Time: 1226.5897 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #37: GFLOPs: 190.1530. Time: 1082.9295 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #38: GFLOPs: 66.6242. Time: 3090.8043 us. Best GFLOPs: 4711.3426
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #39: GFLOPs: 5155.5533. Time: 39.9418 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #40: GFLOPs: 100.0356. Time: 2058.4908 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #41: GFLOPs: 56.9666. Time: 3614.7932 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #42: GFLOPs: 327.1058. Time: 629.5282 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #43: GFLOPs: 1506.3274. Time: 136.7049 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #44: GFLOPs: 4232.9550. Time: 48.6474 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #45: GFLOPs: 370.3691. Time: 555.9922 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #46: GFLOPs: 752.7754. Time: 273.5508 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #47: GFLOPs: 452.7150. Time: 454.8608 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:49 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #48: GFLOPs: 3017.0269. Time: 68.2534 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #49: GFLOPs: 4665.5697. Time: 44.1366 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #50: GFLOPs: 113.6308. Time: 1812.2057 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #51: GFLOPs: 4637.7586. Time: 44.4013 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #52: GFLOPs: 1104.5237. Time: 186.4354 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #53: GFLOPs: 1382.7617. Time: 148.9210 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #54: GFLOPs: 5134.9682. Time: 40.1020 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #55: GFLOPs: 32.6766. Time: 6301.8241 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #56: GFLOPs: 1017.3164. Time: 202.4172 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #57: GFLOPs: 4705.8468. Time: 43.7588 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #58: GFLOPs: 241.4904. Time: 852.7143 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #59: GFLOPs: 719.0028. Time: 286.3999 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #60: GFLOPs: 555.5915. Time: 370.6362 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #61: GFLOPs: 179.5122. Time: 1147.1213 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #62: GFLOPs: 1926.8769. Time: 106.8684 us. Best GFLOPs: 5155.5533
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #63: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(8) + ff_3_init * T.int64(8) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused)
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(14))
                                        v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(14))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(196))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(256), ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2)
                                        v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused)
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(256))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(8) + ff_3 * T.int64(8) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused + rc_1 + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(8) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 4, 8, 1, 8])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 14, 1, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l102, l103, l104, l105, l106 = sch.get_loops(block=b74)
l107, l108, l109 = sch.split(loop=l106, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l109)
sch.bind(loop=l108, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114 = sch.get_loops(block=b87)
l115, l116, l117 = sch.split(loop=l114, factors=[None, 56, 2], preserve_unit_iters=True)
sch.vectorize(loop=l117)
sch.bind(loop=l116, thread_axis="threadIdx.x")
b118 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b118, ann_key="meta_schedule.unroll_explicit")
b119, b120, b121, b122 = sch.get_child_blocks(b118)
l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b119)
l130, l131, l132, l133, l134, l135, l136 = sch.get_loops(block=b120)
l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154 = sch.get_loops(block=b121)
sch.annotate(block_or_loop=l137, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l137, ann_key="pragma_unroll_explicit", ann_val=1)
l155, l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b122)
b162 = sch.get_block(name="conv2d_nchw", func_name="main")
l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b162)
b181 = sch.decompose_reduction(block=b162, loop=l166)
2024-04-29 18:04:50 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #64: GFLOPs: 56.8538. Time: 3621.9610 us. Best GFLOPs: 5155.5533
2024-04-29 19:15:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:15:56 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 19:15:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 418 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 19:16:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 837 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 19:16:00 [INFO] [evolutionary_search.cc:723] Sampled 63 candidate(s)
2024-04-29 19:16:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 19:16:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 19:16:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 19:16:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 19:16:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3503  1.2821  1.2810  1.2751  1.2706  1.2662  1.2540  1.2536  1.2434  1.2398  1.2051  1.1998  1.1884  1.1877  1.1873  1.1816
[17 : 32]:	1.1800  1.1795  1.1741  1.1724  1.1689  1.1679  1.1668  1.1657  1.1651  1.1599  1.1592  1.1584  1.1575  1.1528  1.1504  1.1468
[33 : 48]:	1.1452  1.1450  1.1445  1.1425  1.1378  1.1375  1.1341  1.1336  1.1319  1.1253  1.1199  1.1189  1.1154  1.1137  1.1099  1.1085
[49 : 64]:	1.1063  1.0997  1.0978  1.0934  1.0889  1.0879  1.0872  1.0846  1.0820  1.0804  1.0802  1.0762  1.0735  1.0708  1.0671  1.0669
2024-04-29 19:16:21 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:16:21 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #65: GFLOPs: 3913.1602. Time: 52.6230 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #66: GFLOPs: 3609.9390. Time: 57.0432 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #67: GFLOPs: 2660.4398. Time: 77.4016 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #68: GFLOPs: 2905.5333. Time: 70.8725 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #69: GFLOPs: 3506.9294. Time: 58.7187 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #70: GFLOPs: 2710.7446. Time: 75.9652 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #71: GFLOPs: 3092.5801. Time: 66.5859 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #72: GFLOPs: 3075.4326. Time: 66.9572 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #73: GFLOPs: 2964.6505. Time: 69.4592 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #74: GFLOPs: 3110.7090. Time: 66.1979 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #75: GFLOPs: 2013.6682. Time: 102.2623 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #76: GFLOPs: 3152.1887. Time: 65.3268 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #77: GFLOPs: 1779.7022. Time: 115.7060 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #78: GFLOPs: 3115.9327. Time: 66.0869 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #79: GFLOPs: 2052.1316. Time: 100.3456 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #80: GFLOPs: 3329.9808. Time: 61.8389 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #81: GFLOPs: 2048.9739. Time: 100.5002 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #82: GFLOPs: 129.5205. Time: 1589.8819 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #83: GFLOPs: 1974.9722. Time: 104.2659 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #84: GFLOPs: 4134.4456. Time: 49.8065 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #85: GFLOPs: 3175.1036. Time: 64.8553 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #86: GFLOPs: 131.6154. Time: 1564.5760 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #87: GFLOPs: 4148.4060. Time: 49.6389 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #88: GFLOPs: 4952.2928. Time: 41.5812 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #89: GFLOPs: 139.1059. Time: 1480.3275 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #90: GFLOPs: 120.3020. Time: 1711.7114 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #91: GFLOPs: 1967.4566. Time: 104.6642 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #92: GFLOPs: 3171.4027. Time: 64.9310 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #93: GFLOPs: 3174.2997. Time: 64.8717 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #94: GFLOPs: 1971.2895. Time: 104.4607 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #95: GFLOPs: 133.0122. Time: 1548.1462 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #96: GFLOPs: 3308.9169. Time: 62.2325 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #97: GFLOPs: 4953.4369. Time: 41.5716 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #98: GFLOPs: 2598.0624. Time: 79.2600 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #99: GFLOPs: 2081.9636. Time: 98.9077 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #100: GFLOPs: 1843.4688. Time: 111.7037 us. Best GFLOPs: 5155.5533
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #101: GFLOPs: 5444.3519. Time: 37.8231 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #102: GFLOPs: 2944.9395. Time: 69.9241 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #103: GFLOPs: 2197.7281. Time: 93.6978 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #104: GFLOPs: 5062.1228. Time: 40.6790 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #105: GFLOPs: 2026.8288. Time: 101.5983 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #106: GFLOPs: 2052.2894. Time: 100.3378 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #107: GFLOPs: 2086.3560. Time: 98.6995 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #108: GFLOPs: 4010.8537. Time: 51.3413 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #109: GFLOPs: 2276.4655. Time: 90.4570 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #110: GFLOPs: 3990.0698. Time: 51.6087 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #111: GFLOPs: 1353.9446. Time: 152.0906 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #112: GFLOPs: 136.6224. Time: 1507.2363 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #113: GFLOPs: 1687.2126. Time: 122.0488 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #114: GFLOPs: 1794.0951. Time: 114.7778 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #115: GFLOPs: 516.3386. Time: 398.8125 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #116: GFLOPs: 2457.7968. Time: 83.7833 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #117: GFLOPs: 126.1389. Time: 1632.5037 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #118: GFLOPs: 2315.7642. Time: 88.9220 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #119: GFLOPs: 1964.6334. Time: 104.8146 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #120: GFLOPs: 1348.8452. Time: 152.6656 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #121: GFLOPs: 2198.6751. Time: 93.6575 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #122: GFLOPs: 2600.9143. Time: 79.1730 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #123: GFLOPs: 82.1874. Time: 2505.5231 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #124: GFLOPs: 3248.0420. Time: 63.3989 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #125: GFLOPs: 3287.2964. Time: 62.6418 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #126: GFLOPs: 2146.2874. Time: 95.9435 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #127: GFLOPs: 20.6198. Time: 9986.6237 us. Best GFLOPs: 5444.3519
2024-04-29 19:17:39 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #128: GFLOPs: 2834.9028. Time: 72.6382 us. Best GFLOPs: 5444.3519
2024-04-29 20:39:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:39:12 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:39:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 379 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 20:39:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 758 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 20:39:16 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-04-29 20:39:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 20:39:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 20:39:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 20:39:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 20:39:37 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6888  1.6790  1.6732  1.6283  1.6158  1.6130  1.6024  1.5890  1.5847  1.5814  1.5721  1.5721  1.5691  1.5691  1.5580  1.5550
[17 : 32]:	1.5452  1.5446  1.5444  1.5440  1.5418  1.5411  1.5385  1.5354  1.5318  1.5301  1.5290  1.5231  1.5222  1.5208  1.5201  1.5201
[33 : 48]:	1.5184  1.5178  1.5156  1.5156  1.5131  1.5116  1.5106  1.5095  1.5093  1.5093  1.5088  1.5088  1.5059  1.5059  1.4903  1.4769
[49 : 64]:	1.4746  1.4678  1.4673  1.4640  1.4544  1.4539  1.4295  1.3953  1.3952  1.3863  1.3775  1.3775  1.3713  1.3654  1.3652  1.3652
2024-04-29 20:39:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:39:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #129: GFLOPs: 5867.7164. Time: 35.0941 us. Best GFLOPs: 5867.7164
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #130: GFLOPs: 6337.3535. Time: 32.4934 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #131: GFLOPs: 5870.9034. Time: 35.0751 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #132: GFLOPs: 5870.5344. Time: 35.0773 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #133: GFLOPs: 3628.0071. Time: 56.7591 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #134: GFLOPs: 3626.9248. Time: 56.7760 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #135: GFLOPs: 3627.5582. Time: 56.7661 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #136: GFLOPs: 3638.6298. Time: 56.5934 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #137: GFLOPs: 3627.0766. Time: 56.7736 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #138: GFLOPs: 3629.5066. Time: 56.7356 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #139: GFLOPs: 3104.7338. Time: 66.3253 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #140: GFLOPs: 3087.9915. Time: 66.6849 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #141: GFLOPs: 3627.8139. Time: 56.7621 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #142: GFLOPs: 3627.2521. Time: 56.7709 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #143: GFLOPs: 3088.2459. Time: 66.6794 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #144: GFLOPs: 3630.2198. Time: 56.7245 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #145: GFLOPs: 3608.3810. Time: 57.0678 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #146: GFLOPs: 3086.5251. Time: 66.7166 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #147: GFLOPs: 3627.3227. Time: 56.7698 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #148: GFLOPs: 3599.0424. Time: 57.2159 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #149: GFLOPs: 3654.7598. Time: 56.3436 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #150: GFLOPs: 1365.4971. Time: 150.8039 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #151: GFLOPs: 3560.8661. Time: 57.8293 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #152: GFLOPs: 3188.7813. Time: 64.5771 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #153: GFLOPs: 3638.2267. Time: 56.5996 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #154: GFLOPs: 2997.5651. Time: 68.6965 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #155: GFLOPs: 3548.4024. Time: 58.0324 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #156: GFLOPs: 3735.1711. Time: 55.1306 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #157: GFLOPs: 3084.1010. Time: 66.7690 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #158: GFLOPs: 3654.9012. Time: 56.3414 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #159: GFLOPs: 3686.6779. Time: 55.8558 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #160: GFLOPs: 3686.3207. Time: 55.8612 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #161: GFLOPs: 3639.1756. Time: 56.5849 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #162: GFLOPs: 3654.7128. Time: 56.3443 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #163: GFLOPs: 3192.4745. Time: 64.5024 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #164: GFLOPs: 3192.5599. Time: 64.5007 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #165: GFLOPs: 3337.3546. Time: 61.7023 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #166: GFLOPs: 3550.9383. Time: 57.9910 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #167: GFLOPs: 3672.2361. Time: 56.0755 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #168: GFLOPs: 3687.5203. Time: 55.8430 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #169: GFLOPs: 3686.2732. Time: 55.8619 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #170: GFLOPs: 3287.4375. Time: 62.6392 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #171: GFLOPs: 3608.0298. Time: 57.0733 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #172: GFLOPs: 3608.1942. Time: 57.0707 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #173: GFLOPs: 3101.8179. Time: 66.3876 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #174: GFLOPs: 3102.4574. Time: 66.3739 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #175: GFLOPs: 3653.5042. Time: 56.3630 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #176: GFLOPs: 3643.5593. Time: 56.5168 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #177: GFLOPs: 3575.5535. Time: 57.5917 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #178: GFLOPs: 3073.4744. Time: 66.9998 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #179: GFLOPs: 3071.8113. Time: 67.0361 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #180: GFLOPs: 3648.7420. Time: 56.4365 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #181: GFLOPs: 3625.5881. Time: 56.7969 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #182: GFLOPs: 3624.4402. Time: 56.8149 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #183: GFLOPs: 3002.8141. Time: 68.5764 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #184: GFLOPs: 3638.4847. Time: 56.5956 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #185: GFLOPs: 3637.4990. Time: 56.6110 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #186: GFLOPs: 3749.4487. Time: 54.9207 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #187: GFLOPs: 4630.5387. Time: 44.4705 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #188: GFLOPs: 4818.9340. Time: 42.7319 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #189: GFLOPs: 3627.9540. Time: 56.7599 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #190: GFLOPs: 125.5499. Time: 1640.1626 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #191: GFLOPs: 115.4281. Time: 1783.9876 us. Best GFLOPs: 6337.3535
2024-04-29 20:41:00 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #192: GFLOPs: 4.5539. Time: 45219.1567 us. Best GFLOPs: 6337.3535
2024-04-29 22:33:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:33:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:33:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:33:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 776 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:33:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 1165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:33:49 [INFO] [evolutionary_search.cc:723] Sampled 65 candidate(s)
2024-04-29 22:33:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:33:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:34:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:34:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60112c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7a62ea8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7a633e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x690ea38)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48c1cb8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x765a018)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd0bd1a8)]: 0 failure(s)
2024-04-29 22:34:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6163  1.6163  1.4068  1.3171  1.2623  1.2265  1.2224  1.2170  1.2148  1.2094  1.2086  1.2020  1.2011  1.1959  1.1957  1.1934
[17 : 32]:	1.1897  1.1878  1.1872  1.1864  1.1856  1.1812  1.1803  1.1790  1.1762  1.1754  1.1737  1.1729  1.1676  1.1666  1.1660  1.1623
[33 : 48]:	1.1589  1.1583  1.1530  1.1520  1.1506  1.1426  1.1378  1.1330  1.1283  1.1155  1.1124  1.1124  1.0950  1.0896  1.0894  1.0870
[49 : 64]:	1.0829  1.0828  1.0680  1.0673  1.0612  1.0456  1.0192  1.0137  1.0079  1.0061  1.0042  1.0021  1.0000  0.9984  0.9975  0.9950
2024-04-29 22:34:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:34:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #193: GFLOPs: 948.5727. Time: 217.0865 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #194: GFLOPs: 948.5298. Time: 217.0963 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #195: GFLOPs: 1009.7095. Time: 203.9421 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #196: GFLOPs: 3804.4047. Time: 54.1273 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #197: GFLOPs: 3814.5571. Time: 53.9833 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #198: GFLOPs: 2457.7879. Time: 83.7836 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #199: GFLOPs: 3104.6280. Time: 66.3275 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #200: GFLOPs: 2499.1905. Time: 82.3956 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #201: GFLOPs: 3090.4995. Time: 66.6308 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #202: GFLOPs: 2488.0639. Time: 82.7641 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #203: GFLOPs: 2432.3940. Time: 84.6583 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #204: GFLOPs: 3104.7382. Time: 66.3252 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #205: GFLOPs: 2799.3423. Time: 73.5610 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #206: GFLOPs: 2800.7437. Time: 73.5242 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #207: GFLOPs: 2842.9285. Time: 72.4332 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #208: GFLOPs: 2800.7835. Time: 73.5231 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #209: GFLOPs: 2432.2910. Time: 84.6619 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #210: GFLOPs: 2374.9562. Time: 86.7057 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #211: GFLOPs: 3090.9639. Time: 66.6207 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #212: GFLOPs: 1808.2717. Time: 113.8780 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #213: GFLOPs: 3104.5301. Time: 66.3296 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #214: GFLOPs: 2801.2689. Time: 73.5104 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #215: GFLOPs: 2498.6690. Time: 82.4128 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #216: GFLOPs: 3105.6595. Time: 66.3055 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #217: GFLOPs: 2498.5461. Time: 82.4169 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #218: GFLOPs: 3133.1156. Time: 65.7245 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #219: GFLOPs: 2498.7847. Time: 82.4090 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #220: GFLOPs: 2829.3105. Time: 72.7818 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #221: GFLOPs: 2864.9486. Time: 71.8764 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #222: GFLOPs: 2865.4935. Time: 71.8628 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #223: GFLOPs: 3696.2605. Time: 55.7110 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #224: GFLOPs: 2389.4536. Time: 86.1797 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #225: GFLOPs: 2374.6663. Time: 86.7163 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #226: GFLOPs: 3171.0546. Time: 64.9381 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #227: GFLOPs: 3696.4966. Time: 55.7074 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #228: GFLOPs: 2499.3465. Time: 82.3905 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #229: GFLOPs: 2843.1981. Time: 72.4263 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #230: GFLOPs: 3165.0568. Time: 65.0612 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #231: GFLOPs: 1804.5466. Time: 114.1130 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #232: GFLOPs: 3160.9797. Time: 65.1451 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #233: GFLOPs: 1695.7577. Time: 121.4338 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #234: GFLOPs: 3088.8688. Time: 66.6659 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #235: GFLOPs: 3160.2435. Time: 65.1603 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #236: GFLOPs: 3160.3800. Time: 65.1575 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #237: GFLOPs: 3106.4393. Time: 66.2889 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #238: GFLOPs: 3157.6643. Time: 65.2135 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #239: GFLOPs: 3160.2482. Time: 65.1602 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #240: GFLOPs: 2999.0139. Time: 68.6633 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #241: GFLOPs: 3692.2093. Time: 55.7721 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #242: GFLOPs: 3131.9450. Time: 65.7490 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #243: GFLOPs: 3159.6385. Time: 65.1727 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #244: GFLOPs: 1398.5782. Time: 147.2369 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #245: GFLOPs: 3692.6729. Time: 55.7651 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #246: GFLOPs: 3242.5613. Time: 63.5061 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #247: GFLOPs: 3921.1137. Time: 52.5163 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #248: GFLOPs: 3696.2368. Time: 55.7113 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #249: GFLOPs: 3703.6444. Time: 55.5999 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #250: GFLOPs: 3848.7145. Time: 53.5042 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #251: GFLOPs: 2235.8159. Time: 92.1016 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #252: GFLOPs: 2361.5865. Time: 87.1966 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #253: GFLOPs: 3794.0674. Time: 54.2748 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #254: GFLOPs: 655.8202. Time: 313.9920 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #255: GFLOPs: 483.3055. Time: 426.0707 us. Best GFLOPs: 6337.3535
2024-04-29 22:35:46 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_conv2d_add_nn_relu_6] Trial #256: GFLOPs: 41.1513. Time: 5004.0321 us. Best GFLOPs: 6337.3535
