2024-04-29 17:13:42 [INFO] [task_scheduler.cc:160] Initializing Task #14: "fused_nn_conv2d_add_add_nn_relu_1"
2024-04-29 17:13:42 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28), T.int64(128), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3] = T_add[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 17:13:42 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 17:13:42 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3584)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(56))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(56) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v1 = T.axis.spatial(T.int64(128), rc_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(64))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused * T.int64(256) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0 * T.int64(64) + rc_1 * T.int64(32) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(4)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused * T.int64(256) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 128, 1, 2])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 7])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[7, 1, 1, 2, 2])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[2, 2, 32])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 17:13:42 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3584)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(56))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(56) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(64))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused * T.int64(256) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + rc_1 * T.int64(32) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(4)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused * T.int64(256) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 128, 1, 2])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 7])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[7, 1, 1, 2, 2])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[2, 2, 32])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
2024-04-29 17:13:42 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3584)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(56))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(56) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(64))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused * T.int64(256) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + rc_1 * T.int64(32) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(4)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused * T.int64(256) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 128, 1, 2])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 7])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[7, 1, 1, 2, 2])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[2, 2, 32])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
2024-04-29 17:39:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:39:49 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 17:39:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 481 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 17:39:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 958 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 17:39:54 [INFO] [evolutionary_search.cc:723] Sampled 66 candidate(s)
2024-04-29 17:39:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 17:40:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 17:40:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 17:40:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 17:40:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9993  0.9990  0.9988  0.9987  0.9987  0.9986  0.9975  0.9974  0.9963  0.9962  0.9956  0.9955  0.9954  0.9952  0.9945
[17 : 32]:	0.9945  0.9944  0.9943  0.9943  0.9930  0.9926  0.9900  0.9895  0.9895  0.9865  0.9845  0.9845  0.9823  0.9822  0.9817  0.9817
[33 : 48]:	0.9816  0.9815  0.9813  0.9810  0.9804  0.9798  0.9795  0.9794  0.9789  0.9784  0.9781  0.9779  0.9772  0.9772  0.9768  0.9766
[49 : 64]:	0.9765  0.9764  0.9760  0.9758  0.9755  0.9715  0.9707  0.9693  0.9687  0.9687  0.9686  0.9674  0.9648  0.9643  0.9639  0.9637
2024-04-29 17:40:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:40:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #1: GFLOPs: 9.5260. Time: 10913.7921 us. Best GFLOPs: 9.5260
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #2: GFLOPs: 29.3299. Time: 3544.6643 us. Best GFLOPs: 29.3299
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #3: GFLOPs: 6.4385. Time: 16147.3094 us. Best GFLOPs: 29.3299
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #4: GFLOPs: 1131.0947. Time: 91.9151 us. Best GFLOPs: 1131.0947
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #5: GFLOPs: 1984.5989. Time: 52.3857 us. Best GFLOPs: 1984.5989
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #6: GFLOPs: 2204.1240. Time: 47.1682 us. Best GFLOPs: 2204.1240
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #7: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  408: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  407: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  406: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  405: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  404: tvm::transform::Pass::operator()(tvm::IRModule) const
  403: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  402: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  401: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  400: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  399: _ZN3tvm7runtime13PackedFun
  398: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  397: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  396: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  395: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  394: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  393: _ZZN3tvm3tir11StmtFunctorI
  392: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  391: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  390: _ZZN3tvm3tir11StmtFunctorI
  389: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  388: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  387: _ZZN3tvm3tir11StmtFunctorI
  386: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  385: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  384: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  383: _ZZN3tvm3tir11StmtFunctorI
  382: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  381: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  380: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  379: _ZZN3tvm3tir11StmtFunctorI
  378: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  377: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  376: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  375: _ZZN3tvm3tir11StmtFunctorI
  374: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  373: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  372: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  371: _ZZN3tvm3tir11StmtFunctorI
  370: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  369: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  368: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  367: _ZZN3tvm3tir11StmtFunctorI
  366: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  365: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  364: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  363: _ZZN3tvm3tir11StmtFunctorI
  362: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  361: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  360: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  359: _ZZN3tvm3tir11StmtFunctorI
  358: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  357: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  356: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  355: _ZZN3tvm3tir11StmtFunctorI
  354: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  353: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  352: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  351: _ZZN3tvm3tir11StmtFunctorI
  350: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  349: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  348: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  347: _ZZN3tvm3tir11StmtFunctorI
  346: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  345: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  344: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  343: _ZZN3tvm3tir11StmtFunctorI
  342: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  341: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  340: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  339: _ZZN3tvm3tir11StmtFunctorI
  338: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  337: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  336: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  335: _ZZN3tvm3tir11StmtFunctorI
  334: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  333: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  332: _ZZN3tvm3tir11StmtFunctorI
  331: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  330: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  329: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  328: _ZZN3tvm3tir11StmtFunctorI
  327: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  326: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  325: _ZZN3tvm3tir11StmtFunctorI
  324: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  323: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  322: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  321: _ZZN3tvm3tir11StmtFunctorI
  320: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  319: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  318: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  317: _ZZN3tvm3tir11StmtFunctorI
  316: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  315: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  314: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  313: _ZZN3tvm3tir11StmtFunctorI
  312: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  311: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  310: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  309: _ZZN3tvm3tir11StmtFunctorI
  308: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  307: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  306: _ZZN3tvm3tir11StmtFunctorI
  305: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  304: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  303: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  302: _ZZN3tvm3tir11StmtFunctorI
  301: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  300: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  299: _ZZN3tvm3tir11StmtFunctorI
  298: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  297: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  296: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  295: _ZZN3tvm3tir11StmtFunctorI
  294: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  293: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  292: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  291: _ZZN3tvm3tir11StmtFunctorI
  290: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  289: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  288: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  287: _ZZN3tvm3tir11StmtFunctorI
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  278: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  277: _ZZN3tvm3tir11StmtFunctorI
  276: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  275: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  274: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  273: _ZZN3tvm3tir11StmtFunctorI
  272: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  256: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  255: _ZZN3tvm3tir11StmtFunctorI
  254: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  253: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  252: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  251: _ZZN3tvm3tir11StmtFunctorI
  250: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  249: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  248: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  247: _ZZN3tvm3tir11StmtFunctorI
  246: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  241: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  240: _ZZN3tvm3tir11StmtFunctorI
  239: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  234: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  233: _ZZN3tvm3tir11StmtFunctorI
  232: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  231: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  230: _ZZN3tvm3tir11StmtFunctorI
  229: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  228: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  227: _ZZN3tvm3tir11StmtFunctorI
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  219: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  218: _ZZN3tvm3tir11StmtFunctorI
  217: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  208: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  207: _ZZN3tvm3tir11StmtFunctorI
  206: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  205: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  204: _ZZN3tvm3tir11StmtFunctorI
  203: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  202: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  201: _ZZN3tvm3tir11StmtFunctorI
  200: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  199: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  198: _ZZN3tvm3tir11StmtFunctorI
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorIFNS
  188: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  187: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  186: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  185: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  184: _ZZN3tvm3tir11StmtFunctorI
  183: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  182: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  181: _ZZN3tvm3tir11StmtFunctorI
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorI
  177: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  176: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  175: _ZZN3tvm3tir11StmtFunctorI
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorIFNS
  156: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  155: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  154: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  153: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  152: _ZZN3tvm3tir11StmtFunctorI
  151: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  150: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  149: _ZZN3tvm3tir11StmtFunctorI
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorIFNS
  121: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  120: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorI
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorIFNS
  86: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  85: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorI
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorIFNS
  51: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  50: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorI
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(2) + xx_3_init * T.int64(2) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(56))
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56) // T.int64(4))
                                        v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(112))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(2)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 32, 4, 1])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 1])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[7, 2, 1, 1, 2])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[64, 1, 2])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l103, l104, l105, l106, l107 = sch.get_loops(block=b75)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 64, 2], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115 = sch.get_loops(block=b88)
l116, l117, l118 = sch.split(loop=l115, factors=[None, 64, 4], preserve_unit_iters=True)
sch.vectorize(loop=l118)
sch.bind(loop=l117, thread_axis="threadIdx.x")
b119 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b119, ann_key="meta_schedule.unroll_explicit")
b120, b121, b122, b123 = sch.get_child_blocks(b119)
l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b120)
l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b121)
l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155 = sch.get_loops(block=b122)
sch.annotate(block_or_loop=l138, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l138, ann_key="pragma_unroll_explicit", ann_val=1)
l156, l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b123)
b163 = sch.get_block(name="conv2d_nchw", func_name="main")
l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b163)
b182 = sch.decompose_reduction(block=b163, loop=l167)
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #8: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(28)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused * T.int64(128) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), xx_3_init * T.int64(28) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(16), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(49)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(128), rc_0 * T.int64(8) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(784))
                                        v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused * T.int64(128) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(128), rc_0 * T.int64(8) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(8))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(28)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused * T.int64(128) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), xx_3 * T.int64(28) + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0 * T.int64(8) + rc_1 + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(28)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused * T.int64(128) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[4, 2, 32, 1, 2])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 2, 2, 1])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 28])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[16, 8, 1])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l102, l103, l104, l105, l106, l107, l108 = sch.get_loops(block=b75)
l109, l110, l111 = sch.split(loop=l108, factors=[None, 64, 2], preserve_unit_iters=True)
sch.vectorize(loop=l111)
sch.bind(loop=l110, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b88)
l119, l120 = sch.split(loop=l118, factors=[None, 64], preserve_unit_iters=True)
sch.bind(loop=l120, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b123)
l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l143, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l143, ann_key="pragma_unroll_explicit", ann_val=1)
l163, l164, l165, l166, l167, l168, l169 = sch.get_loops(block=b125)
b170 = sch.get_block(name="conv2d_nchw", func_name="main")
l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190 = sch.get_loops(block=b170)
b191 = sch.decompose_reduction(block=b170, loop=l174)
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #9: GFLOPs: 2248.9014. Time: 46.2291 us. Best GFLOPs: 2248.9014
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #10: GFLOPs: 146.4541. Time: 709.8789 us. Best GFLOPs: 2248.9014
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #11: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(4) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + yy_3_init * T.int64(14) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(784))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(5)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + yy_3 * T.int64(14) + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 8, 16, 2, 2])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 14])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[1, 4, 7, 1, 1])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[64, 1, 2])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l103, l104, l105, l106, l107 = sch.get_loops(block=b75)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 112, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115 = sch.get_loops(block=b88)
l116, l117, l118 = sch.split(loop=l115, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l118)
sch.bind(loop=l117, thread_axis="threadIdx.x")
b119 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b119, ann_key="meta_schedule.unroll_explicit")
b120, b121, b122, b123 = sch.get_child_blocks(b119)
l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b120)
l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b121)
l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155 = sch.get_loops(block=b122)
sch.annotate(block_or_loop=l138, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l138, ann_key="pragma_unroll_explicit", ann_val=1)
l156, l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b123)
b163 = sch.get_block(name="conv2d_nchw", func_name="main")
l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b163)
b182 = sch.decompose_reduction(block=b163, loop=l167)
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #12: GFLOPs: 2386.0096. Time: 43.5726 us. Best GFLOPs: 2386.0096
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #13: GFLOPs: 910.5502. Time: 114.1779 us. Best GFLOPs: 2386.0096
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #14: GFLOPs: 4758.1188. Time: 21.8500 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #15: GFLOPs: 49.4786. Time: 2101.2053 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #16: GFLOPs: 40.2463. Time: 2583.2107 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #17: GFLOPs: 2775.8327. Time: 37.4535 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #18: GFLOPs: 887.9601. Time: 117.0826 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #19: GFLOPs: 69.9902. Time: 1485.4174 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #20: GFLOPs: 1636.9238. Time: 63.5122 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #21: GFLOPs: 2145.4790. Time: 48.4576 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #22: GFLOPs: 2200.9244. Time: 47.2368 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #23: GFLOPs: 616.4503. Time: 168.6505 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #24: GFLOPs: 191.0119. Time: 544.2837 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #25: GFLOPs: 885.8025. Time: 117.3678 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #26: GFLOPs: 61.5937. Time: 1687.9104 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #27: GFLOPs: 785.2735. Time: 132.3929 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #28: GFLOPs: 1265.8047. Time: 82.1333 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #29: GFLOPs: 272.6954. Time: 381.2483 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #30: GFLOPs: 1776.1366. Time: 58.5342 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #31: GFLOPs: 2454.6962. Time: 42.3534 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #32: GFLOPs: 29.3472. Time: 3542.5810 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #33: GFLOPs: 85.4699. Time: 1216.3887 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #34: GFLOPs: 15.7550. Time: 6598.8478 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #35: GFLOPs: 27.6144. Time: 3764.8688 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #36: GFLOPs: 21.4386. Time: 4849.4200 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #37: GFLOPs: 501.7101. Time: 207.2206 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #38: GFLOPs: 687.6622. Time: 151.1857 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #39: GFLOPs: 1075.5940. Time: 96.6579 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #40: GFLOPs: 19.7455. Time: 5265.2463 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #41: GFLOPs: 19.8084. Time: 5248.5118 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #42: GFLOPs: 1744.9357. Time: 59.5808 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #43: GFLOPs: 517.2535. Time: 200.9936 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #44: GFLOPs: 19.1606. Time: 5425.9603 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #45: GFLOPs: 116.1232. Time: 895.2960 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #46: GFLOPs: 119.9416. Time: 866.7938 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #47: GFLOPs: 15.6587. Time: 6639.4238 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #48: GFLOPs: 16.6014. Time: 6262.4001 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #49: GFLOPs: 539.8461. Time: 192.5821 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #50: GFLOPs: 18.8618. Time: 5511.9223 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #51: GFLOPs: 74.2096. Time: 1400.9600 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #52: GFLOPs: 34.2096. Time: 3039.0458 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #53: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(4) + ff_3_init * T.int64(4) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + yy_3_init * T.int64(14) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(392))
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(392) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(784))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(5)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(112), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(4) + ff_3 * T.int64(4) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + yy_3 * T.int64(14) + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 8, 16, 1, 4])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 14])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[1, 4, 7, 1, 1])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[64, 1, 2])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l103, l104, l105, l106, l107 = sch.get_loops(block=b75)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 112, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115 = sch.get_loops(block=b88)
l116, l117, l118 = sch.split(loop=l115, factors=[None, 112, 2], preserve_unit_iters=True)
sch.vectorize(loop=l118)
sch.bind(loop=l117, thread_axis="threadIdx.x")
b119 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b119, ann_key="meta_schedule.unroll_explicit")
b120, b121, b122, b123 = sch.get_child_blocks(b119)
l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b120)
l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b121)
l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155 = sch.get_loops(block=b122)
sch.annotate(block_or_loop=l138, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l138, ann_key="pragma_unroll_explicit", ann_val=1)
l156, l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b123)
b163 = sch.get_block(name="conv2d_nchw", func_name="main")
l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b163)
b182 = sch.decompose_reduction(block=b163, loop=l167)
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #54: GFLOPs: 32.7996. Time: 3169.6961 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #55: GFLOPs: 310.6862. Time: 334.6292 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #56: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(224), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(224), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(256) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(28) * T.int64(2) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) // T.int64(2) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(28) // T.int64(7) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(224), thread="threadIdx.x"):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1) // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1) % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1) % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(224), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(256) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(4))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(448) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(256) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(28) * T.int64(2) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) // T.int64(2) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(28) // T.int64(7) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(4) + rc_1 * T.int64(4) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(256) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(28) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) // T.int64(2) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(28) // T.int64(7) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 16, 8, 2, 1])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 4, 1, 1])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[2, 2, 7, 1, 1])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[32, 1, 4])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l103, l104, l105, l106, l107 = sch.get_loops(block=b75)
l108, l109 = sch.split(loop=l107, factors=[None, 224], preserve_unit_iters=True)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114 = sch.get_loops(block=b88)
l115, l116, l117 = sch.split(loop=l114, factors=[None, 224, 2], preserve_unit_iters=True)
sch.vectorize(loop=l117)
sch.bind(loop=l116, thread_axis="threadIdx.x")
b118 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b118, ann_key="meta_schedule.unroll_explicit")
b119, b120, b121, b122 = sch.get_child_blocks(b118)
l123, l124, l125, l126, l127, l128 = sch.get_loops(block=b119)
l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b120)
l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153 = sch.get_loops(block=b121)
sch.annotate(block_or_loop=l136, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l136, ann_key="pragma_unroll_explicit", ann_val=1)
l154, l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b122)
b161 = sch.get_block(name="conv2d_nchw", func_name="main")
l162, l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b161)
b180 = sch.decompose_reduction(block=b161, loop=l165)
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #57: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  408: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  407: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  406: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  405: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  404: tvm::transform::Pass::operator()(tvm::IRModule) const
  403: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  402: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  401: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  400: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  399: _ZN3tvm7runtime13PackedFun
  398: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  397: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  396: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  395: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  394: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  393: _ZZN3tvm3tir11StmtFunctorI
  392: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  391: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  390: _ZZN3tvm3tir11StmtFunctorI
  389: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  388: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  387: _ZZN3tvm3tir11StmtFunctorI
  386: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  385: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  384: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  383: _ZZN3tvm3tir11StmtFunctorI
  382: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  381: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  380: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  379: _ZZN3tvm3tir11StmtFunctorI
  378: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  377: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  376: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  375: _ZZN3tvm3tir11StmtFunctorI
  374: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  373: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  372: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  371: _ZZN3tvm3tir11StmtFunctorI
  370: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  369: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  368: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  367: _ZZN3tvm3tir11StmtFunctorI
  366: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  365: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  364: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  363: _ZZN3tvm3tir11StmtFunctorI
  362: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  361: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  360: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  359: _ZZN3tvm3tir11StmtFunctorI
  358: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  357: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  356: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  355: _ZZN3tvm3tir11StmtFunctorI
  354: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  353: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  352: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  351: _ZZN3tvm3tir11StmtFunctorI
  350: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  349: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  348: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  347: _ZZN3tvm3tir11StmtFunctorI
  346: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  345: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  344: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  343: _ZZN3tvm3tir11StmtFunctorI
  342: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  341: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  340: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  339: _ZZN3tvm3tir11StmtFunctorI
  338: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  337: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  336: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  335: _ZZN3tvm3tir11StmtFunctorI
  334: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  333: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  332: _ZZN3tvm3tir11StmtFunctorI
  331: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  330: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  329: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  328: _ZZN3tvm3tir11StmtFunctorI
  327: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  326: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  325: _ZZN3tvm3tir11StmtFunctorI
  324: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  323: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  322: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  321: _ZZN3tvm3tir11StmtFunctorI
  320: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  319: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  318: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  317: _ZZN3tvm3tir11StmtFunctorI
  316: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  315: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  314: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  313: _ZZN3tvm3tir11StmtFunctorI
  312: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  311: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  310: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  309: _ZZN3tvm3tir11StmtFunctorI
  308: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  307: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  306: _ZZN3tvm3tir11StmtFunctorI
  305: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  304: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  303: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  302: _ZZN3tvm3tir11StmtFunctorI
  301: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  300: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  299: _ZZN3tvm3tir11StmtFunctorI
  298: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  297: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  296: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  295: _ZZN3tvm3tir11StmtFunctorI
  294: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  293: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  292: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  291: _ZZN3tvm3tir11StmtFunctorI
  290: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  289: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  288: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  287: _ZZN3tvm3tir11StmtFunctorI
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  278: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  277: _ZZN3tvm3tir11StmtFunctorI
  276: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  275: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  274: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  273: _ZZN3tvm3tir11StmtFunctorI
  272: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  256: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  255: _ZZN3tvm3tir11StmtFunctorI
  254: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  253: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  252: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  251: _ZZN3tvm3tir11StmtFunctorI
  250: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  249: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  248: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  247: _ZZN3tvm3tir11StmtFunctorI
  246: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  241: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  240: _ZZN3tvm3tir11StmtFunctorI
  239: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  234: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  233: _ZZN3tvm3tir11StmtFunctorI
  232: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  231: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  230: _ZZN3tvm3tir11StmtFunctorI
  229: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  228: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  227: _ZZN3tvm3tir11StmtFunctorI
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  219: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  218: _ZZN3tvm3tir11StmtFunctorI
  217: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  208: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  207: _ZZN3tvm3tir11StmtFunctorI
  206: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  205: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  204: _ZZN3tvm3tir11StmtFunctorI
  203: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  202: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  201: _ZZN3tvm3tir11StmtFunctorI
  200: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  199: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  198: _ZZN3tvm3tir11StmtFunctorI
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorIFNS
  188: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  187: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  186: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  185: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  184: _ZZN3tvm3tir11StmtFunctorI
  183: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  182: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  181: _ZZN3tvm3tir11StmtFunctorI
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorI
  177: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  176: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  175: _ZZN3tvm3tir11StmtFunctorI
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorIFNS
  156: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  155: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  154: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  153: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  152: _ZZN3tvm3tir11StmtFunctorI
  151: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  150: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  149: _ZZN3tvm3tir11StmtFunctorI
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorIFNS
  121: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  120: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorI
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorIFNS
  86: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  85: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorI
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorIFNS
  51: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  50: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorI
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused * T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), xx_3_init * T.int64(14) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(784))
                                        v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1568))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused * T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), xx_3 * T.int64(14) + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + rc_1 + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(28)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 128, 4, 1])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 2, 1])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[1, 1, 1, 2, 14])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[64, 2, 1])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l103, l104, l105, l106, l107 = sch.get_loops(block=b75)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 128, 2], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115 = sch.get_loops(block=b88)
l116, l117, l118 = sch.split(loop=l115, factors=[None, 128, 4], preserve_unit_iters=True)
sch.vectorize(loop=l118)
sch.bind(loop=l117, thread_axis="threadIdx.x")
b119 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b119, ann_key="meta_schedule.unroll_explicit")
b120, b121, b122, b123 = sch.get_child_blocks(b119)
l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b120)
l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b121)
l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155 = sch.get_loops(block=b122)
sch.annotate(block_or_loop=l138, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l138, ann_key="pragma_unroll_explicit", ann_val=1)
l156, l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b123)
b163 = sch.get_block(name="conv2d_nchw", func_name="main")
l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b163)
b182 = sch.decompose_reduction(block=b163, loop=l167)
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #58: GFLOPs: 1413.6718. Time: 73.5423 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #59: GFLOPs: 23.6775. Time: 4390.8675 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #60: GFLOPs: 443.8764. Time: 234.2199 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #61: GFLOPs: 140.6661. Time: 739.0884 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #62: GFLOPs: 558.0461. Time: 186.3012 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #63: GFLOPs: 41.0069. Time: 2535.2960 us. Best GFLOPs: 4758.1188
2024-04-29 18:04:48 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #64: GFLOPs: 933.5087. Time: 111.3698 us. Best GFLOPs: 4758.1188
2024-04-29 18:31:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:31:03 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-29 18:31:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 18:31:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 835 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 18:31:07 [INFO] [evolutionary_search.cc:723] Sampled 73 candidate(s)
2024-04-29 18:31:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 18:31:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 18:31:23 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 18:31:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 18:31:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.1460  2.0930  2.0501  2.0410  2.0284  2.0275  2.0216  2.0176  2.0176  2.0148  2.0116  1.9897  1.9893  1.9838  1.9806  1.9601
[17 : 32]:	1.9601  1.9587  1.9366  1.9207  1.8277  1.7668  1.7668  1.7626  1.7485  1.6925  1.6816  1.5985  1.5963  1.5835  1.5816  1.5638
[33 : 48]:	1.5223  1.5006  1.4783  1.4587  1.4532  1.4080  1.3364  1.3243  1.3227  1.3202  1.3161  1.3117  1.3058  1.2994  1.2984  1.2978
[49 : 64]:	1.2976  1.2936  1.2822  1.2821  1.2821  1.2717  1.2627  1.2522  1.2239  1.2177  1.2177  1.2163  1.2114  1.2057  1.1970  1.1954
2024-04-29 18:31:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:31:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #65: GFLOPs: 353.7011. Time: 293.9337 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #66: GFLOPs: 307.9160. Time: 337.6397 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #67: GFLOPs: 285.0681. Time: 364.7012 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #68: GFLOPs: 115.3845. Time: 901.0277 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #69: GFLOPs: 353.4056. Time: 294.1795 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #70: GFLOPs: 116.5553. Time: 891.9776 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #71: GFLOPs: 269.7302. Time: 385.4395 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #72: GFLOPs: 385.8881. Time: 269.4166 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #73: GFLOPs: 387.6643. Time: 268.1822 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #74: GFLOPs: 113.7812. Time: 913.7245 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #75: GFLOPs: 115.2807. Time: 901.8396 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #76: GFLOPs: 115.7332. Time: 898.3131 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #77: GFLOPs: 113.7302. Time: 914.1341 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #78: GFLOPs: 113.7685. Time: 913.8269 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #79: GFLOPs: 115.1640. Time: 902.7528 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #80: GFLOPs: 370.3165. Time: 280.7455 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #81: GFLOPs: 345.4624. Time: 300.9435 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #82: GFLOPs: 115.9456. Time: 896.6674 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #83: GFLOPs: 379.0020. Time: 274.3116 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #84: GFLOPs: 284.7629. Time: 365.0920 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #85: GFLOPs: 115.2724. Time: 901.9041 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #86: GFLOPs: 2183.1553. Time: 47.6213 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #87: GFLOPs: 2282.7802. Time: 45.5430 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #88: GFLOPs: 2235.3741. Time: 46.5088 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #89: GFLOPs: 470.2823. Time: 221.0687 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #90: GFLOPs: 4462.2107. Time: 23.2989 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #91: GFLOPs: 464.3867. Time: 223.8752 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #92: GFLOPs: 484.3134. Time: 214.6640 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #93: GFLOPs: 2324.7632. Time: 44.7205 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #94: GFLOPs: 485.8139. Time: 214.0010 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #95: GFLOPs: 2283.2780. Time: 45.5331 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #96: GFLOPs: 456.2346. Time: 227.8755 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #97: GFLOPs: 2409.3406. Time: 43.1507 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #98: GFLOPs: 1865.7630. Time: 55.7223 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #99: GFLOPs: 722.0720. Time: 143.9810 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #100: GFLOPs: 639.2082. Time: 162.6460 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #101: GFLOPs: 2622.9599. Time: 39.6364 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #102: GFLOPs: 2373.7088. Time: 43.7984 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #103: GFLOPs: 1739.7442. Time: 59.7586 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #104: GFLOPs: 3580.0312. Time: 29.0402 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #105: GFLOPs: 1832.3424. Time: 56.7387 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #106: GFLOPs: 1773.8657. Time: 58.6091 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #107: GFLOPs: 1926.7197. Time: 53.9594 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #108: GFLOPs: 1815.3111. Time: 57.2710 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #109: GFLOPs: 1936.1853. Time: 53.6956 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #110: GFLOPs: 1945.3580. Time: 53.4424 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #111: GFLOPs: 2610.8430. Time: 39.8203 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #112: GFLOPs: 1889.3270. Time: 55.0274 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #113: GFLOPs: 1921.1109. Time: 54.1170 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #114: GFLOPs: 750.1078. Time: 138.5996 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #115: GFLOPs: 1822.0481. Time: 57.0592 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #116: GFLOPs: 1540.0447. Time: 67.5076 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #117: GFLOPs: 1925.8680. Time: 53.9833 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #118: GFLOPs: 1820.0557. Time: 57.1217 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #119: GFLOPs: 965.5063. Time: 107.6789 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #120: GFLOPs: 1914.4123. Time: 54.3063 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #121: GFLOPs: 725.9885. Time: 143.2043 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #122: GFLOPs: 1583.8266. Time: 65.6414 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #123: GFLOPs: 697.0241. Time: 149.1551 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #124: GFLOPs: 785.8103. Time: 132.3025 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #125: GFLOPs: 725.9514. Time: 143.2116 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #126: GFLOPs: 987.1084. Time: 105.3224 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #127: GFLOPs: 904.2224. Time: 114.9769 us. Best GFLOPs: 4758.1188
2024-04-29 18:32:43 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #128: GFLOPs: 193.5845. Time: 537.0505 us. Best GFLOPs: 4758.1188
2024-04-29 19:10:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:10:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 19:10:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 380 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:10:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 756 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:10:06 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2024-04-29 19:10:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:10:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:10:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:10:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:10:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1791  1.1763  1.1754  1.1708  1.1647  1.1624  1.1596  1.1362  1.1326  1.1318  1.1206  1.1019  1.1007  1.0937  1.0885  1.0871
[17 : 32]:	1.0853  1.0796  1.0795  1.0786  1.0754  1.0753  1.0581  1.0565  1.0564  1.0551  1.0547  1.0469  1.0461  1.0456  1.0455  1.0435
[33 : 48]:	1.0406  1.0397  1.0372  1.0330  1.0325  1.0293  1.0285  1.0249  1.0239  1.0191  1.0146  1.0127  1.0122  1.0041  1.0027  1.0026
[49 : 64]:	1.0026  1.0024  1.0015  0.9959  0.9958  0.9949  0.9903  0.9865  0.9831  0.9804  0.9794  0.9784  0.9777  0.9769  0.9762  0.9754
2024-04-29 19:10:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:10:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #129: GFLOPs: 4089.1885. Time: 25.4243 us. Best GFLOPs: 4758.1188
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #130: GFLOPs: 4086.9965. Time: 25.4379 us. Best GFLOPs: 4758.1188
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #131: GFLOPs: 4089.7435. Time: 25.4208 us. Best GFLOPs: 4758.1188
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #132: GFLOPs: 4773.6877. Time: 21.7787 us. Best GFLOPs: 4773.6877
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #133: GFLOPs: 1416.8043. Time: 73.3797 us. Best GFLOPs: 4773.6877
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #134: GFLOPs: 3913.2776. Time: 26.5672 us. Best GFLOPs: 4773.6877
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #135: GFLOPs: 4570.5089. Time: 22.7468 us. Best GFLOPs: 4773.6877
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #136: GFLOPs: 4146.0882. Time: 25.0754 us. Best GFLOPs: 4773.6877
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #137: GFLOPs: 4139.0311. Time: 25.1181 us. Best GFLOPs: 4773.6877
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #138: GFLOPs: 4842.3583. Time: 21.4698 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #139: GFLOPs: 4450.6296. Time: 23.3595 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #140: GFLOPs: 4474.5543. Time: 23.2346 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #141: GFLOPs: 4359.5012. Time: 23.8478 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #142: GFLOPs: 4799.8136. Time: 21.6601 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #143: GFLOPs: 4367.9325. Time: 23.8018 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #144: GFLOPs: 4097.6958. Time: 25.3715 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #145: GFLOPs: 4791.9488. Time: 21.6957 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #146: GFLOPs: 4759.7951. Time: 21.8423 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #147: GFLOPs: 1296.3442. Time: 80.1984 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #148: GFLOPs: 4461.3954. Time: 23.3032 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #149: GFLOPs: 4697.4865. Time: 22.1320 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #150: GFLOPs: 2961.9938. Time: 35.0996 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #151: GFLOPs: 4752.5745. Time: 21.8754 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #152: GFLOPs: 4615.6219. Time: 22.5245 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #153: GFLOPs: 3095.7841. Time: 33.5827 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #154: GFLOPs: 1377.0381. Time: 75.4988 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #155: GFLOPs: 4835.2522. Time: 21.5014 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #156: GFLOPs: 4581.6915. Time: 22.6913 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #157: GFLOPs: 3035.4931. Time: 34.2497 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #158: GFLOPs: 1301.8087. Time: 79.8617 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #159: GFLOPs: 3035.3523. Time: 34.2513 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #160: GFLOPs: 4735.2483. Time: 21.9555 us. Best GFLOPs: 4842.3583
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #161: GFLOPs: 4898.2567. Time: 21.2248 us. Best GFLOPs: 4898.2567
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #162: GFLOPs: 4900.7018. Time: 21.2142 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #163: GFLOPs: 4521.2485. Time: 22.9947 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #164: GFLOPs: 2903.6997. Time: 35.8042 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #165: GFLOPs: 4702.4017. Time: 22.1088 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #166: GFLOPs: 4525.2327. Time: 22.9744 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #167: GFLOPs: 4444.9130. Time: 23.3896 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #168: GFLOPs: 1005.0796. Time: 103.4392 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #169: GFLOPs: 4730.3351. Time: 21.9783 us. Best GFLOPs: 4900.7018
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #170: GFLOPs: 4900.8249. Time: 21.2137 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #171: GFLOPs: 1583.6733. Time: 65.6478 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #172: GFLOPs: 2378.9879. Time: 43.7012 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #173: GFLOPs: 1387.0410. Time: 74.9543 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #174: GFLOPs: 4784.4013. Time: 21.7299 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #175: GFLOPs: 1346.1129. Time: 77.2332 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #176: GFLOPs: 4764.8795. Time: 21.8190 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #177: GFLOPs: 4793.1820. Time: 21.6901 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #178: GFLOPs: 3002.3410. Time: 34.6279 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #179: GFLOPs: 4899.9686. Time: 21.2174 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #180: GFLOPs: 541.3284. Time: 192.0547 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #181: GFLOPs: 4573.4273. Time: 22.7323 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #182: GFLOPs: 546.9949. Time: 190.0652 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #183: GFLOPs: 4457.4922. Time: 23.3236 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #184: GFLOPs: 1549.5367. Time: 67.0940 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #185: GFLOPs: 1551.1054. Time: 67.0262 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #186: GFLOPs: 542.3570. Time: 191.6905 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #187: GFLOPs: 3257.8093. Time: 31.9124 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #188: GFLOPs: 4519.4782. Time: 23.0037 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #189: GFLOPs: 1566.2873. Time: 66.3765 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #190: GFLOPs: 24.7240. Time: 4205.0132 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #191: GFLOPs: 2254.7572. Time: 46.1090 us. Best GFLOPs: 4900.8249
2024-04-29 19:11:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #192: GFLOPs: 88.9381. Time: 1168.9555 us. Best GFLOPs: 4900.8249
2024-04-29 19:51:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:51:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 19:51:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 381 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:51:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 759 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:51:46 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-04-29 19:51:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:51:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:52:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:52:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 19:52:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1450  1.1082  1.0940  1.0848  1.0760  1.0325  1.0316  1.0301  1.0189  1.0083  0.9927  0.9908  0.9895  0.9890  0.9858  0.9805
[17 : 32]:	0.9761  0.9746  0.9721  0.9716  0.9699  0.9693  0.9647  0.9639  0.9602  0.9560  0.9552  0.9518  0.9517  0.9515  0.9511  0.9484
[33 : 48]:	0.9483  0.9482  0.9482  0.9480  0.9462  0.9446  0.9430  0.9427  0.9423  0.9412  0.9408  0.9403  0.9402  0.9387  0.9377  0.9363
[49 : 64]:	0.9358  0.9327  0.9325  0.9315  0.9315  0.9288  0.9284  0.9262  0.9258  0.9228  0.9209  0.9208  0.9204  0.9198  0.9196  0.9193
2024-04-29 19:52:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:52:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #193: GFLOPs: 4808.2960. Time: 21.6219 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #194: GFLOPs: 4808.3038. Time: 21.6219 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #195: GFLOPs: 1794.3675. Time: 57.9395 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #196: GFLOPs: 4577.8426. Time: 22.7104 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #197: GFLOPs: 4767.3208. Time: 21.8078 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #198: GFLOPs: 3475.4525. Time: 29.9140 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #199: GFLOPs: 4810.5466. Time: 21.6118 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #200: GFLOPs: 4788.7717. Time: 21.7101 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #201: GFLOPs: 4755.7397. Time: 21.8609 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #202: GFLOPs: 4563.8154. Time: 22.7802 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #203: GFLOPs: 4758.2809. Time: 21.8492 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #204: GFLOPs: 4615.3430. Time: 22.5259 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #205: GFLOPs: 4470.2583. Time: 23.2570 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #206: GFLOPs: 4799.5857. Time: 21.6612 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #207: GFLOPs: 4463.0893. Time: 23.2943 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #208: GFLOPs: 4462.6936. Time: 23.2964 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #209: GFLOPs: 4600.8719. Time: 22.5967 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #210: GFLOPs: 4571.9635. Time: 22.7396 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #211: GFLOPs: 4284.2555. Time: 24.2667 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #212: GFLOPs: 4787.9395. Time: 21.7139 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #213: GFLOPs: 4462.9956. Time: 23.2948 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #214: GFLOPs: 4572.0822. Time: 22.7390 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #215: GFLOPs: 4799.7799. Time: 21.6603 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #216: GFLOPs: 4443.4399. Time: 23.3973 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #217: GFLOPs: 4535.8519. Time: 22.9206 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #218: GFLOPs: 4788.8594. Time: 21.7097 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #219: GFLOPs: 4489.5123. Time: 23.1572 us. Best GFLOPs: 4900.8249
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #220: GFLOPs: 4954.3103. Time: 20.9847 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #221: GFLOPs: 4484.1521. Time: 23.1849 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #222: GFLOPs: 4778.6509. Time: 21.7561 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #223: GFLOPs: 3476.4226. Time: 29.9056 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #224: GFLOPs: 4515.8790. Time: 23.0220 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #225: GFLOPs: 4464.5599. Time: 23.2867 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #226: GFLOPs: 4438.5502. Time: 23.4231 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #227: GFLOPs: 3494.5115. Time: 29.7508 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #228: GFLOPs: 4449.7730. Time: 23.3640 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #229: GFLOPs: 4867.6306. Time: 21.3584 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #230: GFLOPs: 4533.9865. Time: 22.9301 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #231: GFLOPs: 4525.3824. Time: 22.9737 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #232: GFLOPs: 3177.8721. Time: 32.7152 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #233: GFLOPs: 4436.9333. Time: 23.4317 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #234: GFLOPs: 4436.9861. Time: 23.4314 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #235: GFLOPs: 4867.7159. Time: 21.3580 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #236: GFLOPs: 4438.0252. Time: 23.4259 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #237: GFLOPs: 4535.3901. Time: 22.9230 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #238: GFLOPs: 3496.1976. Time: 29.7365 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #239: GFLOPs: 4526.1390. Time: 22.9698 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #240: GFLOPs: 4445.0891. Time: 23.3887 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #241: GFLOPs: 4093.0953. Time: 25.4000 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #242: GFLOPs: 3481.3962. Time: 29.8629 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #243: GFLOPs: 4778.4922. Time: 21.7568 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #244: GFLOPs: 4758.8328. Time: 21.8467 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #245: GFLOPs: 4778.2630. Time: 21.7578 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #246: GFLOPs: 4897.4610. Time: 21.2283 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #247: GFLOPs: 4629.2954. Time: 22.4580 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #248: GFLOPs: 4608.6344. Time: 22.5587 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #249: GFLOPs: 4534.8588. Time: 22.9257 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #250: GFLOPs: 4423.2266. Time: 23.5043 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #251: GFLOPs: 4896.7601. Time: 21.2313 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #252: GFLOPs: 4867.7523. Time: 21.3578 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #253: GFLOPs: 4582.7647. Time: 22.6860 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #254: GFLOPs: 382.3747. Time: 271.8921 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #255: GFLOPs: 1595.6772. Time: 65.1539 us. Best GFLOPs: 4954.3103
2024-04-29 19:53:20 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #256: GFLOPs: 780.2744. Time: 133.2412 us. Best GFLOPs: 4954.3103
2024-04-29 20:22:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:22:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:22:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 375 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:22:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 757 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:22:18 [INFO] [evolutionary_search.cc:723] Sampled 63 candidate(s)
2024-04-29 20:22:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:22:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:22:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:22:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:22:41 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1143  1.1139  1.1124  1.1085  1.1069  1.0831  1.0800  0.9747  0.9729  0.9727  0.9726  0.9687  0.9649  0.9639  0.9637  0.9636
[17 : 32]:	0.9624  0.9585  0.9584  0.9577  0.9577  0.9561  0.9510  0.9509  0.9499  0.9497  0.9495  0.9491  0.9484  0.9478  0.9476  0.9458
[33 : 48]:	0.9434  0.9420  0.9418  0.9393  0.9390  0.9389  0.9379  0.9375  0.9375  0.9369  0.9365  0.9331  0.9328  0.9328  0.9328  0.9327
[49 : 64]:	0.9322  0.9310  0.9300  0.9296  0.9286  0.9281  0.9270  0.9265  0.9240  0.9240  0.9229  0.9222  0.9216  0.9215  0.9213  0.9203
2024-04-29 20:22:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:22:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #257: GFLOPs: 3263.5741. Time: 31.8561 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #258: GFLOPs: 3196.8225. Time: 32.5213 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #259: GFLOPs: 3279.3600. Time: 31.7027 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #260: GFLOPs: 3103.6392. Time: 33.4977 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #261: GFLOPs: 3196.7615. Time: 32.5219 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #262: GFLOPs: 3351.4177. Time: 31.0211 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #263: GFLOPs: 3421.7203. Time: 30.3837 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #264: GFLOPs: 2883.6928. Time: 36.0526 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #265: GFLOPs: 4076.4176. Time: 25.5039 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #266: GFLOPs: 4766.7749. Time: 21.8103 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #267: GFLOPs: 4803.1976. Time: 21.6449 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #268: GFLOPs: 2968.9904. Time: 35.0168 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #269: GFLOPs: 4722.2005. Time: 22.0161 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #270: GFLOPs: 4738.0231. Time: 21.9426 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #271: GFLOPs: 4779.4578. Time: 21.7524 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #272: GFLOPs: 4457.8221. Time: 23.3219 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #273: GFLOPs: 4862.1888. Time: 21.3823 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #274: GFLOPs: 4739.2210. Time: 21.9371 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #275: GFLOPs: 4411.6615. Time: 23.5659 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #276: GFLOPs: 4816.0927. Time: 21.5869 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #277: GFLOPs: 4102.8252. Time: 25.3398 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #278: GFLOPs: 4775.7492. Time: 21.7693 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #279: GFLOPs: 2721.4603. Time: 38.2018 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #280: GFLOPs: 4722.6542. Time: 22.0140 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #281: GFLOPs: 4409.7436. Time: 23.5761 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #282: GFLOPs: 4776.4903. Time: 21.7659 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #283: GFLOPs: 4775.8171. Time: 21.7690 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #284: GFLOPs: 4770.3090. Time: 21.7941 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #285: GFLOPs: 4863.4068. Time: 21.3769 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #286: GFLOPs: 4769.7535. Time: 21.7967 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #287: GFLOPs: 3259.9908. Time: 31.8911 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #288: GFLOPs: 4487.1131. Time: 23.1696 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #289: GFLOPs: 4409.7731. Time: 23.5760 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #290: GFLOPs: 4510.8090. Time: 23.0479 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #291: GFLOPs: 4474.7695. Time: 23.2335 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #292: GFLOPs: 4486.8571. Time: 23.1709 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #293: GFLOPs: 4765.8296. Time: 21.8146 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #294: GFLOPs: 4454.8239. Time: 23.3375 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #295: GFLOPs: 4558.5228. Time: 22.8067 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #296: GFLOPs: 4701.4509. Time: 22.1133 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #297: GFLOPs: 4570.4166. Time: 22.7473 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #298: GFLOPs: 3248.8583. Time: 32.0004 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #299: GFLOPs: 4508.2328. Time: 23.0611 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #300: GFLOPs: 3259.7050. Time: 31.8939 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #301: GFLOPs: 4507.9592. Time: 23.0625 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #302: GFLOPs: 4508.5671. Time: 23.0594 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #303: GFLOPs: 4412.1930. Time: 23.5630 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #304: GFLOPs: 4411.6562. Time: 23.5659 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #305: GFLOPs: 4455.1849. Time: 23.3357 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #306: GFLOPs: 4721.6251. Time: 22.0188 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #307: GFLOPs: 4433.8831. Time: 23.4478 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #308: GFLOPs: 4411.9255. Time: 23.5645 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #309: GFLOPs: 4455.0596. Time: 23.3363 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #310: GFLOPs: 2730.4605. Time: 38.0759 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #311: GFLOPs: 4642.3612. Time: 22.3948 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #312: GFLOPs: 4722.4137. Time: 22.0152 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #313: GFLOPs: 4469.2655. Time: 23.2621 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #314: GFLOPs: 4468.8645. Time: 23.2642 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #315: GFLOPs: 4503.1618. Time: 23.0870 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #316: GFLOPs: 4585.8330. Time: 22.6708 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #317: GFLOPs: 4486.4203. Time: 23.1732 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #318: GFLOPs: 211.3811. Time: 491.8353 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #319: GFLOPs: 890.9558. Time: 116.6889 us. Best GFLOPs: 4954.3103
2024-04-29 20:23:59 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #320: GFLOPs: 4484.7350. Time: 23.1819 us. Best GFLOPs: 4954.3103
2024-04-29 20:59:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:59:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:59:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 379 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:59:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 759 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:59:37 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-04-29 20:59:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:59:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:59:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:59:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 20:59:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4646  1.4606  1.4226  1.3897  1.3720  1.3434  1.3426  1.3188  1.3182  1.3104  1.3023  1.2960  1.2916  1.2827  1.2695  1.2642
[17 : 32]:	1.2635  1.2635  1.2552  1.2364  1.2352  1.2342  1.2235  1.2118  1.2078  1.2075  1.1927  1.1846  1.1781  1.1725  1.1571  1.1535
[33 : 48]:	1.1521  1.1510  1.1510  1.1502  1.1475  1.1448  1.1430  1.1429  1.1326  1.1325  1.1294  1.1261  1.1225  1.1172  1.1153  1.1148
[49 : 64]:	1.1146  1.1125  1.1097  1.1083  1.1070  1.1046  1.1038  1.1034  1.0996  1.0987  1.0972  1.0914  1.0899  1.0814  1.0800  1.0737
2024-04-29 20:59:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:59:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #321: GFLOPs: 4620.2045. Time: 22.5022 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #322: GFLOPs: 4776.3294. Time: 21.7666 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #323: GFLOPs: 3468.5403. Time: 29.9736 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #324: GFLOPs: 3491.2530. Time: 29.7786 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #325: GFLOPs: 2838.8811. Time: 36.6217 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #326: GFLOPs: 3315.0520. Time: 31.3614 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #327: GFLOPs: 3468.3395. Time: 29.9753 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #328: GFLOPs: 1816.1407. Time: 57.2448 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #329: GFLOPs: 1753.7870. Time: 59.2801 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #330: GFLOPs: 4710.3573. Time: 22.0715 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #331: GFLOPs: 3508.5138. Time: 29.6321 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #332: GFLOPs: 3315.3809. Time: 31.3583 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #333: GFLOPs: 1818.0055. Time: 57.1861 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #334: GFLOPs: 2801.4699. Time: 37.1108 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #335: GFLOPs: 4378.1835. Time: 23.7461 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #336: GFLOPs: 3315.4741. Time: 31.3574 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #337: GFLOPs: 3313.5921. Time: 31.3752 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #338: GFLOPs: 3315.5407. Time: 31.3568 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #339: GFLOPs: 3483.7144. Time: 29.8431 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #340: GFLOPs: 3487.8019. Time: 29.8081 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #341: GFLOPs: 1576.0825. Time: 65.9640 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #342: GFLOPs: 3481.7438. Time: 29.8599 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #343: GFLOPs: 1831.7077. Time: 56.7583 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #344: GFLOPs: 1815.8226. Time: 57.2549 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #345: GFLOPs: 4568.5520. Time: 22.7566 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #346: GFLOPs: 4624.5939. Time: 22.4808 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #347: GFLOPs: 1829.4224. Time: 56.8292 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #348: GFLOPs: 3424.5365. Time: 30.3588 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #349: GFLOPs: 3419.0472. Time: 30.4075 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #350: GFLOPs: 1814.0927. Time: 57.3095 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #351: GFLOPs: 3481.9897. Time: 29.8578 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #352: GFLOPs: 2641.4428. Time: 39.3590 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #353: GFLOPs: 2550.1876. Time: 40.7675 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #354: GFLOPs: 3038.6580. Time: 34.2140 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #355: GFLOPs: 3188.4614. Time: 32.6065 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #356: GFLOPs: 2726.4806. Time: 38.1315 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #357: GFLOPs: 3441.3755. Time: 30.2102 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #358: GFLOPs: 3395.7699. Time: 30.6159 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #359: GFLOPs: 2167.0330. Time: 47.9756 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #360: GFLOPs: 3230.7892. Time: 32.1793 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #361: GFLOPs: 3225.5808. Time: 32.2313 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #362: GFLOPs: 3766.5499. Time: 27.6021 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #363: GFLOPs: 1185.4498. Time: 87.7006 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #364: GFLOPs: 3486.6551. Time: 29.8179 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #365: GFLOPs: 3415.1266. Time: 30.4424 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #366: GFLOPs: 3258.7873. Time: 31.9029 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #367: GFLOPs: 2952.9326. Time: 35.2073 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #368: GFLOPs: 3614.1490. Time: 28.7660 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #369: GFLOPs: 3424.7980. Time: 30.3564 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #370: GFLOPs: 2640.3711. Time: 39.3750 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #371: GFLOPs: 1189.7864. Time: 87.3810 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #372: GFLOPs: 3305.3480. Time: 31.4535 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #373: GFLOPs: 2749.4985. Time: 37.8122 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #374: GFLOPs: 1261.5549. Time: 82.4099 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #375: GFLOPs: 1662.2324. Time: 62.5452 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #376: GFLOPs: 2474.7400. Time: 42.0103 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #377: GFLOPs: 1591.9815. Time: 65.3052 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #378: GFLOPs: 2626.0536. Time: 39.5897 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #379: GFLOPs: 3500.3630. Time: 29.7011 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #380: GFLOPs: 1999.4820. Time: 51.9958 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #381: GFLOPs: 2627.7193. Time: 39.5646 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #382: GFLOPs: 765.3158. Time: 135.8455 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #383: GFLOPs: 633.8103. Time: 164.0312 us. Best GFLOPs: 4954.3103
2024-04-29 21:01:29 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #384: GFLOPs: 30.0125. Time: 3464.0508 us. Best GFLOPs: 4954.3103
2024-04-29 21:45:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:45:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:45:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 383 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 21:45:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 768 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 21:45:19 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 21:45:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 21:45:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 21:45:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 21:45:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 21:45:42 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1489  1.1267  1.1114  1.1092  1.0853  1.0770  1.0715  1.0677  1.0459  1.0452  1.0402  1.0378  1.0378  1.0344  1.0274  1.0265
[17 : 32]:	1.0209  1.0102  1.0067  1.0021  0.9983  0.9972  0.9813  0.9746  0.9737  0.9728  0.9688  0.9677  0.9623  0.9621  0.9621  0.9594
[33 : 48]:	0.9587  0.9585  0.9552  0.9544  0.9474  0.9455  0.9442  0.9433  0.9419  0.9402  0.9385  0.9355  0.9345  0.9343  0.9333  0.9330
[49 : 64]:	0.9323  0.9320  0.9310  0.9308  0.9307  0.9303  0.9300  0.9291  0.9291  0.9289  0.9289  0.9287  0.9283  0.9282  0.9281  0.9281
2024-04-29 21:45:42 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:45:42 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #385: GFLOPs: 4446.7035. Time: 23.3802 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #386: GFLOPs: 4266.1869. Time: 24.3695 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #387: GFLOPs: 2793.9609. Time: 37.2105 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #388: GFLOPs: 2490.6766. Time: 41.7415 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #389: GFLOPs: 3861.3785. Time: 26.9242 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #390: GFLOPs: 3733.0016. Time: 27.8502 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #391: GFLOPs: 4782.9020. Time: 21.7367 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #392: GFLOPs: 4617.8118. Time: 22.5138 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #393: GFLOPs: 4111.8297. Time: 25.2843 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #394: GFLOPs: 3974.9141. Time: 26.1552 us. Best GFLOPs: 4954.3103
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #395: GFLOPs: 4991.4903. Time: 20.8284 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #396: GFLOPs: 4857.1916. Time: 21.4043 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #397: GFLOPs: 4698.2571. Time: 22.1283 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #398: GFLOPs: 3639.2510. Time: 28.5676 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #399: GFLOPs: 4312.3065. Time: 24.1088 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #400: GFLOPs: 3482.0179. Time: 29.8576 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #401: GFLOPs: 4233.1191. Time: 24.5598 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #402: GFLOPs: 4131.2900. Time: 25.1652 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #403: GFLOPs: 4233.4725. Time: 24.5578 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #404: GFLOPs: 4928.8326. Time: 21.0932 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #405: GFLOPs: 2544.4886. Time: 40.8588 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #406: GFLOPs: 3527.0239. Time: 29.4766 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #407: GFLOPs: 4755.5882. Time: 21.8616 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #408: GFLOPs: 4788.5448. Time: 21.7111 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #409: GFLOPs: 4755.0401. Time: 21.8641 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #410: GFLOPs: 4788.5448. Time: 21.7111 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #411: GFLOPs: 4745.9659. Time: 21.9059 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #412: GFLOPs: 4850.1023. Time: 21.4356 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #413: GFLOPs: 4803.2663. Time: 21.6446 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #414: GFLOPs: 4730.8486. Time: 21.9759 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #415: GFLOPs: 4738.7530. Time: 21.9392 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #416: GFLOPs: 4809.5466. Time: 21.6163 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #417: GFLOPs: 4838.4017. Time: 21.4874 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #418: GFLOPs: 4736.0501. Time: 21.9518 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #419: GFLOPs: 4839.0623. Time: 21.4845 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #420: GFLOPs: 4931.0972. Time: 21.0835 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #421: GFLOPs: 3432.4709. Time: 30.2886 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #422: GFLOPs: 1577.4050. Time: 65.9087 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #423: GFLOPs: 4549.6808. Time: 22.8510 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #424: GFLOPs: 4746.9145. Time: 21.9015 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #425: GFLOPs: 4774.5190. Time: 21.7749 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #426: GFLOPs: 4592.3073. Time: 22.6389 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #427: GFLOPs: 4471.5048. Time: 23.2505 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #428: GFLOPs: 1693.6810. Time: 61.3839 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #429: GFLOPs: 4872.8128. Time: 21.3357 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #430: GFLOPs: 4721.2401. Time: 22.0206 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #431: GFLOPs: 4784.3038. Time: 21.7304 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #432: GFLOPs: 4765.2832. Time: 21.8171 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #433: GFLOPs: 4497.6110. Time: 23.1155 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #434: GFLOPs: 4551.1556. Time: 22.8436 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #435: GFLOPs: 4779.4971. Time: 21.7522 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #436: GFLOPs: 4462.4094. Time: 23.2979 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #437: GFLOPs: 4471.2126. Time: 23.2520 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #438: GFLOPs: 4511.9803. Time: 23.0419 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #439: GFLOPs: 4779.6241. Time: 21.7516 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #440: GFLOPs: 4496.5591. Time: 23.1209 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #441: GFLOPs: 4508.1807. Time: 23.0613 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #442: GFLOPs: 4499.6459. Time: 23.1051 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #443: GFLOPs: 4498.2440. Time: 23.1123 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #444: GFLOPs: 4534.0399. Time: 22.9298 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #445: GFLOPs: 3624.5103. Time: 28.6838 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #446: GFLOPs: 2598.3976. Time: 40.0111 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #447: GFLOPs: 842.0585. Time: 123.4649 us. Best GFLOPs: 4991.4903
2024-04-29 21:47:06 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #448: GFLOPs: 12.7628. Time: 8145.9198 us. Best GFLOPs: 4991.4903
2024-04-29 22:08:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:08:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:08:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 381 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:08:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 767 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:08:07 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 22:08:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:08:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:08:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:08:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:08:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4972  1.1801  1.1621  1.1425  1.1261  1.1083  1.0970  1.0963  1.0698  1.0502  1.0474  1.0430  1.0186  1.0155  1.0133  1.0101
[17 : 32]:	1.0081  1.0012  1.0003  0.9926  0.9901  0.9875  0.9864  0.9832  0.9828  0.9794  0.9789  0.9785  0.9780  0.9749  0.9715  0.9714
[33 : 48]:	0.9712  0.9703  0.9696  0.9695  0.9689  0.9679  0.9672  0.9652  0.9652  0.9631  0.9612  0.9607  0.9601  0.9600  0.9593  0.9592
[49 : 64]:	0.9587  0.9579  0.9565  0.9563  0.9561  0.9558  0.9543  0.9542  0.9537  0.9523  0.9522  0.9519  0.9513  0.9496  0.9493  0.9493
2024-04-29 22:08:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:08:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #449: GFLOPs: 1706.8976. Time: 60.9086 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #450: GFLOPs: 3864.2029. Time: 26.9046 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #451: GFLOPs: 3894.7395. Time: 26.6936 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #452: GFLOPs: 3705.9120. Time: 28.0537 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #453: GFLOPs: 2984.1551. Time: 34.8389 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #454: GFLOPs: 2796.4648. Time: 37.1772 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #455: GFLOPs: 4759.4498. Time: 21.8438 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #456: GFLOPs: 4822.1061. Time: 21.5600 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #457: GFLOPs: 4822.6120. Time: 21.5578 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #458: GFLOPs: 2832.9540. Time: 36.6983 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #459: GFLOPs: 2291.3799. Time: 45.3721 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #460: GFLOPs: 2995.9147. Time: 34.7021 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #461: GFLOPs: 4594.5551. Time: 22.6278 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #462: GFLOPs: 4715.2955. Time: 22.0484 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #463: GFLOPs: 4720.1070. Time: 22.0259 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #464: GFLOPs: 4703.2628. Time: 22.1048 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #465: GFLOPs: 4451.7178. Time: 23.3538 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #466: GFLOPs: 2291.5146. Time: 45.3694 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #467: GFLOPs: 2700.9181. Time: 38.4923 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #468: GFLOPs: 4280.5015. Time: 24.2880 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #469: GFLOPs: 4238.5197. Time: 24.5285 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #470: GFLOPs: 4886.7601. Time: 21.2748 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #471: GFLOPs: 4226.4368. Time: 24.5987 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #472: GFLOPs: 3894.8504. Time: 26.6929 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #473: GFLOPs: 3917.5134. Time: 26.5384 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #474: GFLOPs: 4574.9374. Time: 22.7248 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #475: GFLOPs: 2605.2599. Time: 39.9057 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #476: GFLOPs: 4234.5674. Time: 24.5514 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #477: GFLOPs: 4229.4132. Time: 24.5813 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #478: GFLOPs: 4580.5921. Time: 22.6968 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #479: GFLOPs: 4229.0054. Time: 24.5837 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #480: GFLOPs: 2181.9781. Time: 47.6470 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #481: GFLOPs: 4811.7240. Time: 21.6065 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #482: GFLOPs: 4686.7247. Time: 22.1828 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #483: GFLOPs: 2495.7026. Time: 41.6575 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #484: GFLOPs: 4625.8532. Time: 22.4747 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #485: GFLOPs: 4173.6093. Time: 24.9100 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #486: GFLOPs: 4941.0197. Time: 21.0411 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #487: GFLOPs: 3916.4291. Time: 26.5458 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #488: GFLOPs: 4217.4575. Time: 24.6510 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #489: GFLOPs: 676.4782. Time: 153.6852 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #490: GFLOPs: 4686.5689. Time: 22.1835 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #491: GFLOPs: 4771.4964. Time: 21.7887 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #492: GFLOPs: 4889.3889. Time: 21.2633 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #493: GFLOPs: 4718.5961. Time: 22.0330 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #494: GFLOPs: 4773.7160. Time: 21.7786 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #495: GFLOPs: 673.5418. Time: 154.3552 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #496: GFLOPs: 4588.3614. Time: 22.6583 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #497: GFLOPs: 4229.7963. Time: 24.5791 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #498: GFLOPs: 4735.8270. Time: 21.9528 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #499: GFLOPs: 4841.3111. Time: 21.4745 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #500: GFLOPs: 4536.5582. Time: 22.9171 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #501: GFLOPs: 4790.4416. Time: 21.7025 us. Best GFLOPs: 4991.4903
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #502: GFLOPs: 4998.4571. Time: 20.7994 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #503: GFLOPs: 4756.5828. Time: 21.8570 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #504: GFLOPs: 4438.3600. Time: 23.4241 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #505: GFLOPs: 4896.6286. Time: 21.2319 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #506: GFLOPs: 4845.9122. Time: 21.4541 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #507: GFLOPs: 4843.7556. Time: 21.4636 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #508: GFLOPs: 4812.4841. Time: 21.6031 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #509: GFLOPs: 4684.0510. Time: 22.1955 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #510: GFLOPs: 5.3286. Time: 19510.6137 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #511: GFLOPs: 13.5756. Time: 7658.2036 us. Best GFLOPs: 4998.4571
2024-04-29 22:09:50 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #512: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  408: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  407: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  406: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  405: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  404: tvm::transform::Pass::operator()(tvm::IRModule) const
  403: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  402: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  401: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  400: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  399: _ZN3tvm7runtime13PackedFun
  398: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  397: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  396: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  395: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  394: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  393: _ZZN3tvm3tir11StmtFunctorI
  392: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  391: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  390: _ZZN3tvm3tir11StmtFunctorI
  389: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  388: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  387: _ZZN3tvm3tir11StmtFunctorI
  386: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  385: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  384: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  383: _ZZN3tvm3tir11StmtFunctorI
  382: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  381: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  380: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  379: _ZZN3tvm3tir11StmtFunctorI
  378: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  377: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  376: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  375: _ZZN3tvm3tir11StmtFunctorI
  374: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  373: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  372: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  371: _ZZN3tvm3tir11StmtFunctorI
  370: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  369: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  368: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  367: _ZZN3tvm3tir11StmtFunctorI
  366: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  365: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  364: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  363: _ZZN3tvm3tir11StmtFunctorI
  362: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  361: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  360: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  359: _ZZN3tvm3tir11StmtFunctorI
  358: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  357: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  356: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  355: _ZZN3tvm3tir11StmtFunctorI
  354: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  353: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  352: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  351: _ZZN3tvm3tir11StmtFunctorI
  350: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  349: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  348: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  347: _ZZN3tvm3tir11StmtFunctorI
  346: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  345: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  344: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  343: _ZZN3tvm3tir11StmtFunctorI
  342: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  341: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  340: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  339: _ZZN3tvm3tir11StmtFunctorI
  338: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  337: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  336: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  335: _ZZN3tvm3tir11StmtFunctorI
  334: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  333: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  332: _ZZN3tvm3tir11StmtFunctorI
  331: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  330: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  329: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  328: _ZZN3tvm3tir11StmtFunctorI
  327: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  326: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  325: _ZZN3tvm3tir11StmtFunctorI
  324: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  323: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  322: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  321: _ZZN3tvm3tir11StmtFunctorI
  320: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  319: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  318: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  317: _ZZN3tvm3tir11StmtFunctorI
  316: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  315: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  314: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  313: _ZZN3tvm3tir11StmtFunctorI
  312: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  311: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  310: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  309: _ZZN3tvm3tir11StmtFunctorI
  308: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  307: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  306: _ZZN3tvm3tir11StmtFunctorI
  305: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  304: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  303: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  302: _ZZN3tvm3tir11StmtFunctorI
  301: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  300: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  299: _ZZN3tvm3tir11StmtFunctorI
  298: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  297: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  296: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  295: _ZZN3tvm3tir11StmtFunctorI
  294: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  293: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  292: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  291: _ZZN3tvm3tir11StmtFunctorI
  290: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  289: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  288: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  287: _ZZN3tvm3tir11StmtFunctorI
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  278: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  277: _ZZN3tvm3tir11StmtFunctorI
  276: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  275: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  274: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  273: _ZZN3tvm3tir11StmtFunctorI
  272: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  256: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  255: _ZZN3tvm3tir11StmtFunctorI
  254: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  253: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  252: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  251: _ZZN3tvm3tir11StmtFunctorI
  250: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  249: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  248: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  247: _ZZN3tvm3tir11StmtFunctorI
  246: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  241: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  240: _ZZN3tvm3tir11StmtFunctorI
  239: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  234: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  233: _ZZN3tvm3tir11StmtFunctorI
  232: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  231: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  230: _ZZN3tvm3tir11StmtFunctorI
  229: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  228: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  227: _ZZN3tvm3tir11StmtFunctorI
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  219: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  218: _ZZN3tvm3tir11StmtFunctorI
  217: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  208: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  207: _ZZN3tvm3tir11StmtFunctorI
  206: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  205: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  204: _ZZN3tvm3tir11StmtFunctorI
  203: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  202: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  201: _ZZN3tvm3tir11StmtFunctorI
  200: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  199: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  198: _ZZN3tvm3tir11StmtFunctorI
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorIFNS
  188: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  187: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  186: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  185: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  184: _ZZN3tvm3tir11StmtFunctorI
  183: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  182: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  181: _ZZN3tvm3tir11StmtFunctorI
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorI
  177: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  176: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  175: _ZZN3tvm3tir11StmtFunctorI
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorIFNS
  156: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  155: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  154: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  153: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  152: _ZZN3tvm3tir11StmtFunctorI
  151: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  150: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  149: _ZZN3tvm3tir11StmtFunctorI
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorIFNS
  121: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  120: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorI
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorIFNS
  86: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  85: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorI
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorIFNS
  51: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  50: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorI
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), p3: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(512), T.int64(128), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(16) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + xx_3_init * T.int64(2) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(196))
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(7) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(196) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(196) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(392) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(392) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(98) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(16) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(2) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(2)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(512), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(16) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)], p3[v0, v1, v2, v3])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)] + p3[v0, v1, v2, v3], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_add_1", func_name="main")
b4 = sch.get_block(name="T_relu", func_name="main")
b5 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l6, l7, l8, l9, l10, l11, l12 = sch.get_loops(block=b1)
v13, v14, v15, v16, v17 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l18, l19, l20, l21, l22 = sch.split(loop=l6, factors=[v13, v14, v15, v16, v17], preserve_unit_iters=True)
v23, v24, v25, v26, v27 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 16, 2, 8, 2])
l28, l29, l30, l31, l32 = sch.split(loop=l7, factors=[v23, v24, v25, v26, v27], preserve_unit_iters=True)
v33, v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 1, 7, 1, 1])
l38, l39, l40, l41, l42 = sch.split(loop=l8, factors=[v33, v34, v35, v36, v37], preserve_unit_iters=True)
v43, v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l9, n=5, max_innermost_factor=64, decision=[1, 2, 7, 1, 2])
l48, l49, l50, l51, l52 = sch.split(loop=l9, factors=[v43, v44, v45, v46, v47], preserve_unit_iters=True)
v53, v54, v55 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[64, 1, 2])
l56, l57, l58 = sch.split(loop=l10, factors=[v53, v54, v55], preserve_unit_iters=True)
v59, v60, v61 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l62, l63, l64 = sch.split(loop=l11, factors=[v59, v60, v61], preserve_unit_iters=True)
v65, v66, v67 = sch.sample_perfect_tile(loop=l12, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l68, l69, l70 = sch.split(loop=l12, factors=[v65, v66, v67], preserve_unit_iters=True)
sch.reorder(l18, l28, l38, l48, l19, l29, l39, l49, l20, l30, l40, l50, l56, l62, l68, l57, l63, l69, l21, l31, l41, l51, l58, l64, l70, l22, l32, l42, l52)
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="blockIdx.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="vthread.x")
l73 = sch.fuse(l20, l30, l40, l50, preserve_unit_iters=True)
sch.bind(loop=l73, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b74 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b74, loop=l73, preserve_unit_loops=True, index=-1)
b75 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b75, loop=l68, preserve_unit_loops=True, index=-1)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b75)
l86 = sch.fuse(l82, l83, l84, l85, preserve_unit_iters=True)
v87 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch", ann_val=v87)
b88 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b88, loop=l68, preserve_unit_loops=True, index=-1)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b88)
l99 = sch.fuse(l95, l96, l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
l101 = sch.fuse(l56, l62, l68, preserve_unit_iters=True)
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l101, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b4)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v102 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b5, ann_key="meta_schedule.unroll_explicit", ann_val=v102)
sch.enter_postproc()
sch.unannotate(block_or_loop=b75, ann_key="meta_schedule.cooperative_fetch")
l103, l104, l105, l106, l107 = sch.get_loops(block=b75)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 98, 2], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b88, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115 = sch.get_loops(block=b88)
l116, l117, l118 = sch.split(loop=l115, factors=[None, 98, 4], preserve_unit_iters=True)
sch.vectorize(loop=l118)
sch.bind(loop=l117, thread_axis="threadIdx.x")
b119 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b119, ann_key="meta_schedule.unroll_explicit")
b120, b121, b122, b123 = sch.get_child_blocks(b119)
l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b120)
l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b121)
l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155 = sch.get_loops(block=b122)
sch.annotate(block_or_loop=l138, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l138, ann_key="pragma_unroll_explicit", ann_val=1)
l156, l157, l158, l159, l160, l161, l162 = sch.get_loops(block=b123)
b163 = sch.get_block(name="conv2d_nchw", func_name="main")
l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181 = sch.get_loops(block=b163)
b182 = sch.decompose_reduction(block=b163, loop=l167)
2024-04-29 22:45:16 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:45:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:45:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 374 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:45:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 752 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:45:21 [INFO] [evolutionary_search.cc:723] Sampled 68 candidate(s)
2024-04-29 22:45:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:45:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:45:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:45:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xbc16558)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7d7fbd8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x93c9c58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab4f088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x48fe368)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x941dec8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7d6b0e8)]: 0 failure(s)
2024-04-29 22:45:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2829  1.1942  1.1885  1.1858  1.1792  1.1468  1.1350  1.1073  1.0923  1.0759  1.0721  1.0631  1.0589  1.0521  1.0486  1.0466
[17 : 32]:	1.0421  1.0394  1.0383  1.0378  1.0347  1.0244  1.0238  1.0160  1.0099  1.0090  1.0062  1.0013  1.0011  0.9998  0.9987  0.9946
[33 : 48]:	0.9940  0.9935  0.9922  0.9899  0.9896  0.9894  0.9835  0.9804  0.9799  0.9782  0.9757  0.9743  0.9743  0.9736  0.9728  0.9727
[49 : 64]:	0.9710  0.9708  0.9700  0.9686  0.9676  0.9671  0.9669  0.9666  0.9646  0.9642  0.9638  0.9621  0.9621  0.9596  0.9585  0.9577
2024-04-29 22:45:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:45:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #513: GFLOPs: 4178.7920. Time: 24.8791 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #514: GFLOPs: 4891.4245. Time: 21.2545 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #515: GFLOPs: 446.1559. Time: 233.0232 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #516: GFLOPs: 446.2129. Time: 232.9934 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #517: GFLOPs: 4124.9096. Time: 25.2041 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #518: GFLOPs: 4703.6246. Time: 22.1031 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #519: GFLOPs: 3850.2369. Time: 27.0021 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #520: GFLOPs: 4896.9411. Time: 21.2305 us. Best GFLOPs: 4998.4571
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #521: GFLOPs: 5026.5217. Time: 20.6832 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #522: GFLOPs: 4820.5715. Time: 21.5669 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #523: GFLOPs: 4704.1069. Time: 22.1008 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #524: GFLOPs: 3853.2159. Time: 26.9813 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #525: GFLOPs: 4749.8839. Time: 21.8878 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #526: GFLOPs: 4845.3308. Time: 21.4567 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #527: GFLOPs: 4343.2009. Time: 23.9373 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #528: GFLOPs: 4367.4909. Time: 23.8042 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #529: GFLOPs: 4048.3587. Time: 25.6807 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #530: GFLOPs: 4023.0680. Time: 25.8421 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #531: GFLOPs: 4810.4900. Time: 21.6121 us. Best GFLOPs: 5026.5217
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #532: GFLOPs: 5027.8242. Time: 20.6779 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #533: GFLOPs: 3905.4945. Time: 26.6201 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #534: GFLOPs: 4765.1704. Time: 21.8176 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #535: GFLOPs: 4512.9113. Time: 23.0372 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #536: GFLOPs: 4389.2628. Time: 23.6861 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #537: GFLOPs: 4819.4208. Time: 21.5720 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #538: GFLOPs: 4847.7907. Time: 21.4458 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #539: GFLOPs: 4912.8106. Time: 21.1620 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #540: GFLOPs: 4752.9141. Time: 21.8739 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #541: GFLOPs: 3846.3532. Time: 27.0294 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #542: GFLOPs: 4676.3255. Time: 22.2321 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #543: GFLOPs: 4738.1819. Time: 21.9419 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #544: GFLOPs: 4521.1980. Time: 22.9949 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #545: GFLOPs: 4862.7342. Time: 21.3799 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #546: GFLOPs: 4570.6397. Time: 22.7462 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #547: GFLOPs: 4791.5074. Time: 21.6977 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #548: GFLOPs: 4732.9803. Time: 21.9660 us. Best GFLOPs: 5027.8242
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #549: GFLOPs: 5037.9916. Time: 20.6361 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #550: GFLOPs: 4968.0715. Time: 20.9266 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #551: GFLOPs: 4887.3242. Time: 21.2723 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #552: GFLOPs: 4814.2207. Time: 21.5953 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #553: GFLOPs: 4126.9256. Time: 25.1918 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #554: GFLOPs: 1958.9307. Time: 53.0722 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #555: GFLOPs: 4723.2098. Time: 22.0114 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #556: GFLOPs: 4865.7942. Time: 21.3664 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #557: GFLOPs: 4669.5905. Time: 22.2642 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #558: GFLOPs: 3525.9377. Time: 29.4857 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #559: GFLOPs: 4704.2634. Time: 22.1001 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #560: GFLOPs: 4003.2400. Time: 25.9701 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #561: GFLOPs: 4778.1029. Time: 21.7586 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #562: GFLOPs: 4873.8347. Time: 21.3312 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #563: GFLOPs: 4915.2764. Time: 21.1513 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #564: GFLOPs: 4763.5332. Time: 21.8251 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #565: GFLOPs: 4896.0781. Time: 21.2343 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #566: GFLOPs: 4963.7576. Time: 20.9448 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #567: GFLOPs: 4972.9921. Time: 20.9059 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #568: GFLOPs: 4410.9082. Time: 23.5699 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #569: GFLOPs: 4779.7198. Time: 21.7512 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #570: GFLOPs: 4945.5664. Time: 21.0218 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #571: GFLOPs: 4736.4157. Time: 21.9501 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #572: GFLOPs: 4808.4197. Time: 21.6214 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #573: GFLOPs: 4732.4789. Time: 21.9683 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #574: GFLOPs: 3363.3232. Time: 30.9113 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #575: GFLOPs: 1864.1871. Time: 55.7694 us. Best GFLOPs: 5037.9916
2024-04-29 22:47:07 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_add_nn_relu_1] Trial #576: GFLOPs: 20.7010. Time: 5022.2080 us. Best GFLOPs: 5037.9916
