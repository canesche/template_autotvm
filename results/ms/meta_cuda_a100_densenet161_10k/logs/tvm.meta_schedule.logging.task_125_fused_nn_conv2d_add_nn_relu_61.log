2024-04-29 03:05:11 [INFO] [task_scheduler.cc:160] Initializing Task #125: "fused_nn_conv2d_add_nn_relu_61"
2024-04-29 03:05:11 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(672), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(28), T.int64(28), T.int64(672), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 03:05:11 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 03:05:11 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(21), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(12), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(21952)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(672), rc_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(10752)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(56))
                                    v1 = T.axis.spatial(T.int64(672), rc_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused % T.int64(56))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(32) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(672), rc_0 * T.int64(56) + rc_1 + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(2), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(32) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 3, 32, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 7, 2, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 14, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[12, 56, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 03:05:11 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(21), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(12), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(21952)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(672), rc_0_ry_0_rx_0_fused * T.int64(56) + ax0_ax1_ax2_ax3_fused // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(10752)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(56))
                                    v1 = T.axis.spatial(T.int64(672), rc_0_ry_0_rx_0_fused * T.int64(56) + ax0_ax1_ax2_ax3_fused % T.int64(56))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(32) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(672), rc_0_ry_0_rx_0_fused * T.int64(56) + rc_1 + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(2), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(32) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 3, 32, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 7, 2, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 14, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[12, 56, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 03:05:11 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(672), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(672), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(21), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(12), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(21952)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(672), rc_0_ry_0_rx_0_fused * T.int64(56) + ax0_ax1_ax2_ax3_fused // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(10752)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(56))
                                    v1 = T.axis.spatial(T.int64(672), rc_0_ry_0_rx_0_fused * T.int64(56) + ax0_ax1_ax2_ax3_fused % T.int64(56))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(32) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(672), rc_0_ry_0_rx_0_fused * T.int64(56) + rc_1 + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(2), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(7) * T.int64(32) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 3, 32, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 7, 2, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 14, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[12, 56, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 05:43:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:43:31 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 05:43:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 498 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 992 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 1482 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:36 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 05:43:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 05:43:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9973  0.9972  0.9971  0.9969  0.9965  0.9959  0.9955  0.9945  0.9938  0.9936  0.9911  0.9899  0.9896  0.9894  0.9894  0.9884
[17 : 32]:	0.9883  0.9883  0.9882  0.9875  0.9874  0.9869  0.9863  0.9857  0.9852  0.9847  0.9839  0.9839  0.9838  0.9832  0.9830  0.9828
[33 : 48]:	0.9826  0.9822  0.9818  0.9810  0.9796  0.9781  0.9775  0.9768  0.9767  0.9764  0.9760  0.9758  0.9755  0.9749  0.9744  0.9743
[49 : 64]:	0.9739  0.9701  0.9697  0.9681  0.9664  0.9659  0.9657  0.9652  0.9648  0.9643  0.9629  0.9628  0.9624  0.9610  0.9605  0.9602
2024-04-29 05:43:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:43:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #1: GFLOPs: 1367.3830. Time: 148.1741 us. Best GFLOPs: 1367.3830
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #2: GFLOPs: 488.9047. Time: 414.4176 us. Best GFLOPs: 1367.3830
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #3: GFLOPs: 1159.6967. Time: 174.7101 us. Best GFLOPs: 1367.3830
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #4: GFLOPs: 141.1428. Time: 1435.5017 us. Best GFLOPs: 1367.3830
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #5: GFLOPs: 1816.2050. Time: 111.5572 us. Best GFLOPs: 1816.2050
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #6: GFLOPs: 3674.7979. Time: 55.1352 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #7: GFLOPs: 98.9027. Time: 2048.5851 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #8: GFLOPs: 177.6031. Time: 1140.8058 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #9: GFLOPs: 3301.3464. Time: 61.3721 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #10: GFLOPs: 85.3084. Time: 2375.0371 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #11: GFLOPs: 8.7123. Time: 23255.6548 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #12: GFLOPs: 88.3250. Time: 2293.9229 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #13: GFLOPs: 222.6193. Time: 910.1219 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #14: GFLOPs: 2149.7955. Time: 94.2465 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #15: GFLOPs: 3157.5979. Time: 64.1661 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #16: GFLOPs: 21.4554. Time: 9443.3281 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #17: GFLOPs: 1145.2319. Time: 176.9167 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #18: GFLOPs: 15.6735. Time: 12926.9761 us. Best GFLOPs: 3674.7979
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #19: GFLOPs: 3699.0006. Time: 54.7744 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #20: GFLOPs: 649.4280. Time: 311.9833 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #21: GFLOPs: 583.5858. Time: 347.1823 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #22: GFLOPs: 2339.7470. Time: 86.5951 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #23: GFLOPs: 689.8813. Time: 293.6892 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #24: GFLOPs: 65.4122. Time: 3097.4449 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #25: GFLOPs: 2704.6957. Time: 74.9107 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #26: GFLOPs: 793.3134. Time: 255.3980 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #27: GFLOPs: 86.3193. Time: 2347.2223 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #28: GFLOPs: 1214.0805. Time: 166.8841 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #29: GFLOPs: 478.8407. Time: 423.1276 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #30: GFLOPs: 473.1193. Time: 428.2444 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #31: GFLOPs: 13.4399. Time: 15075.3281 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #32: GFLOPs: 1273.0786. Time: 159.1502 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #33: GFLOPs: 3001.8419. Time: 67.4955 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #34: GFLOPs: 1454.0474. Time: 139.3426 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #35: GFLOPs: 2245.1987. Time: 90.2418 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #36: GFLOPs: 2422.2287. Time: 83.6464 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #37: GFLOPs: 16.2359. Time: 12479.1462 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #38: GFLOPs: 44.3664. Time: 4566.7606 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #39: GFLOPs: 3033.5023. Time: 66.7910 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #40: GFLOPs: 274.4720. Time: 738.1835 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #41: GFLOPs: 2717.4807. Time: 74.5583 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #42: GFLOPs: 342.2388. Time: 592.0156 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #43: GFLOPs: 785.6436. Time: 257.8913 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #44: GFLOPs: 920.9179. Time: 220.0095 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #45: GFLOPs: 987.3290. Time: 205.2109 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #46: GFLOPs: 3314.9097. Time: 61.1210 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #47: GFLOPs: 2051.9956. Time: 98.7384 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #48: GFLOPs: 1267.2766. Time: 159.8788 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #49: GFLOPs: 2111.5708. Time: 95.9526 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #50: GFLOPs: 30.7567. Time: 6587.5201 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #51: GFLOPs: 1046.6415. Time: 193.5818 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #52: GFLOPs: 1432.3513. Time: 141.4532 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #53: GFLOPs: 34.9803. Time: 5792.1422 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #54: GFLOPs: 3209.7879. Time: 63.1228 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #55: GFLOPs: 965.6868. Time: 209.8099 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #56: GFLOPs: 699.3557. Time: 289.7105 us. Best GFLOPs: 3699.0006
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #57: GFLOPs: 4053.8532. Time: 49.9798 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #58: GFLOPs: 114.4512. Time: 1770.2804 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #59: GFLOPs: 942.5017. Time: 214.9712 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #60: GFLOPs: 16.2352. Time: 12479.7151 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #61: GFLOPs: 459.7909. Time: 440.6583 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #62: GFLOPs: 1389.7399. Time: 145.7904 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #63: GFLOPs: 92.7850. Time: 2183.6578 us. Best GFLOPs: 4053.8532
2024-04-29 06:59:12 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #64: GFLOPs: 91.0399. Time: 2225.5161 us. Best GFLOPs: 4053.8532
2024-04-29 09:47:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:47:59 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 09:48:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 430 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 862 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 1295 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 1730 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:06 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-04-29 09:48:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc389428)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x13fb8878)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x15442278)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x151aa4d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1311ad68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x174faf38)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13fb6858)]: 0 failure(s)
2024-04-29 09:48:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3970  1.3639  1.3639  1.2238  1.1892  1.1868  1.1552  1.1552  1.1467  1.1448  1.1286  1.1207  1.1148  1.0927  1.0707  1.0348
[17 : 32]:	1.0315  1.0201  1.0175  1.0167  1.0166  1.0097  1.0094  1.0050  1.0030  1.0024  1.0015  0.9952  0.9933  0.9837  0.9763  0.9760
[33 : 48]:	0.9733  0.9729  0.9727  0.9654  0.9649  0.9648  0.9644  0.9620  0.9600  0.9600  0.9587  0.9574  0.9558  0.9558  0.9556  0.9550
[49 : 64]:	0.9542  0.9540  0.9533  0.9526  0.9493  0.9490  0.9453  0.9443  0.9440  0.9437  0.9436  0.9434  0.9431  0.9428  0.9413  0.9413
2024-04-29 09:48:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:48:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #65: GFLOPs: 2034.2757. Time: 99.5984 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #66: GFLOPs: 2033.2343. Time: 99.6495 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #67: GFLOPs: 2140.5147. Time: 94.6551 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #68: GFLOPs: 1781.4163. Time: 113.7357 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #69: GFLOPs: 3819.8600. Time: 53.0414 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #70: GFLOPs: 2017.3708. Time: 100.4330 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #71: GFLOPs: 2284.5505. Time: 88.6873 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #72: GFLOPs: 2284.5869. Time: 88.6859 us. Best GFLOPs: 4053.8532
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #73: GFLOPs: 5165.0218. Time: 39.2275 us. Best GFLOPs: 5165.0218
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #74: GFLOPs: 2018.2154. Time: 100.3910 us. Best GFLOPs: 5165.0218
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #75: GFLOPs: 5171.3144. Time: 39.1797 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #76: GFLOPs: 2191.4022. Time: 92.4571 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #77: GFLOPs: 1715.3804. Time: 118.1141 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #78: GFLOPs: 1718.3317. Time: 117.9113 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #79: GFLOPs: 1993.3130. Time: 101.6452 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #80: GFLOPs: 1737.7279. Time: 116.5952 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #81: GFLOPs: 5103.9118. Time: 39.6971 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #82: GFLOPs: 3479.2859. Time: 58.2334 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #83: GFLOPs: 2417.5940. Time: 83.8067 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #84: GFLOPs: 3506.7953. Time: 57.7766 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #85: GFLOPs: 3325.8638. Time: 60.9197 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #86: GFLOPs: 2807.2525. Time: 72.1740 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #87: GFLOPs: 3989.8458. Time: 50.7816 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #88: GFLOPs: 2821.0689. Time: 71.8205 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #89: GFLOPs: 4579.4679. Time: 44.2433 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #90: GFLOPs: 4760.5814. Time: 42.5601 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #91: GFLOPs: 2242.3585. Time: 90.3561 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #92: GFLOPs: 3332.2320. Time: 60.8033 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #93: GFLOPs: 3167.4447. Time: 63.9666 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #94: GFLOPs: 1678.0023. Time: 120.7452 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #95: GFLOPs: 3135.8276. Time: 64.6116 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #96: GFLOPs: 3492.5046. Time: 58.0130 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #97: GFLOPs: 1903.2404. Time: 106.4556 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #98: GFLOPs: 2015.1608. Time: 100.5432 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #99: GFLOPs: 3208.2395. Time: 63.1532 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #100: GFLOPs: 2786.1668. Time: 72.7202 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #101: GFLOPs: 3257.2059. Time: 62.2038 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #102: GFLOPs: 2730.2493. Time: 74.2096 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #103: GFLOPs: 4051.8045. Time: 50.0050 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #104: GFLOPs: 2807.5839. Time: 72.1655 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #105: GFLOPs: 4118.3838. Time: 49.1966 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #106: GFLOPs: 4071.2457. Time: 49.7663 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #107: GFLOPs: 525.1001. Time: 385.8516 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #108: GFLOPs: 2743.8708. Time: 73.8412 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #109: GFLOPs: 3694.8062. Time: 54.8366 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #110: GFLOPs: 1604.9240. Time: 126.2432 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #111: GFLOPs: 3158.9778. Time: 64.1381 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #112: GFLOPs: 3063.5519. Time: 66.1359 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #113: GFLOPs: 575.3526. Time: 352.1505 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #114: GFLOPs: 2944.8954. Time: 68.8006 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #115: GFLOPs: 1616.4696. Time: 125.3415 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #116: GFLOPs: 519.8130. Time: 389.7761 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #117: GFLOPs: 2957.9202. Time: 68.4977 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #118: GFLOPs: 2945.9632. Time: 68.7757 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #119: GFLOPs: 953.1461. Time: 212.5704 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #120: GFLOPs: 3608.4453. Time: 56.1490 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #121: GFLOPs: 3018.9531. Time: 67.1129 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #122: GFLOPs: 3048.5120. Time: 66.4622 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #123: GFLOPs: 2699.6884. Time: 75.0497 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #124: GFLOPs: 658.3293. Time: 307.7650 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #125: GFLOPs: 661.3575. Time: 306.3558 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #126: GFLOPs: 3180.8623. Time: 63.6968 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #127: GFLOPs: 10.5359. Time: 19230.5488 us. Best GFLOPs: 5171.3144
2024-04-29 09:50:21 [INFO] [task_scheduler.cc:131] [Task #125: fused_nn_conv2d_add_nn_relu_61] Trial #128: GFLOPs: 123.3642. Time: 1642.3785 us. Best GFLOPs: 5171.3144
