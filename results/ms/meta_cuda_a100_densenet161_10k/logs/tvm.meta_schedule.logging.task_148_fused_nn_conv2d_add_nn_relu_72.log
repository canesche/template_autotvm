2024-04-29 03:05:24 [INFO] [task_scheduler.cc:160] Initializing Task #148: "fused_nn_conv2d_add_nn_relu_72"
2024-04-29 03:05:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(336), T.int64(56), T.int64(56)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(56), T.int64(56), T.int64(336), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 03:05:24 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 03:05:24 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(48), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(392), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(12), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(21952)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(336), rc_0 * T.int64(28) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(448)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v1 = T.axis.spatial(T.int64(336), rc_0 * T.int64(28) + ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(16) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(336), rc_0 * T.int64(28) + rc_1 * T.int64(7) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(16) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[12, 2, 8, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 8, 7, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 2, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[12, 4, 7])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 03:05:24 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(48), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(392), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(12), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(21952)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(28) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(448)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(28) + ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(16) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(28) + rc_1 * T.int64(7) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(16) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[12, 2, 8, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 8, 7, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 2, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[12, 4, 7])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 03:05:24 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(48), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(32), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(392), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(12), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(21952)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(28) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(448)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(28) + ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(16) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(28) + rc_1 * T.int64(7) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(16) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(16) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(14) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[12, 2, 8, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 8, 7, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 2, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[12, 4, 7])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 06:12:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:12:31 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 06:12:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 498 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 992 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 1489 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 1977 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:38 [INFO] [evolutionary_search.cc:723] Sampled 71 candidate(s)
2024-04-29 06:12:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 06:12:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9993  0.9990  0.9984  0.9983  0.9977  0.9967  0.9966  0.9938  0.9935  0.9932  0.9927  0.9924  0.9917  0.9896  0.9890
[17 : 32]:	0.9882  0.9876  0.9876  0.9872  0.9866  0.9859  0.9851  0.9843  0.9839  0.9825  0.9817  0.9810  0.9802  0.9794  0.9784  0.9782
[33 : 48]:	0.9781  0.9776  0.9765  0.9764  0.9739  0.9738  0.9737  0.9727  0.9706  0.9704  0.9694  0.9694  0.9683  0.9683  0.9681  0.9669
[49 : 64]:	0.9667  0.9662  0.9643  0.9636  0.9627  0.9608  0.9604  0.9600  0.9591  0.9589  0.9585  0.9583  0.9560  0.9558  0.9554  0.9545
2024-04-29 06:12:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:12:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #1: GFLOPs: 197.1315. Time: 2058.6438 us. Best GFLOPs: 197.1315
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #2: GFLOPs: 88.2914. Time: 4596.4102 us. Best GFLOPs: 197.1315
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #3: GFLOPs: 3735.8415. Time: 108.6297 us. Best GFLOPs: 3735.8415
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #4: GFLOPs: 4062.3574. Time: 99.8985 us. Best GFLOPs: 4062.3574
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #5: GFLOPs: 94.0038. Time: 4317.0986 us. Best GFLOPs: 4062.3574
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #6: GFLOPs: 4028.4054. Time: 100.7405 us. Best GFLOPs: 4062.3574
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #7: GFLOPs: 2192.3911. Time: 185.1054 us. Best GFLOPs: 4062.3574
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #8: GFLOPs: 4350.2991. Time: 93.2863 us. Best GFLOPs: 4350.2991
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #9: GFLOPs: 2024.8928. Time: 200.4173 us. Best GFLOPs: 4350.2991
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #10: GFLOPs: 3219.0701. Time: 126.0685 us. Best GFLOPs: 4350.2991
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #11: GFLOPs: 4905.4161. Time: 82.7297 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #12: GFLOPs: 189.1435. Time: 2145.5851 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #13: GFLOPs: 53.4067. Time: 7598.7385 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #14: GFLOPs: 3619.7638. Time: 112.1133 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #15: GFLOPs: 4227.9804. Time: 95.9852 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #16: GFLOPs: 75.6997. Time: 5360.9635 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #17: GFLOPs: 1870.8336. Time: 216.9212 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #18: GFLOPs: 83.3430. Time: 4869.3150 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #19: GFLOPs: 362.7870. Time: 1118.6275 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #20: GFLOPs: 918.3732. Time: 441.8939 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #21: GFLOPs: 88.1085. Time: 4605.9518 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #22: GFLOPs: 866.0302. Time: 468.6020 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #23: GFLOPs: 3407.7506. Time: 119.0884 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #24: GFLOPs: 167.0156. Time: 2429.8544 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #25: GFLOPs: 288.0823. Time: 1408.7067 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #26: GFLOPs: 1556.7613. Time: 260.6845 us. Best GFLOPs: 4905.4161
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #27: GFLOPs: 5744.1682. Time: 70.6497 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #28: GFLOPs: 2112.2644. Time: 192.1272 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #29: GFLOPs: 15.3574. Time: 26425.3442 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #30: GFLOPs: 1612.5632. Time: 251.6636 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #31: GFLOPs: 240.3080. Time: 1688.7637 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #32: GFLOPs: 4091.3663. Time: 99.1902 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #33: GFLOPs: 1281.7548. Time: 316.6155 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #34: GFLOPs: 2777.5069. Time: 146.1107 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #35: GFLOPs: 264.3148. Time: 1535.3793 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #36: GFLOPs: 900.1475. Time: 450.8411 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #37: GFLOPs: 97.6975. Time: 4153.8763 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #38: GFLOPs: 77.7738. Time: 5217.9969 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #39: GFLOPs: 1044.7726. Time: 388.4324 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #40: GFLOPs: 36.6095. Time: 11085.2096 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #41: GFLOPs: 5318.9518. Time: 76.2976 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #42: GFLOPs: 282.0382. Time: 1438.8955 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #43: GFLOPs: 34.3676. Time: 11808.3131 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #44: GFLOPs: 87.1939. Time: 4654.2660 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #45: GFLOPs: 1369.7681. Time: 296.2717 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #46: GFLOPs: 1927.2388. Time: 210.5725 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #47: GFLOPs: 3144.4436. Time: 129.0605 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #48: GFLOPs: 961.2196. Time: 422.1964 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #49: GFLOPs: 124.8138. Time: 3251.4311 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #50: GFLOPs: 3035.4514. Time: 133.6946 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #51: GFLOPs: 5280.1815. Time: 76.8579 us. Best GFLOPs: 5744.1682
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #52: GFLOPs: 8074.2113. Time: 50.2617 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #53: GFLOPs: 1694.8034. Time: 239.4517 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #54: GFLOPs: 2382.6271. Time: 170.3261 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #55: GFLOPs: 987.9582. Time: 410.7699 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #56: GFLOPs: 586.4817. Time: 691.9627 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #57: GFLOPs: 136.0838. Time: 2982.1591 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #58: GFLOPs: 1002.5881. Time: 404.7759 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #59: GFLOPs: 4141.2925. Time: 97.9944 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #60: GFLOPs: 546.3414. Time: 742.8020 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #61: GFLOPs: 3107.4197. Time: 130.5982 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #62: GFLOPs: 3906.9923. Time: 103.8711 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #63: GFLOPs: 476.5987. Time: 851.4994 us. Best GFLOPs: 8074.2113
2024-04-29 07:01:13 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #64: GFLOPs: 5451.5541. Time: 74.4418 us. Best GFLOPs: 8074.2113
2024-04-29 09:46:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:46:12 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 09:46:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 432 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 866 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 1299 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 1732 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:19 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-04-29 09:46:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385f678)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11acb588)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x11acb488)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc771998)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x176b5da8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe8f9c08)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14e51208)]: 0 failure(s)
2024-04-29 09:46:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.5719  2.5449  2.5443  2.5183  2.4843  2.3117  2.2867  2.1884  2.1322  1.9212  1.8721  1.8647  1.8521  1.8511  1.8321  1.8239
[17 : 32]:	1.6288  1.5847  1.5749  1.5635  1.5619  1.5569  1.5504  1.5379  1.5254  1.5224  1.4932  1.4747  1.4739  1.4684  1.4534  1.4494
[33 : 48]:	1.4489  1.4487  1.4466  1.4456  1.4447  1.4374  1.4252  1.4132  1.4114  1.4099  1.4015  1.3843  1.3825  1.3790  1.3619  1.3124
[49 : 64]:	1.3087  1.2934  1.2914  1.2809  1.2785  1.2737  1.2726  1.2713  1.2708  1.2665  1.2654  1.2651  1.2564  1.2540  1.2514  1.2423
2024-04-29 09:46:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:46:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #65: GFLOPs: 2865.0007. Time: 141.6487 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #66: GFLOPs: 2936.9241. Time: 138.1798 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #67: GFLOPs: 2828.6455. Time: 143.4692 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #68: GFLOPs: 2889.6821. Time: 140.4388 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #69: GFLOPs: 2889.4455. Time: 140.4503 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #70: GFLOPs: 2837.7382. Time: 143.0095 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #71: GFLOPs: 2801.8936. Time: 144.8390 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #72: GFLOPs: 1242.3416. Time: 326.6602 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #73: GFLOPs: 1947.7337. Time: 208.3568 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #74: GFLOPs: 1100.2148. Time: 368.8584 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #75: GFLOPs: 2308.4159. Time: 175.8017 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #76: GFLOPs: 1647.7618. Time: 246.2877 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #77: GFLOPs: 2657.8754. Time: 152.6872 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #78: GFLOPs: 5593.3266. Time: 72.5549 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #79: GFLOPs: 2152.8636. Time: 188.5040 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #80: GFLOPs: 2312.8490. Time: 175.4648 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #81: GFLOPs: 4767.7716. Time: 85.1181 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #82: GFLOPs: 2029.0751. Time: 200.0042 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #83: GFLOPs: 1916.0180. Time: 211.8057 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #84: GFLOPs: 2395.6117. Time: 169.4029 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #85: GFLOPs: 4039.5671. Time: 100.4621 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #86: GFLOPs: 5079.8668. Time: 79.8886 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #87: GFLOPs: 2548.5724. Time: 159.2356 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #88: GFLOPs: 1914.3064. Time: 211.9951 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #89: GFLOPs: 4911.7413. Time: 82.6231 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #90: GFLOPs: 4799.1584. Time: 84.5614 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #91: GFLOPs: 4919.6637. Time: 82.4901 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #92: GFLOPs: 4837.5847. Time: 83.8897 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #93: GFLOPs: 4911.3877. Time: 82.6291 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #94: GFLOPs: 4716.6908. Time: 86.0399 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #95: GFLOPs: 4217.3080. Time: 96.2281 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #96: GFLOPs: 4217.1174. Time: 96.2324 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #97: GFLOPs: 4216.4110. Time: 96.2486 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #98: GFLOPs: 4217.1448. Time: 96.2318 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #99: GFLOPs: 1626.1352. Time: 249.5632 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #100: GFLOPs: 4216.9820. Time: 96.2355 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #101: GFLOPs: 4988.1726. Time: 81.3571 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #102: GFLOPs: 3034.7861. Time: 133.7239 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #103: GFLOPs: 3034.2826. Time: 133.7461 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #104: GFLOPs: 2450.3278. Time: 165.6201 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #105: GFLOPs: 3034.4939. Time: 133.7368 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #106: GFLOPs: 7400.5546. Time: 54.8369 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #107: GFLOPs: 5302.0650. Time: 76.5406 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #108: GFLOPs: 4582.9287. Time: 88.5511 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #109: GFLOPs: 2609.4159. Time: 155.5227 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #110: GFLOPs: 5428.9317. Time: 74.7520 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #111: GFLOPs: 2815.5404. Time: 144.1370 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #112: GFLOPs: 7026.5785. Time: 57.7555 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #113: GFLOPs: 7646.5128. Time: 53.0730 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #114: GFLOPs: 2469.7371. Time: 164.3185 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #115: GFLOPs: 6266.3699. Time: 64.7621 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #116: GFLOPs: 6204.0013. Time: 65.4132 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #117: GFLOPs: 3392.0960. Time: 119.6380 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #118: GFLOPs: 7708.7107. Time: 52.6448 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #119: GFLOPs: 3589.4998. Time: 113.0585 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #120: GFLOPs: 3410.6289. Time: 118.9879 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #121: GFLOPs: 4792.1922. Time: 84.6843 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #122: GFLOPs: 7739.9396. Time: 52.4324 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #123: GFLOPs: 3185.9715. Time: 127.3783 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #124: GFLOPs: 4479.6429. Time: 90.5928 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #125: GFLOPs: 4888.6688. Time: 83.0131 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #126: GFLOPs: 311.3149. Time: 1303.5786 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #127: GFLOPs: 222.7018. Time: 1822.2731 us. Best GFLOPs: 8074.2113
2024-04-29 09:47:59 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #128: GFLOPs: 119.0400. Time: 3409.1349 us. Best GFLOPs: 8074.2113
