2024-04-29 03:04:38 [INFO] [task_scheduler.cc:160] Initializing Task #72: "fused_nn_conv2d_add_nn_relu_35"
2024-04-29 03:04:38 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(1536), T.int64(14), T.int64(14)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(1536), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 03:04:38 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 03:04:38 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(28), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(32), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(672)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1536), rc_0 * T.int64(48) + ax0_ax1_ax2_ax3_fused // T.int64(14))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(14) // T.int64(2))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(2))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(9216)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(48))
                                    v1 = T.axis.spatial(T.int64(1536), rc_0 * T.int64(48) + ax0_ax1_ax2_ax3_fused % T.int64(48))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(48) + ff_3 * T.int64(6) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1536), rc_0 * T.int64(48) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 2, 8, 6])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[7, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 6, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 03:04:38 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(28), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(672)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1536), rc_0_ry_0_rx_0_fused * T.int64(48) + ax0_ax1_ax2_ax3_fused // T.int64(14))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(14) // T.int64(2))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(2))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(9216)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(48))
                                    v1 = T.axis.spatial(T.int64(1536), rc_0_ry_0_rx_0_fused * T.int64(48) + ax0_ax1_ax2_ax3_fused % T.int64(48))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(48) + ff_3 * T.int64(6) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1536), rc_0_ry_0_rx_0_fused * T.int64(48) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 2, 8, 6])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[7, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 6, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 03:04:38 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1536), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1536), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(28), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(672)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1536), rc_0_ry_0_rx_0_fused * T.int64(48) + ax0_ax1_ax2_ax3_fused // T.int64(14))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(14) // T.int64(2))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(2))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(9216)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(48))
                                    v1 = T.axis.spatial(T.int64(1536), rc_0_ry_0_rx_0_fused * T.int64(48) + ax0_ax1_ax2_ax3_fused % T.int64(48))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(48) + ff_3 * T.int64(6) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1536), rc_0_ry_0_rx_0_fused * T.int64(48) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_1_ff_1_yy_1_xx_1_fused * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 2, 8, 6])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[7, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[32, 6, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 04:40:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:40:01 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 04:40:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 488 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 983 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 1464 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:07 [INFO] [evolutionary_search.cc:723] Sampled 72 candidate(s)
2024-04-29 04:40:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 04:40:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9996  0.9992  0.9990  0.9990  0.9988  0.9986  0.9975  0.9955  0.9952  0.9950  0.9943  0.9941  0.9939  0.9933  0.9928
[17 : 32]:	0.9919  0.9913  0.9906  0.9902  0.9897  0.9894  0.9884  0.9873  0.9872  0.9861  0.9856  0.9839  0.9839  0.9832  0.9828  0.9821
[33 : 48]:	0.9817  0.9817  0.9812  0.9794  0.9793  0.9786  0.9786  0.9783  0.9780  0.9779  0.9777  0.9774  0.9770  0.9759  0.9749  0.9747
[49 : 64]:	0.9746  0.9740  0.9740  0.9738  0.9737  0.9737  0.9731  0.9729  0.9728  0.9706  0.9701  0.9693  0.9692  0.9691  0.9679  0.9675
2024-04-29 04:40:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:40:17 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #1: GFLOPs: 454.7112. Time: 254.4049 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #2: GFLOPs: 12.1863. Time: 9492.6660 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #3: GFLOPs: 230.1299. Time: 502.6759 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #4: GFLOPs: 387.8917. Time: 298.2295 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #5: GFLOPs: 248.3132. Time: 465.8664 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #6: GFLOPs: 161.3727. Time: 716.8548 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #7: GFLOPs: 238.6922. Time: 484.6441 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #8: GFLOPs: 327.8500. Time: 352.8466 us. Best GFLOPs: 454.7112
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #9: GFLOPs: 1925.4794. Time: 60.0789 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #10: GFLOPs: 423.3332. Time: 273.2617 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #11: GFLOPs: 245.1420. Time: 471.8928 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #12: GFLOPs: 150.1333. Time: 770.5206 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #13: GFLOPs: 1076.0521. Time: 107.5048 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #14: GFLOPs: 320.7563. Time: 360.6500 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #15: GFLOPs: 526.4606. Time: 219.7330 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #16: GFLOPs: 43.5265. Time: 2657.7112 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #17: GFLOPs: 924.6059. Time: 125.1136 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #18: GFLOPs: 228.0671. Time: 507.2224 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #19: GFLOPs: 22.9287. Time: 5045.2480 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #20: GFLOPs: 222.9898. Time: 518.7716 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #21: GFLOPs: 129.5900. Time: 892.6677 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #22: GFLOPs: 603.8140. Time: 191.5835 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #23: GFLOPs: 95.4824. Time: 1211.5400 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #24: GFLOPs: 1258.7462. Time: 91.9016 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #25: GFLOPs: 219.6928. Time: 526.5570 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #26: GFLOPs: 343.9717. Time: 336.3090 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #27: GFLOPs: 558.2905. Time: 207.2053 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #28: GFLOPs: 342.1240. Time: 338.1252 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #29: GFLOPs: 1194.1166. Time: 96.8756 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #30: GFLOPs: 520.7004. Time: 222.1638 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #31: GFLOPs: 852.9872. Time: 135.6184 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #32: GFLOPs: 275.8815. Time: 419.3133 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #33: GFLOPs: 131.6109. Time: 878.9603 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #34: GFLOPs: 933.7897. Time: 123.8831 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #35: GFLOPs: 131.1833. Time: 881.8257 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #36: GFLOPs: 1321.5269. Time: 87.5357 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #37: GFLOPs: 925.9007. Time: 124.9386 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #38: GFLOPs: 220.5061. Time: 524.6149 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #39: GFLOPs: 139.9368. Time: 826.6642 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #40: GFLOPs: 197.9053. Time: 584.5259 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #41: GFLOPs: 667.5841. Time: 173.2827 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #42: GFLOPs: 35.3504. Time: 3272.4068 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #43: GFLOPs: 533.9001. Time: 216.6712 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #44: GFLOPs: 942.9040. Time: 122.6856 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #45: GFLOPs: 105.1815. Time: 1099.8210 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #46: GFLOPs: 552.7343. Time: 209.2882 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #47: GFLOPs: 154.4104. Time: 749.1774 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #48: GFLOPs: 42.8107. Time: 2702.1451 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #49: GFLOPs: 641.6402. Time: 180.2892 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #50: GFLOPs: 371.9700. Time: 310.9949 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #51: GFLOPs: 190.2000. Time: 608.2058 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #52: GFLOPs: 36.2238. Time: 3193.5041 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #53: GFLOPs: 109.9184. Time: 1052.4244 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #54: GFLOPs: 115.2009. Time: 1004.1651 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #55: GFLOPs: 420.0120. Time: 275.4226 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #56: GFLOPs: 353.4828. Time: 327.2600 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #57: GFLOPs: 322.7783. Time: 358.3908 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #58: GFLOPs: 43.6930. Time: 2647.5790 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #59: GFLOPs: 353.6070. Time: 327.1450 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #60: GFLOPs: 43.6690. Time: 2649.0342 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #61: GFLOPs: 149.0988. Time: 775.8665 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #62: GFLOPs: 255.5089. Time: 452.7465 us. Best GFLOPs: 1925.4794
2024-04-29 06:55:09 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #63: GFLOPs: 153.7362. Time: 752.4629 us. Best GFLOPs: 1925.4794
2024-04-29 09:15:27 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:15:28 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 09:15:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 425 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 855 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 1287 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:33 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-04-29 09:15:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38d93d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x17504d08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x16ffc008)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xf4442b8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xdfca878)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x140049f8)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114749b8)]: 0 failure(s)
2024-04-29 09:15:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5918  1.5403  1.5403  1.5300  1.5280  1.4378  1.4239  1.3683  1.3560  1.3477  1.3446  1.3409  1.3360  1.3120  1.2775  1.2389
[17 : 32]:	1.2333  1.2317  1.2276  1.2276  1.2271  1.2234  1.2203  1.1764  1.1753  1.1735  1.1726  1.1713  1.1664  1.1642  1.1588  1.1584
[33 : 48]:	1.1558  1.1548  1.1515  1.1491  1.1461  1.1459  1.1459  1.1448  1.1443  1.1442  1.1431  1.1426  1.1412  1.1410  1.1402  1.1384
[49 : 64]:	1.1369  1.1367  1.1360  1.1339  1.1334  1.1332  1.1309  1.1234  1.1234  1.1207  1.1183  1.1137  1.1132  1.1109  1.1062  1.1040
2024-04-29 09:15:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:15:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #64: GFLOPs: 1442.4543. Time: 80.1972 us. Best GFLOPs: 1925.4794
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #65: GFLOPs: 2043.6523. Time: 56.6049 us. Best GFLOPs: 2043.6523
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #66: GFLOPs: 2043.9272. Time: 56.5973 us. Best GFLOPs: 2043.9272
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #67: GFLOPs: 2304.8363. Time: 50.1904 us. Best GFLOPs: 2304.8363
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #68: GFLOPs: 2081.6425. Time: 55.5719 us. Best GFLOPs: 2304.8363
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #69: GFLOPs: 2162.1311. Time: 53.5031 us. Best GFLOPs: 2304.8363
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #70: GFLOPs: 2892.2146. Time: 39.9973 us. Best GFLOPs: 2892.2146
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #71: GFLOPs: 1931.2040. Time: 59.9009 us. Best GFLOPs: 2892.2146
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #72: GFLOPs: 1524.9829. Time: 75.8571 us. Best GFLOPs: 2892.2146
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #73: GFLOPs: 1663.4937. Time: 69.5408 us. Best GFLOPs: 2892.2146
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #74: GFLOPs: 2169.2209. Time: 53.3283 us. Best GFLOPs: 2892.2146
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #75: GFLOPs: 1502.1656. Time: 77.0093 us. Best GFLOPs: 2892.2146
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #76: GFLOPs: 2978.7069. Time: 38.8359 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #77: GFLOPs: 2202.7313. Time: 52.5170 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #78: GFLOPs: 2353.4708. Time: 49.1533 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #79: GFLOPs: 1179.9838. Time: 98.0359 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #80: GFLOPs: 1437.7857. Time: 80.4576 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #81: GFLOPs: 2221.4057. Time: 52.0755 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #82: GFLOPs: 2196.5404. Time: 52.6650 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #83: GFLOPs: 1641.3990. Time: 70.4769 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #84: GFLOPs: 1641.4366. Time: 70.4753 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #85: GFLOPs: 2068.4992. Time: 55.9250 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #86: GFLOPs: 1786.6451. Time: 64.7475 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #87: GFLOPs: 1426.4809. Time: 81.0952 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #88: GFLOPs: 1250.2922. Time: 92.5230 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #89: GFLOPs: 1747.2132. Time: 66.2087 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #90: GFLOPs: 1404.1850. Time: 82.3829 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #91: GFLOPs: 1845.3651. Time: 62.6872 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #92: GFLOPs: 1987.6269. Time: 58.2004 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #93: GFLOPs: 1408.2061. Time: 82.1476 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #94: GFLOPs: 1426.3489. Time: 81.1027 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #95: GFLOPs: 1670.8421. Time: 69.2350 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #96: GFLOPs: 1747.5229. Time: 66.1970 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #97: GFLOPs: 2052.6969. Time: 56.3555 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #98: GFLOPs: 1251.3018. Time: 92.4483 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #99: GFLOPs: 1395.4513. Time: 82.8985 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #100: GFLOPs: 1665.3183. Time: 69.4647 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #101: GFLOPs: 2818.8896. Time: 41.0377 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #102: GFLOPs: 2597.3729. Time: 44.5376 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #103: GFLOPs: 1252.7990. Time: 92.3379 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #104: GFLOPs: 1670.7322. Time: 69.2396 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #105: GFLOPs: 2604.7184. Time: 44.4120 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #106: GFLOPs: 2102.7116. Time: 55.0150 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #107: GFLOPs: 2027.8944. Time: 57.0448 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #108: GFLOPs: 1401.4644. Time: 82.5428 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #109: GFLOPs: 1184.1913. Time: 97.6876 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #110: GFLOPs: 1664.8420. Time: 69.4845 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #111: GFLOPs: 2433.7211. Time: 47.5325 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #112: GFLOPs: 2191.1012. Time: 52.7957 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #113: GFLOPs: 2105.5187. Time: 54.9417 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #114: GFLOPs: 2880.6962. Time: 40.1572 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #115: GFLOPs: 2257.8548. Time: 51.2348 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #116: GFLOPs: 2479.0378. Time: 46.6636 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #117: GFLOPs: 2866.6859. Time: 40.3535 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #118: GFLOPs: 817.3216. Time: 141.5364 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #119: GFLOPs: 1654.4778. Time: 69.9198 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #120: GFLOPs: 1415.0070. Time: 81.7528 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #121: GFLOPs: 1241.9327. Time: 93.1458 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #122: GFLOPs: 1219.2011. Time: 94.8824 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #123: GFLOPs: 1060.4025. Time: 109.0914 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #124: GFLOPs: 1219.4789. Time: 94.8608 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #125: GFLOPs: 158.4787. Time: 729.9452 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #126: GFLOPs: 406.4824. Time: 284.5899 us. Best GFLOPs: 2978.7069
2024-04-29 09:17:44 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #127: GFLOPs: 168.2056. Time: 687.7342 us. Best GFLOPs: 2978.7069
