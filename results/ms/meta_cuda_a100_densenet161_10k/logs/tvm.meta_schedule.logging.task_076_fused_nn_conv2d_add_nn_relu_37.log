2024-04-29 03:04:41 [INFO] [task_scheduler.cc:160] Initializing Task #76: "fused_nn_conv2d_add_nn_relu_37"
2024-04-29 03:04:41 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(1440), T.int64(14), T.int64(14)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(1440), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 03:04:41 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 03:04:41 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(141120)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1440), ax0_ax1_ax2_ax3_fused // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(98) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(138240)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(1440))
                                    v1 = T.axis.spatial(T.int64(1440), ax0_ax1_ax2_ax3_fused % T.int64(1440))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(720), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(48) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1440), rc_0 * T.int64(1440) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(2), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 2, 24, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 7, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 720, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 03:04:41 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(141120)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1440), ax0_ax1_ax2_ax3_fused // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(98) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(138240)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(1440))
                                    v1 = T.axis.spatial(T.int64(1440), ax0_ax1_ax2_ax3_fused % T.int64(1440))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(720), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(48) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1440), rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(2), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 2, 24, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 7, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 720, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 03:04:41 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1440), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1440), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(98), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(141120)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1440), ax0_ax1_ax2_ax3_fused // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(98) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(138240)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(1440))
                                    v1 = T.axis.spatial(T.int64(1440), ax0_ax1_ax2_ax3_fused % T.int64(1440))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(720), T.int64(1), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(48) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1440), rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(2), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(96) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(49) * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 2, 24, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 7, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 720, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 04:45:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:45:12 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 04:45:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 494 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 1491 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 1986 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:20 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-04-29 04:45:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 04:45:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9994  0.9984  0.9970  0.9961  0.9944  0.9943  0.9942  0.9940  0.9934  0.9927  0.9919  0.9917  0.9911  0.9898  0.9889
[17 : 32]:	0.9877  0.9867  0.9865  0.9857  0.9856  0.9853  0.9852  0.9841  0.9829  0.9828  0.9818  0.9817  0.9815  0.9809  0.9800  0.9793
[33 : 48]:	0.9792  0.9790  0.9782  0.9775  0.9767  0.9758  0.9738  0.9724  0.9724  0.9723  0.9723  0.9720  0.9695  0.9693  0.9685  0.9683
[49 : 64]:	0.9676  0.9675  0.9672  0.9672  0.9668  0.9664  0.9641  0.9636  0.9621  0.9616  0.9607  0.9601  0.9600  0.9592  0.9583  0.9570
2024-04-29 04:45:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:45:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #1: GFLOPs: 1293.4374. Time: 83.8505 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #2: GFLOPs: 147.7410. Time: 734.0916 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #3: GFLOPs: 108.7994. Time: 996.8386 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #4: GFLOPs: 545.0001. Time: 199.0007 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #5: GFLOPs: 300.1450. Time: 361.3434 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #6: GFLOPs: 112.8283. Time: 961.2434 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #7: GFLOPs: 21.3234. Time: 5086.2079 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #8: GFLOPs: 117.7921. Time: 920.7357 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #9: GFLOPs: 37.5702. Time: 2886.7438 us. Best GFLOPs: 1293.4374
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #10: GFLOPs: 1968.8484. Time: 55.0857 us. Best GFLOPs: 1968.8484
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #11: GFLOPs: 418.8651. Time: 258.9269 us. Best GFLOPs: 1968.8484
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #12: GFLOPs: 1260.5729. Time: 86.0366 us. Best GFLOPs: 1968.8484
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #13: GFLOPs: 175.8736. Time: 616.6669 us. Best GFLOPs: 1968.8484
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #14: GFLOPs: 1041.5549. Time: 104.1284 us. Best GFLOPs: 1968.8484
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #15: GFLOPs: 49.3045. Time: 2199.7078 us. Best GFLOPs: 1968.8484
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #16: GFLOPs: 1970.1126. Time: 55.0504 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #17: GFLOPs: 294.0412. Time: 368.8443 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #18: GFLOPs: 1892.7592. Time: 57.3002 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #19: GFLOPs: 356.0174. Time: 304.6351 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #20: GFLOPs: 932.6207. Time: 116.2910 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #21: GFLOPs: 131.1535. Time: 826.9350 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #22: GFLOPs: 489.5387. Time: 221.5462 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #23: GFLOPs: 220.4123. Time: 492.0570 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #24: GFLOPs: 276.3711. Time: 392.4268 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #25: GFLOPs: 59.1341. Time: 1834.0584 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #26: GFLOPs: 161.8117. Time: 670.2569 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #27: GFLOPs: 742.6257. Time: 146.0432 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #28: GFLOPs: 904.5201. Time: 119.9038 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #29: GFLOPs: 564.3197. Time: 192.1879 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #30: GFLOPs: 16.1293. Time: 6724.1302 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #31: GFLOPs: 1890.3223. Time: 57.3740 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #32: GFLOPs: 283.1407. Time: 383.0443 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #33: GFLOPs: 538.3805. Time: 201.4475 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #34: GFLOPs: 324.1289. Time: 334.6058 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #35: GFLOPs: 384.1188. Time: 282.3487 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #36: GFLOPs: 197.1290. Time: 550.1750 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #37: GFLOPs: 320.6902. Time: 338.1938 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #38: GFLOPs: 9.5267. Time: 11384.3764 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #39: GFLOPs: 425.4045. Time: 254.9466 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #40: GFLOPs: 895.3760. Time: 121.1284 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #41: GFLOPs: 67.7258. Time: 1601.3897 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #42: GFLOPs: 80.3285. Time: 1350.1483 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #43: GFLOPs: 92.5300. Time: 1172.1109 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #44: GFLOPs: 115.4036. Time: 939.7927 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #45: GFLOPs: 1107.2055. Time: 97.9542 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #46: GFLOPs: 547.9394. Time: 197.9333 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #47: GFLOPs: 51.5321. Time: 2104.6187 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #48: GFLOPs: 61.4491. Time: 1764.9628 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #49: GFLOPs: 53.1198. Time: 2041.7126 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #50: GFLOPs: 1153.1351. Time: 94.0527 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #51: GFLOPs: 830.2205. Time: 130.6345 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #52: GFLOPs: 326.8956. Time: 331.7739 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #53: GFLOPs: 6.3707. Time: 17023.9995 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #54: GFLOPs: 878.6799. Time: 123.4300 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #55: GFLOPs: 74.0624. Time: 1464.3793 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #56: GFLOPs: 778.2345. Time: 139.3608 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #57: GFLOPs: 96.8672. Time: 1119.6303 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #58: GFLOPs: 696.3600. Time: 155.7462 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #59: GFLOPs: 461.4005. Time: 235.0570 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #60: GFLOPs: 81.8056. Time: 1325.7701 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #61: GFLOPs: 662.1164. Time: 163.8011 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #62: GFLOPs: 1419.3424. Time: 76.4124 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #63: GFLOPs: 298.0920. Time: 363.8320 us. Best GFLOPs: 1970.1126
2024-04-29 06:55:24 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #64: GFLOPs: 299.0343. Time: 362.6855 us. Best GFLOPs: 1970.1126
2024-04-29 09:31:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:31:13 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 09:31:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 427 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 863 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 1293 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:18 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-04-29 09:31:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x11c7c3f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xe876338)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1683d918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xcd8b438)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x11968ad8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x17932298)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x114ef568)]: 0 failure(s)
2024-04-29 09:31:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2342  1.2269  1.2255  1.2085  1.1996  1.1940  1.1702  1.1701  1.1688  1.1618  1.1610  1.1501  1.1500  1.1355  1.1210  1.1168
[17 : 32]:	1.1013  1.0913  1.0839  1.0795  1.0771  1.0767  1.0735  1.0723  1.0699  1.0677  1.0669  1.0663  1.0597  1.0574  1.0557  1.0530
[33 : 48]:	1.0493  1.0477  1.0445  1.0427  1.0412  1.0390  1.0387  1.0312  1.0298  1.0203  1.0148  1.0142  1.0128  1.0109  1.0103  1.0084
[49 : 64]:	1.0068  1.0031  1.0030  1.0010  1.0010  1.0002  1.0001  0.9968  0.9964  0.9956  0.9921  0.9896  0.9891  0.9884  0.9875  0.9874
2024-04-29 09:31:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:31:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #65: GFLOPs: 2308.1263. Time: 46.9885 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #66: GFLOPs: 1566.6322. Time: 69.2284 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #67: GFLOPs: 2104.7213. Time: 51.5296 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #68: GFLOPs: 1291.5770. Time: 83.9713 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #69: GFLOPs: 2092.9802. Time: 51.8187 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #70: GFLOPs: 1227.7012. Time: 88.3402 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #71: GFLOPs: 2196.0262. Time: 49.3871 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #72: GFLOPs: 2068.1025. Time: 52.4420 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #73: GFLOPs: 2054.4996. Time: 52.7892 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #74: GFLOPs: 2195.6492. Time: 49.3956 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #75: GFLOPs: 1981.9300. Time: 54.7221 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #76: GFLOPs: 2252.2006. Time: 48.1553 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #77: GFLOPs: 2057.4354. Time: 52.7139 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #78: GFLOPs: 1877.1486. Time: 57.7767 us. Best GFLOPs: 2308.1263
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #79: GFLOPs: 2402.2455. Time: 45.1475 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #80: GFLOPs: 1714.1949. Time: 63.2690 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #81: GFLOPs: 1857.5749. Time: 58.3855 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #82: GFLOPs: 1820.4466. Time: 59.5763 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #83: GFLOPs: 1983.9064. Time: 54.6676 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #84: GFLOPs: 1912.5824. Time: 56.7063 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #85: GFLOPs: 1682.2541. Time: 64.4703 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #86: GFLOPs: 1906.5838. Time: 56.8847 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #87: GFLOPs: 1587.3446. Time: 68.3251 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #88: GFLOPs: 2042.4717. Time: 53.1001 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #89: GFLOPs: 1342.6460. Time: 80.7774 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #90: GFLOPs: 1530.7025. Time: 70.8534 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #91: GFLOPs: 1692.2482. Time: 64.0896 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #92: GFLOPs: 1618.2563. Time: 67.0199 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #93: GFLOPs: 2161.0357. Time: 50.1868 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #94: GFLOPs: 1536.4290. Time: 70.5893 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #95: GFLOPs: 2245.8900. Time: 48.2906 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #96: GFLOPs: 1617.1440. Time: 67.0660 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #97: GFLOPs: 1598.7764. Time: 67.8365 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #98: GFLOPs: 2132.1217. Time: 50.8674 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #99: GFLOPs: 2034.7543. Time: 53.3015 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #100: GFLOPs: 1713.4273. Time: 63.2974 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #101: GFLOPs: 2109.3542. Time: 51.4164 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #102: GFLOPs: 1597.3656. Time: 67.8964 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #103: GFLOPs: 1638.6045. Time: 66.1877 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #104: GFLOPs: 2158.6307. Time: 50.2427 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #105: GFLOPs: 1934.2354. Time: 56.0715 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #106: GFLOPs: 2319.2790. Time: 46.7626 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #107: GFLOPs: 1589.2604. Time: 68.2427 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #108: GFLOPs: 1903.8303. Time: 56.9670 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #109: GFLOPs: 2172.1730. Time: 49.9295 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #110: GFLOPs: 1538.5235. Time: 70.4932 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #111: GFLOPs: 1626.1780. Time: 66.6934 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #112: GFLOPs: 1786.8743. Time: 60.6956 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #113: GFLOPs: 1703.8183. Time: 63.6543 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #114: GFLOPs: 1589.3712. Time: 68.2379 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #115: GFLOPs: 1707.6150. Time: 63.5128 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #116: GFLOPs: 1606.3861. Time: 67.5152 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #117: GFLOPs: 1606.5131. Time: 67.5098 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #118: GFLOPs: 1884.5645. Time: 57.5493 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #119: GFLOPs: 1875.3959. Time: 57.8307 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #120: GFLOPs: 1776.4336. Time: 61.0523 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #121: GFLOPs: 1557.1660. Time: 69.6492 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #122: GFLOPs: 1681.4257. Time: 64.5021 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #123: GFLOPs: 2388.6851. Time: 45.4038 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #124: GFLOPs: 1903.4036. Time: 56.9797 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #125: GFLOPs: 2230.6253. Time: 48.6211 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #126: GFLOPs: 250.3097. Time: 433.2849 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #127: GFLOPs: 566.9095. Time: 191.3100 us. Best GFLOPs: 2402.2455
2024-04-29 09:33:29 [INFO] [task_scheduler.cc:131] [Task #76: fused_nn_conv2d_add_nn_relu_37] Trial #128: GFLOPs: 1270.0968. Time: 85.3915 us. Best GFLOPs: 2402.2455
