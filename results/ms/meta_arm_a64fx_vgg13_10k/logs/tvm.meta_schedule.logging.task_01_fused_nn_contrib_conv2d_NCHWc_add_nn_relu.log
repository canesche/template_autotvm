2024-04-29 10:01:24 [INFO] [task_scheduler.cc:160] Initializing Task #1: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu"
2024-04-29 10:01:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(225) and T.int64(1) <= v_i3 and v_i3 < T.int64(225), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32), T.int64(3), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 10:01:25 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 10:01:25 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
            for n_0, oc_chunk_0 in T.grid(T.int64(1), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)):
                    with T.block("data_pad"):
                        v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(225) and T.int64(1) <= v_i3 and v_i3 < T.int64(225), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(4), T.int64(3), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(8)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(224), oh_0 * T.int64(112) + oh_1 * T.int64(56) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(224), ow_0 * T.int64(112) + ow_1 * T.int64(56) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2 * T.int64(8) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(3), ic_0 * T.int64(3) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 4, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 4, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 10:01:25 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
            for n_0, oc_chunk_0 in T.grid(T.int64(1), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)):
                    with T.block("data_pad"):
                        v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(225) and T.int64(1) <= v_i3 and v_i3 < T.int64(225), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(4), T.int64(3), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(8)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(224), oh_0 * T.int64(112) + oh_1 * T.int64(56) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(224), ow_0 * T.int64(112) + ow_1 * T.int64(56) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2 * T.int64(8) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(3), ic_0 * T.int64(3) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(2), oc_chunk_0 + ax1)
                            v_ax2 = T.axis.spatial(T.int64(224), oh_0 * T.int64(112) + oh_1 * T.int64(56) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(224), ow_0 * T.int64(112) + ow_1 * T.int64(56) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 4, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 4, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 10:01:25 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(114), T.int64(114), T.int64(3)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(226), oh_0 * T.int64(112) + ax2)
                        v_i3 = T.axis.spatial(T.int64(226), ow_0 * T.int64(112) + ax3)
                        v_i4 = T.axis.spatial(T.int64(3), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(225) and T.int64(1) <= v_i3 and v_i3 < T.int64(225), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_0 in range(T.int64(1)):
                    for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(4), T.int64(3), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(8)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(224), oh_0 * T.int64(112) + oh_1 * T.int64(56) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(224), ow_0 * T.int64(112) + ow_1 * T.int64(56) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2 * T.int64(8) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(3), ic_0 * T.int64(3) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(112), T.int64(112), T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(2), oc_chunk_0 + ax1)
                            v_ax2 = T.axis.spatial(T.int64(224), oh_0 * T.int64(112) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(224), ow_0 * T.int64(112) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 4, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 4, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 10:02:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:02:47 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 10:02:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 10:02:53 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 10:02:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 10:03:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 10:03:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 10:03:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 10:03:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9996  0.9994  0.9993  0.9993  0.9986  0.9985  0.9983  0.9982  0.9982  0.9979  0.9979  0.9975  0.9970  0.9966  0.9966
[17 : 32]:	0.9965  0.9963  0.9963  0.9958  0.9953  0.9941  0.9941  0.9938  0.9938  0.9925  0.9914  0.9910  0.9907  0.9902  0.9900  0.9893
[33 : 48]:	0.9890  0.9889  0.9886  0.9876  0.9875  0.9868  0.9848  0.9844  0.9842  0.9838  0.9818  0.9817  0.9815  0.9807  0.9783  0.9775
[49 : 64]:	0.9762  0.9752  0.9743  0.9738  0.9734  0.9734  0.9719  0.9717  0.9716  0.9713  0.9698  0.9697  0.9694  0.9684  0.9682  0.9678
2024-04-29 10:03:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:03:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #1: GFLOPs: 4.7802. Time: 37620.0493 us. Best GFLOPs: 4.7802
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #2: GFLOPs: 72.2780. Time: 2488.0422 us. Best GFLOPs: 72.2780
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #3: GFLOPs: 14.8787. Time: 12086.4352 us. Best GFLOPs: 72.2780
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #4: GFLOPs: 8.6318. Time: 20833.5174 us. Best GFLOPs: 72.2780
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #5: GFLOPs: 45.3352. Time: 3966.6919 us. Best GFLOPs: 72.2780
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #6: GFLOPs: 29.2644. Time: 6145.0359 us. Best GFLOPs: 72.2780
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #7: GFLOPs: 83.6427. Time: 2149.9871 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #8: GFLOPs: 10.2989. Time: 17461.2078 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #9: GFLOPs: 71.7312. Time: 2507.0085 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #10: GFLOPs: 16.3616. Time: 10991.0567 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #11: GFLOPs: 27.8258. Time: 6462.7398 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #12: GFLOPs: 62.7891. Time: 2864.0437 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #13: GFLOPs: 76.3075. Time: 2356.6583 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #14: GFLOPs: 46.0046. Time: 3908.9720 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #15: GFLOPs: 8.4957. Time: 21167.3492 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #16: GFLOPs: 9.4784. Time: 18972.6527 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #17: GFLOPs: 74.8367. Time: 2402.9762 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #18: GFLOPs: 2.8961. Time: 62093.1327 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #19: GFLOPs: 41.7515. Time: 4307.1656 us. Best GFLOPs: 83.6427
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #20: GFLOPs: 128.2595. Time: 1402.0850 us. Best GFLOPs: 128.2595
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #21: GFLOPs: 113.0460. Time: 1590.7758 us. Best GFLOPs: 128.2595
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #22: GFLOPs: 86.8618. Time: 2070.3083 us. Best GFLOPs: 128.2595
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #23: GFLOPs: 36.2927. Time: 4955.0164 us. Best GFLOPs: 128.2595
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #24: GFLOPs: 129.1774. Time: 1392.1228 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #25: GFLOPs: 89.2740. Time: 2014.3697 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #26: GFLOPs: 4.2994. Time: 41827.4193 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:121] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #27: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(226), T.int64(226), T.int64(3)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1 in T.grid(T.int64(1), T.int64(1), T.int64(7)):
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(1), T.int64(10)):
                    for ax3_ax4_fused in T.vectorized(T.int64(30)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(226), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(56) + oh_1 * T.int64(8) + ax2)
                            v_i3 = T.axis.spatial(T.int64(226), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(2) * T.int64(8) + ax3_ax4_fused // T.int64(3))
                            v_i4 = T.axis.spatial(T.int64(3), ax3_ax4_fused % T.int64(3))
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(225) and T.int64(1) <= v_i3 and v_i3 < T.int64(225), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(56) + oh_1 * T.int64(8) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(2) * T.int64(8) + ow_1 * T.int64(8) + ow_2_init * T.int64(8) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(56) + oh_1 * T.int64(8) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(2) * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(8) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(3), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(3), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(3)] * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(8)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(56) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(2) * T.int64(8) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 7, 8, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[28, 1, 1, 8])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85 = sch.fuse(l82, l83, preserve_unit_iters=True)
sch.vectorize(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b69)
l108 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l108)
sch.annotate(block_or_loop=l108, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l108, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b116)
b139 = sch.decompose_reduction(block=b116, loop=l123)
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #28: GFLOPs: 1.8116. Time: 99266.7610 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #29: GFLOPs: 8.4444. Time: 21295.8594 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #30: GFLOPs: 37.0584. Time: 4852.6347 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #31: GFLOPs: 8.5454. Time: 21044.1210 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #32: GFLOPs: 115.9043. Time: 1551.5454 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #33: GFLOPs: 64.7133. Time: 2778.8835 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #34: GFLOPs: 32.9545. Time: 5456.9477 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #35: GFLOPs: 7.6699. Time: 23446.1510 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #36: GFLOPs: 56.9775. Time: 3156.1716 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #37: GFLOPs: 9.5648. Time: 18801.2513 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #38: GFLOPs: 70.5131. Time: 2550.3185 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:121] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #39: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(28)):
                for ow_3_oc_block_3_fused_init in T.vectorized(T.int64(32)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(14) * T.int64(56) + oh_2_init * T.int64(28) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(16) + ow_2_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2_init * T.int64(32) + ow_3_oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3 in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(28)):
                for ow_3_oc_block_3_fused in T.vectorized(T.int64(32)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(14) * T.int64(56) + oh_2 * T.int64(28) + oh_3)
                        v_ow = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(16) + ow_2)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2 * T.int64(32) + ow_3_oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(3), ic_0 * T.int64(3) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(3), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(225) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(225), p0[v_n, v_ic // T.int64(3), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(3)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(56), T.int64(16)):
                for ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(14) * T.int64(56) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(16) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 2, 28])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 16, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 32])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69 = sch.get_child_blocks(b67)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b68)
l96 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l96)
l97 = sch.fuse(l94, l95, preserve_unit_iters=True)
sch.vectorize(loop=l97)
sch.annotate(block_or_loop=l96, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l96, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b105)
b122 = sch.decompose_reduction(block=b105, loop=l107)
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #40: GFLOPs: 65.9634. Time: 2726.2219 us. Best GFLOPs: 129.1774
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #41: GFLOPs: 252.9786. Time: 710.8538 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #42: GFLOPs: 46.2996. Time: 3884.0716 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #43: GFLOPs: 79.3844. Time: 2265.3157 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #44: GFLOPs: 15.3431. Time: 11720.6600 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #45: GFLOPs: 56.5956. Time: 3177.4682 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #46: GFLOPs: 76.7728. Time: 2342.3757 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #47: GFLOPs: 15.8038. Time: 11378.9845 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #48: GFLOPs: 6.3203. Time: 28452.8485 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #49: GFLOPs: 176.3376. Time: 1019.8096 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #50: GFLOPs: 75.6584. Time: 2376.8777 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #51: GFLOPs: 44.8930. Time: 4005.7682 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #52: GFLOPs: 58.6376. Time: 3066.8147 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #53: GFLOPs: 67.2733. Time: 2673.1390 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #54: GFLOPs: 32.1523. Time: 5593.0959 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #55: GFLOPs: 8.7869. Time: 20465.8950 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #56: GFLOPs: 220.0742. Time: 817.1371 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #57: GFLOPs: 72.5002. Time: 2480.4161 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #58: GFLOPs: 31.8741. Time: 5641.9078 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #59: GFLOPs: 117.1423. Time: 1535.1480 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #60: GFLOPs: 3.5691. Time: 50386.0500 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #61: GFLOPs: 1.5435. Time: 116511.8973 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #62: GFLOPs: 10.0616. Time: 17873.0110 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #63: GFLOPs: 14.8859. Time: 12080.6068 us. Best GFLOPs: 252.9786
2024-04-29 11:11:01 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #64: GFLOPs: 171.1240. Time: 1050.8798 us. Best GFLOPs: 252.9786
2024-04-29 13:46:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 13:46:29 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 13:46:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 13:46:34 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 13:46:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 13:47:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 13:47:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 13:47:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 13:47:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2172  1.2172  1.2172  1.2054  1.2016  1.1843  1.1843  1.1797  1.1731  1.1579  1.1579  1.1280  1.0952  1.0952  1.0844  1.0544
[17 : 32]:	1.0544  1.0544  1.0174  0.9969  0.9969  0.9969  0.9969  0.9951  0.9922  0.9871  0.9871  0.9410  0.9173  0.9140  0.9108  0.9073
[33 : 48]:	0.9045  0.9045  0.9018  0.9018  0.8870  0.8863  0.8859  0.8859  0.8830  0.8812  0.8645  0.8645  0.8645  0.8640  0.8503  0.8498
[49 : 64]:	0.8374  0.8296  0.8148  0.8126  0.8035  0.7978  0.7879  0.7879  0.7847  0.7832  0.7788  0.7788  0.7788  0.7788  0.7641  0.7641
2024-04-29 13:47:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 13:47:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #65: GFLOPs: 153.8755. Time: 1168.6773 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #66: GFLOPs: 163.4108. Time: 1100.4830 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #67: GFLOPs: 165.2074. Time: 1088.5153 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #68: GFLOPs: 186.1357. Time: 966.1271 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #69: GFLOPs: 159.7375. Time: 1125.7895 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #70: GFLOPs: 173.1521. Time: 1038.5715 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #71: GFLOPs: 142.7611. Time: 1259.6622 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #72: GFLOPs: 171.7338. Time: 1047.1487 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #73: GFLOPs: 143.3451. Time: 1254.5308 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #74: GFLOPs: 139.6048. Time: 1288.1420 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #75: GFLOPs: 139.4374. Time: 1289.6880 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #76: GFLOPs: 107.1607. Time: 1678.1419 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #77: GFLOPs: 104.0971. Time: 1727.5297 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #78: GFLOPs: 219.9741. Time: 817.5088 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #79: GFLOPs: 69.4868. Time: 2587.9853 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #80: GFLOPs: 178.4478. Time: 1007.7499 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #81: GFLOPs: 153.6694. Time: 1170.2444 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #82: GFLOPs: 152.2856. Time: 1180.8781 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #83: GFLOPs: 100.8319. Time: 1783.4712 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #84: GFLOPs: 71.1480. Time: 2527.5583 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #85: GFLOPs: 182.9799. Time: 982.7897 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #86: GFLOPs: 133.7225. Time: 1344.8059 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #87: GFLOPs: 95.1750. Time: 1889.4754 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #88: GFLOPs: 150.5779. Time: 1194.2708 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #89: GFLOPs: 150.9528. Time: 1191.3048 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #90: GFLOPs: 247.9710. Time: 725.2090 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #91: GFLOPs: 192.1480. Time: 935.8973 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #92: GFLOPs: 79.9519. Time: 2249.2358 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #93: GFLOPs: 155.4469. Time: 1156.8629 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #94: GFLOPs: 155.0692. Time: 1159.6806 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #95: GFLOPs: 230.7584. Time: 779.3034 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #96: GFLOPs: 214.2100. Time: 839.5070 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #97: GFLOPs: 252.9730. Time: 710.8694 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #98: GFLOPs: 143.5901. Time: 1252.3903 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #99: GFLOPs: 91.5253. Time: 1964.8198 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #100: GFLOPs: 175.7257. Time: 1023.3608 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #101: GFLOPs: 166.8844. Time: 1077.5770 us. Best GFLOPs: 252.9786
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #102: GFLOPs: 300.2973. Time: 598.8426 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #103: GFLOPs: 199.4554. Time: 901.6090 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #104: GFLOPs: 164.6669. Time: 1092.0883 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #105: GFLOPs: 261.8355. Time: 686.8083 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #106: GFLOPs: 145.1361. Time: 1239.0489 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #107: GFLOPs: 157.7109. Time: 1140.2560 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #108: GFLOPs: 127.4224. Time: 1411.2970 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #109: GFLOPs: 218.6736. Time: 822.3708 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #110: GFLOPs: 237.5591. Time: 756.9938 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #111: GFLOPs: 186.2254. Time: 965.6621 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #112: GFLOPs: 243.5838. Time: 738.2707 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #113: GFLOPs: 79.1123. Time: 2273.1083 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #114: GFLOPs: 78.4672. Time: 2291.7966 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #115: GFLOPs: 98.8006. Time: 1820.1388 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #116: GFLOPs: 103.3740. Time: 1739.6135 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #117: GFLOPs: 79.4388. Time: 2263.7662 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #118: GFLOPs: 237.6392. Time: 756.7388 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #119: GFLOPs: 130.6960. Time: 1375.9470 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #120: GFLOPs: 164.1279. Time: 1095.6745 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #121: GFLOPs: 88.5389. Time: 2031.0941 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #122: GFLOPs: 172.8476. Time: 1040.4009 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #123: GFLOPs: 140.9830. Time: 1275.5497 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:121] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #124: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(224), T.int64(224), T.int64(3)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(3), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(224), T.int64(224), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused in T.parallel(T.int64(1568), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(8), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(56) * T.int64(8) + oh_1 * T.int64(8) + oh_2_init * T.int64(8) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(56) * T.int64(4) + ow_1 * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(56) * T.int64(8) + oh_1 * T.int64(8) + oh_2 * T.int64(8) + oh_3)
                            v_ow = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(56) * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(3), ic_0 * T.int64(3) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(3), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(3)], p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(225) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(225), p0[v_n, v_ic // T.int64(3), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(3)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(3), v_kh, v_kw, v_ic % T.int64(3), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(8), T.int64(4)):
                    for ax4_fused in T.vectorized(T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                            v_ax2 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(56) * T.int64(8) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(56) * T.int64(4) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[28, 1, 1, 8])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[56, 1, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69 = sch.get_child_blocks(b67)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b68)
l96 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l96)
l97 = sch.fuse(l95, preserve_unit_iters=True)
sch.vectorize(loop=l97)
sch.annotate(block_or_loop=l96, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l96, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l109, preserve_unit_iters=True)
sch.vectorize(loop=l110)
b111 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b111)
b135 = sch.decompose_reduction(block=b111, loop=l119)
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #125: GFLOPs: 82.1946. Time: 2187.8665 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #126: GFLOPs: 52.2846. Time: 3439.4577 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #127: GFLOPs: 32.2239. Time: 5580.6713 us. Best GFLOPs: 300.2973
2024-04-29 13:49:35 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #128: GFLOPs: 57.4484. Time: 3130.3008 us. Best GFLOPs: 300.2973
2024-04-29 16:05:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:05:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 16:05:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 16:05:56 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 16:06:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 16:06:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 16:06:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 16:06:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 16:06:54 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9470  0.9470  0.9470  0.9470  0.9449  0.8945  0.8945  0.8733  0.8526  0.8526  0.8400  0.8326  0.8326  0.8326  0.8292  0.8246
[17 : 32]:	0.8246  0.8235  0.8226  0.8226  0.8185  0.8185  0.8185  0.8185  0.8163  0.8163  0.8160  0.8160  0.8150  0.8150  0.8150  0.8111
[33 : 48]:	0.8111  0.8111  0.8111  0.8077  0.8044  0.8000  0.7980  0.7975  0.7973  0.7960  0.7960  0.7943  0.7943  0.7903  0.7903  0.7903
[49 : 64]:	0.7900  0.7900  0.7891  0.7891  0.7891  0.7877  0.7877  0.7877  0.7830  0.7830  0.7830  0.7802  0.7802  0.7782  0.7782  0.7781
2024-04-29 16:06:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:06:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #129: GFLOPs: 287.2909. Time: 625.9536 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #130: GFLOPs: 169.9471. Time: 1058.1573 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #131: GFLOPs: 166.3225. Time: 1081.2174 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #132: GFLOPs: 162.0356. Time: 1109.8224 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #133: GFLOPs: 161.2777. Time: 1115.0383 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #134: GFLOPs: 149.8286. Time: 1200.2433 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #135: GFLOPs: 169.7466. Time: 1059.4074 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #136: GFLOPs: 165.5951. Time: 1085.9666 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #137: GFLOPs: 159.9176. Time: 1124.5215 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #138: GFLOPs: 150.8112. Time: 1192.4236 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #139: GFLOPs: 111.7103. Time: 1609.7959 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #140: GFLOPs: 131.9687. Time: 1362.6775 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #141: GFLOPs: 148.6613. Time: 1209.6675 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #142: GFLOPs: 175.0279. Time: 1027.4406 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #143: GFLOPs: 117.2907. Time: 1533.2055 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #144: GFLOPs: 121.5647. Time: 1479.3015 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #145: GFLOPs: 154.8743. Time: 1161.1405 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #146: GFLOPs: 135.3240. Time: 1328.8905 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #147: GFLOPs: 203.7032. Time: 882.8078 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #148: GFLOPs: 185.5581. Time: 969.1345 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #149: GFLOPs: 154.2667. Time: 1165.7138 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #150: GFLOPs: 97.0803. Time: 1852.3926 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #151: GFLOPs: 102.4073. Time: 1756.0341 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #152: GFLOPs: 182.3328. Time: 986.2779 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #153: GFLOPs: 168.9078. Time: 1064.6681 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #154: GFLOPs: 145.8572. Time: 1232.9240 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #155: GFLOPs: 146.4230. Time: 1228.1594 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #156: GFLOPs: 158.0124. Time: 1138.0805 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #157: GFLOPs: 65.8306. Time: 2731.7183 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #158: GFLOPs: 117.7254. Time: 1527.5440 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #159: GFLOPs: 126.4817. Time: 1421.7933 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #160: GFLOPs: 193.3499. Time: 930.0794 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #161: GFLOPs: 204.8033. Time: 878.0661 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #162: GFLOPs: 87.0090. Time: 2066.8057 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #163: GFLOPs: 149.1158. Time: 1205.9806 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #164: GFLOPs: 225.2152. Time: 798.4843 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #165: GFLOPs: 115.2072. Time: 1560.9336 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #166: GFLOPs: 244.7435. Time: 734.7724 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #167: GFLOPs: 126.7984. Time: 1418.2412 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #168: GFLOPs: 197.8068. Time: 909.1231 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #169: GFLOPs: 156.3781. Time: 1149.9740 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #170: GFLOPs: 171.1673. Time: 1050.6139 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #171: GFLOPs: 163.3883. Time: 1100.6345 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #172: GFLOPs: 164.0151. Time: 1096.4281 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #173: GFLOPs: 282.2630. Time: 637.1035 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #174: GFLOPs: 115.3859. Time: 1558.5155 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #175: GFLOPs: 130.3623. Time: 1379.4693 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #176: GFLOPs: 152.7598. Time: 1177.2126 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #177: GFLOPs: 159.1685. Time: 1129.8138 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #178: GFLOPs: 142.2945. Time: 1263.7931 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #179: GFLOPs: 160.3839. Time: 1121.2519 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #180: GFLOPs: 175.5310. Time: 1024.4959 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #181: GFLOPs: 168.6464. Time: 1066.3186 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #182: GFLOPs: 152.2601. Time: 1181.0761 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #183: GFLOPs: 153.4347. Time: 1172.0345 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #184: GFLOPs: 142.7194. Time: 1260.0301 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #185: GFLOPs: 71.7229. Time: 2507.3003 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #186: GFLOPs: 123.3708. Time: 1457.6447 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #187: GFLOPs: 86.7363. Time: 2073.3042 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #188: GFLOPs: 156.6262. Time: 1148.1523 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #189: GFLOPs: 131.9772. Time: 1362.5893 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #190: GFLOPs: 52.8669. Time: 3401.5740 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #191: GFLOPs: 42.1715. Time: 4264.2720 us. Best GFLOPs: 300.2973
2024-04-29 16:08:51 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #192: GFLOPs: 13.4502. Time: 13370.0883 us. Best GFLOPs: 300.2973
2024-04-29 18:11:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:11:50 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 18:11:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 18:11:55 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 18:12:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 18:12:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 18:12:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 18:12:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31b60f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x39a3258)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3664218)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x32b80a8)]: 0 failure(s)
2024-04-29 18:12:54 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8019  0.7863  0.7845  0.7836  0.7836  0.7836  0.7691  0.7691  0.7620  0.7620  0.7592  0.7547  0.7470  0.7470  0.7470  0.7470
[17 : 32]:	0.7455  0.7433  0.7417  0.7373  0.7373  0.7368  0.7348  0.7348  0.7342  0.7297  0.7294  0.7294  0.7294  0.7289  0.7228  0.7101
[33 : 48]:	0.7052  0.7052  0.7052  0.7043  0.7008  0.7008  0.6929  0.6929  0.6929  0.6929  0.6929  0.6929  0.6928  0.6928  0.6847  0.6847
[49 : 64]:	0.6847  0.6846  0.6846  0.6846  0.6846  0.6803  0.6803  0.6803  0.6774  0.6774  0.6774  0.6765  0.6764  0.6758  0.6722  0.6714
2024-04-29 18:12:54 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:12:54 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #193: GFLOPs: 182.7218. Time: 984.1782 us. Best GFLOPs: 300.2973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #194: GFLOPs: 198.9556. Time: 903.8741 us. Best GFLOPs: 300.2973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #195: GFLOPs: 295.7091. Time: 608.1340 us. Best GFLOPs: 300.2973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #196: GFLOPs: 255.0625. Time: 705.0460 us. Best GFLOPs: 300.2973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #197: GFLOPs: 166.8408. Time: 1077.8583 us. Best GFLOPs: 300.2973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #198: GFLOPs: 165.5149. Time: 1086.4929 us. Best GFLOPs: 300.2973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #199: GFLOPs: 319.2509. Time: 563.2899 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #200: GFLOPs: 124.9460. Time: 1439.2681 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #201: GFLOPs: 261.0063. Time: 688.9901 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #202: GFLOPs: 166.4849. Time: 1080.1630 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #203: GFLOPs: 202.4705. Time: 888.1825 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #204: GFLOPs: 197.7728. Time: 909.2798 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #205: GFLOPs: 174.6354. Time: 1029.7501 us. Best GFLOPs: 319.2509
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #206: GFLOPs: 429.5973. Time: 418.6032 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #207: GFLOPs: 236.0270. Time: 761.9077 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #208: GFLOPs: 361.3265. Time: 497.6961 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #209: GFLOPs: 182.0319. Time: 987.9082 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #210: GFLOPs: 180.3898. Time: 996.9010 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #211: GFLOPs: 152.8721. Time: 1176.3478 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #212: GFLOPs: 97.6522. Time: 1841.5434 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #213: GFLOPs: 280.3341. Time: 641.4874 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #214: GFLOPs: 228.6580. Time: 786.4617 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #215: GFLOPs: 170.7449. Time: 1053.2134 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #216: GFLOPs: 181.0118. Time: 993.4753 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #217: GFLOPs: 196.1123. Time: 916.9786 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #218: GFLOPs: 120.8738. Time: 1487.7559 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #219: GFLOPs: 183.2158. Time: 981.5245 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #220: GFLOPs: 169.3382. Time: 1061.9625 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #221: GFLOPs: 194.6259. Time: 923.9817 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #222: GFLOPs: 296.5395. Time: 606.4311 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #223: GFLOPs: 179.7772. Time: 1000.2981 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #224: GFLOPs: 180.7868. Time: 994.7117 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #225: GFLOPs: 149.1181. Time: 1205.9621 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #226: GFLOPs: 156.0230. Time: 1152.5916 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #227: GFLOPs: 270.9355. Time: 663.7402 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #228: GFLOPs: 148.3516. Time: 1212.1929 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #229: GFLOPs: 192.5869. Time: 933.7643 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #230: GFLOPs: 100.9239. Time: 1781.8462 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #231: GFLOPs: 183.4476. Time: 980.2841 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #232: GFLOPs: 121.3703. Time: 1481.6705 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #233: GFLOPs: 220.6421. Time: 815.0339 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #234: GFLOPs: 194.0385. Time: 926.7787 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #235: GFLOPs: 148.0008. Time: 1215.0660 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #236: GFLOPs: 152.6639. Time: 1177.9519 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #237: GFLOPs: 150.5780. Time: 1194.2696 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #238: GFLOPs: 177.6550. Time: 1012.2470 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #239: GFLOPs: 83.2682. Time: 2159.6572 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #240: GFLOPs: 104.1099. Time: 1727.3167 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #241: GFLOPs: 116.7973. Time: 1539.6833 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #242: GFLOPs: 210.1961. Time: 855.5383 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #243: GFLOPs: 138.0097. Time: 1303.0301 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #244: GFLOPs: 237.5570. Time: 757.0006 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #245: GFLOPs: 173.5174. Time: 1036.3845 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #246: GFLOPs: 150.8580. Time: 1192.0530 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #247: GFLOPs: 207.0752. Time: 868.4324 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #248: GFLOPs: 193.0750. Time: 931.4035 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #249: GFLOPs: 163.4700. Time: 1100.0844 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #250: GFLOPs: 126.3185. Time: 1423.6303 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #251: GFLOPs: 183.9974. Time: 977.3550 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #252: GFLOPs: 167.7600. Time: 1071.9524 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #253: GFLOPs: 193.4120. Time: 929.7810 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #254: GFLOPs: 47.5257. Time: 3783.8641 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #255: GFLOPs: 61.8833. Time: 2905.9641 us. Best GFLOPs: 429.5973
2024-04-29 18:15:05 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add_nn_relu] Trial #256: GFLOPs: 107.4356. Time: 1673.8475 us. Best GFLOPs: 429.5973
